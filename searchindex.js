Search.setIndex({"alltitles": {"API Reference": [[157, "api-reference"]], "Concepts": [[158, null]], "Installation": [[159, null]], "Introduction": [[157, "introduction"]], "Paramaters": [[22, "paramaters"]], "Possible entries": [[10, "possible-entries"]], "Preprocessor Nodes": [[158, "preprocessor-nodes"]], "Quickstart": [[160, null]], "The Pipeline or Algorithm Tree": [[158, "the-pipeline-or-algorithm-tree"]], "Tutorials": [[161, null]], "Users\u2019s Guide": [[157, "users-s-guide"]], "Welcome to Cuvis AI\u2019s documentation!": [[157, null]], "cuvis_ai": [[0, null]], "cuvis_ai.data": [[1, null]], "cuvis_ai.data.BaseDataSet": [[2, null]], "cuvis_ai.data.BaseDataSet.BaseDataSet": [[3, null]], "cuvis_ai.data.CuvisDataSet": [[4, null]], "cuvis_ai.data.Labels2TV": [[5, null]], "cuvis_ai.data.Labels2TV.RLE2mask": [[6, null]], "cuvis_ai.data.Labels2TV.convert_COCO2TV": [[7, null]], "cuvis_ai.data.LiveCuvisDataLoader": [[8, null]], "cuvis_ai.data.MetadataUtils": [[9, null]], "cuvis_ai.data.MetadataUtils.C_ATTRIB_LIST": [[10, null]], "cuvis_ai.data.MetadataUtils.metadataInit": [[11, null]], "cuvis_ai.data.NumpyDataSet": [[12, null]], "cuvis_ai.data.OutputFormat": [[13, null]], "cuvis_ai.data.PublicDataSets": [[14, null]], "cuvis_ai.data.utils_dataloader": [[15, null]], "cuvis_ai.data.utils_dataloader.cuvis_collate": [[16, null]], "cuvis_ai.data.utils_dataloader.get_dataloader_from_dataset": [[17, null]], "cuvis_ai.deciders": [[18, null]], "cuvis_ai.deciders.base_decider": [[19, null]], "cuvis_ai.deciders.base_decider.BaseDecider": [[20, null]], "cuvis_ai.deciders.binary_decider": [[21, null]], "cuvis_ai.deciders.binary_decider.BinaryDecider": [[22, null]], "cuvis_ai.deciders.cascaded_decider": [[23, null]], "cuvis_ai.deciders.cascaded_decider.Cascaded": [[24, null]], "cuvis_ai.deciders.combining_decider": [[25, null]], "cuvis_ai.deciders.combining_decider.CombiningDecider": [[26, null]], "cuvis_ai.deciders.combining_decider.all_agree": [[27, null]], "cuvis_ai.deciders.combining_decider.at_least_n_agree": [[28, null]], "cuvis_ai.deciders.multiclass_decider": [[29, null]], "cuvis_ai.deciders.multiclass_decider.MultiClassDecider": [[30, null]], "cuvis_ai.distance": [[31, null]], "cuvis_ai.distance.distance": [[32, null]], "cuvis_ai.distance.distance.AbstractDistance": [[33, null]], "cuvis_ai.distance.distance.Canberra": [[34, null]], "cuvis_ai.distance.distance.ECS": [[35, null]], "cuvis_ai.distance.distance.Euclidean": [[36, null]], "cuvis_ai.distance.distance.GFC": [[37, null]], "cuvis_ai.distance.distance.Manhattan": [[38, null]], "cuvis_ai.distance.distance.Minkowski": [[39, null]], "cuvis_ai.distance.distance.SpectralAngle": [[40, null]], "cuvis_ai.node": [[41, null]], "cuvis_ai.node.Consumers": [[42, null]], "cuvis_ai.node.Consumers.CubeConsumer": [[43, null]], "cuvis_ai.node.Consumers.LabelConsumer": [[44, null]], "cuvis_ai.node.Consumers.LabelConsumerInference": [[45, null]], "cuvis_ai.node.Consumers.MetadataConsumer": [[46, null]], "cuvis_ai.node.Consumers.MetadataConsumerInference": [[47, null]], "cuvis_ai.node.node": [[48, null]], "cuvis_ai.node.node.Node": [[49, null]], "cuvis_ai.pipeline": [[50, null]], "cuvis_ai.pipeline.graph": [[51, null]], "cuvis_ai.pipeline.graph.Graph": [[52, null]], "cuvis_ai.preprocessor": [[53, null]], "cuvis_ai.preprocessor.base_preprocessor": [[54, null]], "cuvis_ai.preprocessor.base_preprocessor.Preprocessor": [[55, null]], "cuvis_ai.preprocessor.nmf": [[56, null]], "cuvis_ai.preprocessor.nmf.NMF": [[57, null]], "cuvis_ai.preprocessor.pca": [[58, null]], "cuvis_ai.preprocessor.pca.PCA": [[59, null]], "cuvis_ai.supervised": [[60, null]], "cuvis_ai.supervised.base_supervised": [[61, null]], "cuvis_ai.supervised.base_supervised.BaseSupervised": [[62, null]], "cuvis_ai.supervised.lda": [[63, null]], "cuvis_ai.supervised.lda.LDA": [[64, null]], "cuvis_ai.supervised.qda": [[65, null]], "cuvis_ai.supervised.qda.QDA": [[66, null]], "cuvis_ai.supervised.skorch_supervised": [[67, null]], "cuvis_ai.supervised.skorch_supervised.SkorchSupervised": [[68, null]], "cuvis_ai.supervised.svm": [[69, null]], "cuvis_ai.supervised.svm.SVM": [[70, null]], "cuvis_ai.test": [[71, null]], "cuvis_ai.test.test_numpy_utils": [[72, null]], "cuvis_ai.test.test_numpy_utils.TestNumpyUtils": [[73, null]], "cuvis_ai.test.test_pipeline_graph": [[74, null]], "cuvis_ai.test.test_preprocessor_structural": [[75, null]], "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode": [[76, null]], "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF": [[77, null]], "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA": [[78, null]], "cuvis_ai.test.test_serialization": [[79, null]], "cuvis_ai.test.test_serialization.TestNodeSerialization": [[80, null]], "cuvis_ai.test.test_serialization.TestPreprocessorNMF": [[81, null]], "cuvis_ai.test.test_serialization.TestPreprocessorPCA": [[82, null]], "cuvis_ai.test.test_serialization.TestSupervisedLDA": [[83, null]], "cuvis_ai.test.test_serialization.TestSupervisedQDA": [[84, null]], "cuvis_ai.test.test_serialization.TestSupervisedSVM": [[85, null]], "cuvis_ai.test.test_serialization.TestTransformationReflectance": [[86, null]], "cuvis_ai.test.test_serialization.TestTransformationTorch": [[87, null]], "cuvis_ai.test.test_serialization.TestTransformationTorchVision": [[88, null]], "cuvis_ai.test.test_serialization.TestUnsupervisedGMM": [[89, null]], "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans": [[90, null]], "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift": [[91, null]], "cuvis_ai.test.test_unsupervised_structural": [[92, null]], "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM": [[93, null]], "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans": [[94, null]], "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode": [[95, null]], "cuvis_ai.transformation": [[96, null]], "cuvis_ai.transformation.base_transformation": [[97, null]], "cuvis_ai.transformation.base_transformation.BaseTransformation": [[98, null]], "cuvis_ai.transformation.reflectance": [[99, null]], "cuvis_ai.transformation.reflectance.Reflectance": [[100, null]], "cuvis_ai.transformation.torch_transformation": [[101, null]], "cuvis_ai.transformation.torch_transformation.TorchTransformation": [[102, null]], "cuvis_ai.transformation.torchvision_transformation": [[103, null]], "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation": [[104, null]], "cuvis_ai.tv_transforms": [[105, null]], "cuvis_ai.tv_transforms.Bandpass": [[106, null]], "cuvis_ai.tv_transforms.Bandpass.call_super_init": [[107, null]], "cuvis_ai.tv_transforms.Bandpass.dump_patches": [[108, null]], "cuvis_ai.tv_transforms.Bandpass.training": [[109, null]], "cuvis_ai.tv_transforms.MultiBandpass": [[110, null]], "cuvis_ai.tv_transforms.MultiBandpass.call_super_init": [[111, null]], "cuvis_ai.tv_transforms.MultiBandpass.dump_patches": [[112, null]], "cuvis_ai.tv_transforms.MultiBandpass.training": [[113, null]], "cuvis_ai.tv_transforms.NormalizeStdDev": [[114, null]], "cuvis_ai.tv_transforms.NormalizeStdDev.call_super_init": [[115, null]], "cuvis_ai.tv_transforms.NormalizeStdDev.dump_patches": [[116, null]], "cuvis_ai.tv_transforms.NormalizeStdDev.training": [[117, null]], "cuvis_ai.tv_transforms.NormalizeToFloat": [[118, null]], "cuvis_ai.tv_transforms.NormalizeToFloat.call_super_init": [[119, null]], "cuvis_ai.tv_transforms.NormalizeToFloat.dump_patches": [[120, null]], "cuvis_ai.tv_transforms.NormalizeToFloat.training": [[121, null]], "cuvis_ai.tv_transforms.WavelengthList": [[122, null]], "cuvis_ai.unsupervised": [[123, null]], "cuvis_ai.unsupervised.base_unsupervised": [[124, null]], "cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised": [[125, null]], "cuvis_ai.unsupervised.gmm": [[126, null]], "cuvis_ai.unsupervised.gmm.GMM": [[127, null]], "cuvis_ai.unsupervised.kmeans": [[128, null]], "cuvis_ai.unsupervised.kmeans.KMeans": [[129, null]], "cuvis_ai.unsupervised.mean_shift": [[130, null]], "cuvis_ai.unsupervised.mean_shift.MeanShift": [[131, null]], "cuvis_ai.utils": [[132, null]], "cuvis_ai.utils.nn_config": [[133, null]], "cuvis_ai.utils.nn_config.Adam": [[134, null]], "cuvis_ai.utils.nn_config.Optimizer": [[135, null]], "cuvis_ai.utils.nn_config.SGD": [[136, null]], "cuvis_ai.utils.numpy_utils": [[137, null]], "cuvis_ai.utils.numpy_utils.binary_mask_to_rle": [[138, null]], "cuvis_ai.utils.numpy_utils.check_array_shape": [[139, null]], "cuvis_ai.utils.numpy_utils.flatten_batch_and_labels": [[140, null]], "cuvis_ai.utils.numpy_utils.flatten_batch_and_spatial": [[141, null]], "cuvis_ai.utils.numpy_utils.flatten_labels": [[142, null]], "cuvis_ai.utils.numpy_utils.flatten_spatial": [[143, null]], "cuvis_ai.utils.numpy_utils.gen_coco_labels": [[144, null]], "cuvis_ai.utils.numpy_utils.get_shape_without_batch": [[145, null]], "cuvis_ai.utils.numpy_utils.unflatten_batch_and_labels": [[146, null]], "cuvis_ai.utils.numpy_utils.unflatten_batch_and_spatial": [[147, null]], "cuvis_ai.utils.numpy_utils.unflatten_labels": [[148, null]], "cuvis_ai.utils.numpy_utils.unflatten_spatial": [[149, null]], "cuvis_ai.utils.serializer": [[150, null]], "cuvis_ai.utils.serializer.Serializer": [[151, null]], "cuvis_ai.utils.test": [[152, null]], "cuvis_ai.utils.test.get_np_dummy_data": [[153, null]], "cuvis_ai.utils.visualize": [[154, null]], "cuvis_ai.utils.visualize.visualize_features": [[155, null]], "cuvis_ai.utils.visualize.visualize_image": [[156, null]], "pip installation": [[159, "pip-installation"]]}, "docnames": ["_autosummary/cuvis_ai", "_autosummary/cuvis_ai.data", "_autosummary/cuvis_ai.data.BaseDataSet", "_autosummary/cuvis_ai.data.BaseDataSet.BaseDataSet", "_autosummary/cuvis_ai.data.CuvisDataSet", "_autosummary/cuvis_ai.data.Labels2TV", "_autosummary/cuvis_ai.data.Labels2TV.RLE2mask", "_autosummary/cuvis_ai.data.Labels2TV.convert_COCO2TV", "_autosummary/cuvis_ai.data.LiveCuvisDataLoader", "_autosummary/cuvis_ai.data.MetadataUtils", "_autosummary/cuvis_ai.data.MetadataUtils.C_ATTRIB_LIST", "_autosummary/cuvis_ai.data.MetadataUtils.metadataInit", "_autosummary/cuvis_ai.data.NumpyDataSet", "_autosummary/cuvis_ai.data.OutputFormat", "_autosummary/cuvis_ai.data.PublicDataSets", "_autosummary/cuvis_ai.data.utils_dataloader", "_autosummary/cuvis_ai.data.utils_dataloader.cuvis_collate", "_autosummary/cuvis_ai.data.utils_dataloader.get_dataloader_from_dataset", "_autosummary/cuvis_ai.deciders", "_autosummary/cuvis_ai.deciders.base_decider", "_autosummary/cuvis_ai.deciders.base_decider.BaseDecider", "_autosummary/cuvis_ai.deciders.binary_decider", "_autosummary/cuvis_ai.deciders.binary_decider.BinaryDecider", "_autosummary/cuvis_ai.deciders.cascaded_decider", "_autosummary/cuvis_ai.deciders.cascaded_decider.Cascaded", "_autosummary/cuvis_ai.deciders.combining_decider", "_autosummary/cuvis_ai.deciders.combining_decider.CombiningDecider", "_autosummary/cuvis_ai.deciders.combining_decider.all_agree", "_autosummary/cuvis_ai.deciders.combining_decider.at_least_n_agree", "_autosummary/cuvis_ai.deciders.multiclass_decider", "_autosummary/cuvis_ai.deciders.multiclass_decider.MultiClassDecider", "_autosummary/cuvis_ai.distance", "_autosummary/cuvis_ai.distance.distance", "_autosummary/cuvis_ai.distance.distance.AbstractDistance", "_autosummary/cuvis_ai.distance.distance.Canberra", "_autosummary/cuvis_ai.distance.distance.ECS", "_autosummary/cuvis_ai.distance.distance.Euclidean", "_autosummary/cuvis_ai.distance.distance.GFC", "_autosummary/cuvis_ai.distance.distance.Manhattan", "_autosummary/cuvis_ai.distance.distance.Minkowski", "_autosummary/cuvis_ai.distance.distance.SpectralAngle", "_autosummary/cuvis_ai.node", "_autosummary/cuvis_ai.node.Consumers", "_autosummary/cuvis_ai.node.Consumers.CubeConsumer", "_autosummary/cuvis_ai.node.Consumers.LabelConsumer", "_autosummary/cuvis_ai.node.Consumers.LabelConsumerInference", "_autosummary/cuvis_ai.node.Consumers.MetadataConsumer", "_autosummary/cuvis_ai.node.Consumers.MetadataConsumerInference", "_autosummary/cuvis_ai.node.node", "_autosummary/cuvis_ai.node.node.Node", "_autosummary/cuvis_ai.pipeline", "_autosummary/cuvis_ai.pipeline.graph", "_autosummary/cuvis_ai.pipeline.graph.Graph", "_autosummary/cuvis_ai.preprocessor", "_autosummary/cuvis_ai.preprocessor.base_preprocessor", "_autosummary/cuvis_ai.preprocessor.base_preprocessor.Preprocessor", "_autosummary/cuvis_ai.preprocessor.nmf", "_autosummary/cuvis_ai.preprocessor.nmf.NMF", "_autosummary/cuvis_ai.preprocessor.pca", "_autosummary/cuvis_ai.preprocessor.pca.PCA", "_autosummary/cuvis_ai.supervised", "_autosummary/cuvis_ai.supervised.base_supervised", "_autosummary/cuvis_ai.supervised.base_supervised.BaseSupervised", "_autosummary/cuvis_ai.supervised.lda", "_autosummary/cuvis_ai.supervised.lda.LDA", "_autosummary/cuvis_ai.supervised.qda", "_autosummary/cuvis_ai.supervised.qda.QDA", "_autosummary/cuvis_ai.supervised.skorch_supervised", "_autosummary/cuvis_ai.supervised.skorch_supervised.SkorchSupervised", "_autosummary/cuvis_ai.supervised.svm", "_autosummary/cuvis_ai.supervised.svm.SVM", "_autosummary/cuvis_ai.test", "_autosummary/cuvis_ai.test.test_numpy_utils", "_autosummary/cuvis_ai.test.test_numpy_utils.TestNumpyUtils", "_autosummary/cuvis_ai.test.test_pipeline_graph", "_autosummary/cuvis_ai.test.test_preprocessor_structural", "_autosummary/cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode", "_autosummary/cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF", "_autosummary/cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA", "_autosummary/cuvis_ai.test.test_serialization", "_autosummary/cuvis_ai.test.test_serialization.TestNodeSerialization", "_autosummary/cuvis_ai.test.test_serialization.TestPreprocessorNMF", "_autosummary/cuvis_ai.test.test_serialization.TestPreprocessorPCA", "_autosummary/cuvis_ai.test.test_serialization.TestSupervisedLDA", "_autosummary/cuvis_ai.test.test_serialization.TestSupervisedQDA", "_autosummary/cuvis_ai.test.test_serialization.TestSupervisedSVM", "_autosummary/cuvis_ai.test.test_serialization.TestTransformationReflectance", "_autosummary/cuvis_ai.test.test_serialization.TestTransformationTorch", "_autosummary/cuvis_ai.test.test_serialization.TestTransformationTorchVision", "_autosummary/cuvis_ai.test.test_serialization.TestUnsupervisedGMM", "_autosummary/cuvis_ai.test.test_serialization.TestUnsupervisedKMeans", "_autosummary/cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift", "_autosummary/cuvis_ai.test.test_unsupervised_structural", "_autosummary/cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM", "_autosummary/cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans", "_autosummary/cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode", "_autosummary/cuvis_ai.transformation", "_autosummary/cuvis_ai.transformation.base_transformation", "_autosummary/cuvis_ai.transformation.base_transformation.BaseTransformation", "_autosummary/cuvis_ai.transformation.reflectance", "_autosummary/cuvis_ai.transformation.reflectance.Reflectance", "_autosummary/cuvis_ai.transformation.torch_transformation", "_autosummary/cuvis_ai.transformation.torch_transformation.TorchTransformation", "_autosummary/cuvis_ai.transformation.torchvision_transformation", "_autosummary/cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation", "_autosummary/cuvis_ai.tv_transforms", "_autosummary/cuvis_ai.tv_transforms.Bandpass", "_autosummary/cuvis_ai.tv_transforms.Bandpass.call_super_init", "_autosummary/cuvis_ai.tv_transforms.Bandpass.dump_patches", "_autosummary/cuvis_ai.tv_transforms.Bandpass.training", "_autosummary/cuvis_ai.tv_transforms.MultiBandpass", "_autosummary/cuvis_ai.tv_transforms.MultiBandpass.call_super_init", "_autosummary/cuvis_ai.tv_transforms.MultiBandpass.dump_patches", "_autosummary/cuvis_ai.tv_transforms.MultiBandpass.training", "_autosummary/cuvis_ai.tv_transforms.NormalizeStdDev", "_autosummary/cuvis_ai.tv_transforms.NormalizeStdDev.call_super_init", "_autosummary/cuvis_ai.tv_transforms.NormalizeStdDev.dump_patches", "_autosummary/cuvis_ai.tv_transforms.NormalizeStdDev.training", "_autosummary/cuvis_ai.tv_transforms.NormalizeToFloat", "_autosummary/cuvis_ai.tv_transforms.NormalizeToFloat.call_super_init", "_autosummary/cuvis_ai.tv_transforms.NormalizeToFloat.dump_patches", "_autosummary/cuvis_ai.tv_transforms.NormalizeToFloat.training", "_autosummary/cuvis_ai.tv_transforms.WavelengthList", "_autosummary/cuvis_ai.unsupervised", "_autosummary/cuvis_ai.unsupervised.base_unsupervised", "_autosummary/cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised", "_autosummary/cuvis_ai.unsupervised.gmm", "_autosummary/cuvis_ai.unsupervised.gmm.GMM", "_autosummary/cuvis_ai.unsupervised.kmeans", "_autosummary/cuvis_ai.unsupervised.kmeans.KMeans", "_autosummary/cuvis_ai.unsupervised.mean_shift", "_autosummary/cuvis_ai.unsupervised.mean_shift.MeanShift", "_autosummary/cuvis_ai.utils", "_autosummary/cuvis_ai.utils.nn_config", "_autosummary/cuvis_ai.utils.nn_config.Adam", "_autosummary/cuvis_ai.utils.nn_config.Optimizer", "_autosummary/cuvis_ai.utils.nn_config.SGD", "_autosummary/cuvis_ai.utils.numpy_utils", "_autosummary/cuvis_ai.utils.numpy_utils.binary_mask_to_rle", "_autosummary/cuvis_ai.utils.numpy_utils.check_array_shape", "_autosummary/cuvis_ai.utils.numpy_utils.flatten_batch_and_labels", "_autosummary/cuvis_ai.utils.numpy_utils.flatten_batch_and_spatial", "_autosummary/cuvis_ai.utils.numpy_utils.flatten_labels", "_autosummary/cuvis_ai.utils.numpy_utils.flatten_spatial", "_autosummary/cuvis_ai.utils.numpy_utils.gen_coco_labels", "_autosummary/cuvis_ai.utils.numpy_utils.get_shape_without_batch", "_autosummary/cuvis_ai.utils.numpy_utils.unflatten_batch_and_labels", "_autosummary/cuvis_ai.utils.numpy_utils.unflatten_batch_and_spatial", "_autosummary/cuvis_ai.utils.numpy_utils.unflatten_labels", "_autosummary/cuvis_ai.utils.numpy_utils.unflatten_spatial", "_autosummary/cuvis_ai.utils.serializer", "_autosummary/cuvis_ai.utils.serializer.Serializer", "_autosummary/cuvis_ai.utils.test", "_autosummary/cuvis_ai.utils.test.get_np_dummy_data", "_autosummary/cuvis_ai.utils.visualize", "_autosummary/cuvis_ai.utils.visualize.visualize_features", "_autosummary/cuvis_ai.utils.visualize.visualize_image", "index", "user/concepts", "user/installation", "user/quickstart", "user/tutorials"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_autosummary/cuvis_ai.rst", "_autosummary/cuvis_ai.data.rst", "_autosummary/cuvis_ai.data.BaseDataSet.rst", "_autosummary/cuvis_ai.data.BaseDataSet.BaseDataSet.rst", "_autosummary/cuvis_ai.data.CuvisDataSet.rst", "_autosummary/cuvis_ai.data.Labels2TV.rst", "_autosummary/cuvis_ai.data.Labels2TV.RLE2mask.rst", "_autosummary/cuvis_ai.data.Labels2TV.convert_COCO2TV.rst", "_autosummary/cuvis_ai.data.LiveCuvisDataLoader.rst", "_autosummary/cuvis_ai.data.MetadataUtils.rst", "_autosummary/cuvis_ai.data.MetadataUtils.C_ATTRIB_LIST.rst", "_autosummary/cuvis_ai.data.MetadataUtils.metadataInit.rst", "_autosummary/cuvis_ai.data.NumpyDataSet.rst", "_autosummary/cuvis_ai.data.OutputFormat.rst", "_autosummary/cuvis_ai.data.PublicDataSets.rst", "_autosummary/cuvis_ai.data.utils_dataloader.rst", "_autosummary/cuvis_ai.data.utils_dataloader.cuvis_collate.rst", "_autosummary/cuvis_ai.data.utils_dataloader.get_dataloader_from_dataset.rst", "_autosummary/cuvis_ai.deciders.rst", "_autosummary/cuvis_ai.deciders.base_decider.rst", "_autosummary/cuvis_ai.deciders.base_decider.BaseDecider.rst", "_autosummary/cuvis_ai.deciders.binary_decider.rst", "_autosummary/cuvis_ai.deciders.binary_decider.BinaryDecider.rst", "_autosummary/cuvis_ai.deciders.cascaded_decider.rst", "_autosummary/cuvis_ai.deciders.cascaded_decider.Cascaded.rst", "_autosummary/cuvis_ai.deciders.combining_decider.rst", "_autosummary/cuvis_ai.deciders.combining_decider.CombiningDecider.rst", "_autosummary/cuvis_ai.deciders.combining_decider.all_agree.rst", "_autosummary/cuvis_ai.deciders.combining_decider.at_least_n_agree.rst", "_autosummary/cuvis_ai.deciders.multiclass_decider.rst", "_autosummary/cuvis_ai.deciders.multiclass_decider.MultiClassDecider.rst", "_autosummary/cuvis_ai.distance.rst", "_autosummary/cuvis_ai.distance.distance.rst", "_autosummary/cuvis_ai.distance.distance.AbstractDistance.rst", "_autosummary/cuvis_ai.distance.distance.Canberra.rst", "_autosummary/cuvis_ai.distance.distance.ECS.rst", "_autosummary/cuvis_ai.distance.distance.Euclidean.rst", "_autosummary/cuvis_ai.distance.distance.GFC.rst", "_autosummary/cuvis_ai.distance.distance.Manhattan.rst", "_autosummary/cuvis_ai.distance.distance.Minkowski.rst", "_autosummary/cuvis_ai.distance.distance.SpectralAngle.rst", "_autosummary/cuvis_ai.node.rst", "_autosummary/cuvis_ai.node.Consumers.rst", "_autosummary/cuvis_ai.node.Consumers.CubeConsumer.rst", "_autosummary/cuvis_ai.node.Consumers.LabelConsumer.rst", "_autosummary/cuvis_ai.node.Consumers.LabelConsumerInference.rst", "_autosummary/cuvis_ai.node.Consumers.MetadataConsumer.rst", "_autosummary/cuvis_ai.node.Consumers.MetadataConsumerInference.rst", "_autosummary/cuvis_ai.node.node.rst", "_autosummary/cuvis_ai.node.node.Node.rst", "_autosummary/cuvis_ai.pipeline.rst", "_autosummary/cuvis_ai.pipeline.graph.rst", "_autosummary/cuvis_ai.pipeline.graph.Graph.rst", "_autosummary/cuvis_ai.preprocessor.rst", "_autosummary/cuvis_ai.preprocessor.base_preprocessor.rst", "_autosummary/cuvis_ai.preprocessor.base_preprocessor.Preprocessor.rst", "_autosummary/cuvis_ai.preprocessor.nmf.rst", "_autosummary/cuvis_ai.preprocessor.nmf.NMF.rst", "_autosummary/cuvis_ai.preprocessor.pca.rst", "_autosummary/cuvis_ai.preprocessor.pca.PCA.rst", "_autosummary/cuvis_ai.supervised.rst", "_autosummary/cuvis_ai.supervised.base_supervised.rst", "_autosummary/cuvis_ai.supervised.base_supervised.BaseSupervised.rst", "_autosummary/cuvis_ai.supervised.lda.rst", "_autosummary/cuvis_ai.supervised.lda.LDA.rst", "_autosummary/cuvis_ai.supervised.qda.rst", "_autosummary/cuvis_ai.supervised.qda.QDA.rst", "_autosummary/cuvis_ai.supervised.skorch_supervised.rst", "_autosummary/cuvis_ai.supervised.skorch_supervised.SkorchSupervised.rst", "_autosummary/cuvis_ai.supervised.svm.rst", "_autosummary/cuvis_ai.supervised.svm.SVM.rst", "_autosummary/cuvis_ai.test.rst", "_autosummary/cuvis_ai.test.test_numpy_utils.rst", "_autosummary/cuvis_ai.test.test_numpy_utils.TestNumpyUtils.rst", "_autosummary/cuvis_ai.test.test_pipeline_graph.rst", "_autosummary/cuvis_ai.test.test_preprocessor_structural.rst", "_autosummary/cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode.rst", "_autosummary/cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.rst", "_autosummary/cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.rst", "_autosummary/cuvis_ai.test.test_serialization.rst", "_autosummary/cuvis_ai.test.test_serialization.TestNodeSerialization.rst", "_autosummary/cuvis_ai.test.test_serialization.TestPreprocessorNMF.rst", "_autosummary/cuvis_ai.test.test_serialization.TestPreprocessorPCA.rst", "_autosummary/cuvis_ai.test.test_serialization.TestSupervisedLDA.rst", "_autosummary/cuvis_ai.test.test_serialization.TestSupervisedQDA.rst", "_autosummary/cuvis_ai.test.test_serialization.TestSupervisedSVM.rst", "_autosummary/cuvis_ai.test.test_serialization.TestTransformationReflectance.rst", "_autosummary/cuvis_ai.test.test_serialization.TestTransformationTorch.rst", "_autosummary/cuvis_ai.test.test_serialization.TestTransformationTorchVision.rst", "_autosummary/cuvis_ai.test.test_serialization.TestUnsupervisedGMM.rst", "_autosummary/cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.rst", "_autosummary/cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.rst", "_autosummary/cuvis_ai.test.test_unsupervised_structural.rst", "_autosummary/cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.rst", "_autosummary/cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.rst", "_autosummary/cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode.rst", "_autosummary/cuvis_ai.transformation.rst", "_autosummary/cuvis_ai.transformation.base_transformation.rst", "_autosummary/cuvis_ai.transformation.base_transformation.BaseTransformation.rst", "_autosummary/cuvis_ai.transformation.reflectance.rst", "_autosummary/cuvis_ai.transformation.reflectance.Reflectance.rst", "_autosummary/cuvis_ai.transformation.torch_transformation.rst", "_autosummary/cuvis_ai.transformation.torch_transformation.TorchTransformation.rst", "_autosummary/cuvis_ai.transformation.torchvision_transformation.rst", "_autosummary/cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.rst", "_autosummary/cuvis_ai.tv_transforms.rst", "_autosummary/cuvis_ai.tv_transforms.Bandpass.rst", "_autosummary/cuvis_ai.tv_transforms.Bandpass.call_super_init.rst", "_autosummary/cuvis_ai.tv_transforms.Bandpass.dump_patches.rst", "_autosummary/cuvis_ai.tv_transforms.Bandpass.training.rst", "_autosummary/cuvis_ai.tv_transforms.MultiBandpass.rst", "_autosummary/cuvis_ai.tv_transforms.MultiBandpass.call_super_init.rst", "_autosummary/cuvis_ai.tv_transforms.MultiBandpass.dump_patches.rst", "_autosummary/cuvis_ai.tv_transforms.MultiBandpass.training.rst", "_autosummary/cuvis_ai.tv_transforms.NormalizeStdDev.rst", "_autosummary/cuvis_ai.tv_transforms.NormalizeStdDev.call_super_init.rst", "_autosummary/cuvis_ai.tv_transforms.NormalizeStdDev.dump_patches.rst", "_autosummary/cuvis_ai.tv_transforms.NormalizeStdDev.training.rst", "_autosummary/cuvis_ai.tv_transforms.NormalizeToFloat.rst", "_autosummary/cuvis_ai.tv_transforms.NormalizeToFloat.call_super_init.rst", "_autosummary/cuvis_ai.tv_transforms.NormalizeToFloat.dump_patches.rst", "_autosummary/cuvis_ai.tv_transforms.NormalizeToFloat.training.rst", "_autosummary/cuvis_ai.tv_transforms.WavelengthList.rst", "_autosummary/cuvis_ai.unsupervised.rst", "_autosummary/cuvis_ai.unsupervised.base_unsupervised.rst", "_autosummary/cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised.rst", "_autosummary/cuvis_ai.unsupervised.gmm.rst", "_autosummary/cuvis_ai.unsupervised.gmm.GMM.rst", "_autosummary/cuvis_ai.unsupervised.kmeans.rst", "_autosummary/cuvis_ai.unsupervised.kmeans.KMeans.rst", "_autosummary/cuvis_ai.unsupervised.mean_shift.rst", "_autosummary/cuvis_ai.unsupervised.mean_shift.MeanShift.rst", "_autosummary/cuvis_ai.utils.rst", "_autosummary/cuvis_ai.utils.nn_config.rst", "_autosummary/cuvis_ai.utils.nn_config.Adam.rst", "_autosummary/cuvis_ai.utils.nn_config.Optimizer.rst", "_autosummary/cuvis_ai.utils.nn_config.SGD.rst", "_autosummary/cuvis_ai.utils.numpy_utils.rst", "_autosummary/cuvis_ai.utils.numpy_utils.binary_mask_to_rle.rst", "_autosummary/cuvis_ai.utils.numpy_utils.check_array_shape.rst", "_autosummary/cuvis_ai.utils.numpy_utils.flatten_batch_and_labels.rst", "_autosummary/cuvis_ai.utils.numpy_utils.flatten_batch_and_spatial.rst", "_autosummary/cuvis_ai.utils.numpy_utils.flatten_labels.rst", "_autosummary/cuvis_ai.utils.numpy_utils.flatten_spatial.rst", "_autosummary/cuvis_ai.utils.numpy_utils.gen_coco_labels.rst", "_autosummary/cuvis_ai.utils.numpy_utils.get_shape_without_batch.rst", "_autosummary/cuvis_ai.utils.numpy_utils.unflatten_batch_and_labels.rst", "_autosummary/cuvis_ai.utils.numpy_utils.unflatten_batch_and_spatial.rst", "_autosummary/cuvis_ai.utils.numpy_utils.unflatten_labels.rst", "_autosummary/cuvis_ai.utils.numpy_utils.unflatten_spatial.rst", "_autosummary/cuvis_ai.utils.serializer.rst", "_autosummary/cuvis_ai.utils.serializer.Serializer.rst", "_autosummary/cuvis_ai.utils.test.rst", "_autosummary/cuvis_ai.utils.test.get_np_dummy_data.rst", "_autosummary/cuvis_ai.utils.visualize.rst", "_autosummary/cuvis_ai.utils.visualize.visualize_features.rst", "_autosummary/cuvis_ai.utils.visualize.visualize_image.rst", "index.rst", "user/concepts.rst", "user/installation.rst", "user/quickstart.rst", "user/tutorials.rst"], "indexentries": {"__init__() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.__init__", false]], "__init__() (cuvis_ai.deciders.base_decider.basedecider method)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.__init__", false]], "__init__() (cuvis_ai.deciders.binary_decider.binarydecider method)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.__init__", false]], "__init__() (cuvis_ai.deciders.cascaded_decider.cascaded method)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.__init__", false]], "__init__() (cuvis_ai.deciders.combining_decider.combiningdecider method)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.__init__", false]], "__init__() (cuvis_ai.deciders.multiclass_decider.multiclassdecider method)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.__init__", false]], "__init__() (cuvis_ai.distance.distance.abstractdistance method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.__init__", false]], "__init__() (cuvis_ai.distance.distance.canberra method)": [[34, "cuvis_ai.distance.distance.Canberra.__init__", false]], "__init__() (cuvis_ai.distance.distance.ecs method)": [[35, "cuvis_ai.distance.distance.ECS.__init__", false]], "__init__() (cuvis_ai.distance.distance.euclidean method)": [[36, "cuvis_ai.distance.distance.Euclidean.__init__", false]], "__init__() (cuvis_ai.distance.distance.gfc method)": [[37, "cuvis_ai.distance.distance.GFC.__init__", false]], "__init__() (cuvis_ai.distance.distance.manhattan method)": [[38, "cuvis_ai.distance.distance.Manhattan.__init__", false]], "__init__() (cuvis_ai.distance.distance.minkowski method)": [[39, "cuvis_ai.distance.distance.Minkowski.__init__", false]], "__init__() (cuvis_ai.distance.distance.spectralangle method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.__init__", false]], "__init__() (cuvis_ai.node.consumers.cubeconsumer method)": [[43, "cuvis_ai.node.Consumers.CubeConsumer.__init__", false]], "__init__() (cuvis_ai.node.consumers.labelconsumer method)": [[44, "cuvis_ai.node.Consumers.LabelConsumer.__init__", false]], "__init__() (cuvis_ai.node.consumers.labelconsumerinference method)": [[45, "cuvis_ai.node.Consumers.LabelConsumerInference.__init__", false]], "__init__() (cuvis_ai.node.consumers.metadataconsumer method)": [[46, "cuvis_ai.node.Consumers.MetadataConsumer.__init__", false]], "__init__() (cuvis_ai.node.consumers.metadataconsumerinference method)": [[47, "cuvis_ai.node.Consumers.MetadataConsumerInference.__init__", false]], "__init__() (cuvis_ai.node.node.node method)": [[49, "cuvis_ai.node.node.Node.__init__", false]], "__init__() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.__init__", false]], "__init__() (cuvis_ai.preprocessor.base_preprocessor.preprocessor method)": [[55, "cuvis_ai.preprocessor.base_preprocessor.Preprocessor.__init__", false]], "__init__() (cuvis_ai.preprocessor.nmf.nmf method)": [[57, "cuvis_ai.preprocessor.nmf.NMF.__init__", false]], "__init__() (cuvis_ai.preprocessor.pca.pca method)": [[59, "cuvis_ai.preprocessor.pca.PCA.__init__", false]], "__init__() (cuvis_ai.supervised.base_supervised.basesupervised method)": [[62, "cuvis_ai.supervised.base_supervised.BaseSupervised.__init__", false]], "__init__() (cuvis_ai.supervised.lda.lda method)": [[64, "cuvis_ai.supervised.lda.LDA.__init__", false]], "__init__() (cuvis_ai.supervised.qda.qda method)": [[66, "cuvis_ai.supervised.qda.QDA.__init__", false]], "__init__() (cuvis_ai.supervised.skorch_supervised.skorchsupervised method)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.__init__", false]], "__init__() (cuvis_ai.supervised.svm.svm method)": [[70, "cuvis_ai.supervised.svm.SVM.__init__", false]], "__init__() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.__init__", false]], "__init__() (cuvis_ai.test.test_preprocessor_structural.testpreprocessednode method)": [[76, "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode.__init__", false]], "__init__() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.__init__", false]], "__init__() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testnodeserialization method)": [[80, "cuvis_ai.test.test_serialization.TestNodeSerialization.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.__init__", false]], "__init__() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.__init__", false]], "__init__() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.__init__", false]], "__init__() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.__init__", false]], "__init__() (cuvis_ai.test.test_unsupervised_structural.testunsupervisednode method)": [[95, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode.__init__", false]], "__init__() (cuvis_ai.transformation.base_transformation.basetransformation method)": [[98, "cuvis_ai.transformation.base_transformation.BaseTransformation.__init__", false]], "__init__() (cuvis_ai.transformation.reflectance.reflectance method)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.__init__", false]], "__init__() (cuvis_ai.transformation.torch_transformation.torchtransformation method)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.__init__", false]], "__init__() (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation method)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.__init__", false]], "__init__() (cuvis_ai.unsupervised.base_unsupervised.baseunsupervised method)": [[125, "cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised.__init__", false]], "__init__() (cuvis_ai.unsupervised.gmm.gmm method)": [[127, "cuvis_ai.unsupervised.gmm.GMM.__init__", false]], "__init__() (cuvis_ai.unsupervised.kmeans.kmeans method)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.__init__", false]], "__init__() (cuvis_ai.unsupervised.mean_shift.meanshift method)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.__init__", false]], "__init__() (cuvis_ai.utils.nn_config.adam method)": [[134, "cuvis_ai.utils.nn_config.Adam.__init__", false]], "__init__() (cuvis_ai.utils.nn_config.optimizer method)": [[135, "cuvis_ai.utils.nn_config.Optimizer.__init__", false]], "__init__() (cuvis_ai.utils.nn_config.sgd method)": [[136, "cuvis_ai.utils.nn_config.SGD.__init__", false]], "__init__() (cuvis_ai.utils.serializer.serializer method)": [[151, "cuvis_ai.utils.serializer.Serializer.__init__", false]], "abstractdistance (class in cuvis_ai.distance.distance)": [[33, "cuvis_ai.distance.distance.AbstractDistance", false]], "adam (class in cuvis_ai.utils.nn_config)": [[134, "cuvis_ai.utils.nn_config.Adam", false]], "add_base_node() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.add_base_node", false]], "add_edge() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.add_edge", false]], "add_node() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.add_node", false]], "addclasscleanup() (cuvis_ai.test.test_numpy_utils.testnumpyutils class method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf class method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca class method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testpreprocessornmf class method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testpreprocessorpca class method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testsupervisedlda class method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testsupervisedqda class method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testsupervisedsvm class method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testtransformationreflectance class method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testtransformationtorch class method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testtransformationtorchvision class method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testunsupervisedgmm class method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testunsupervisedkmeans class method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift class method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm class method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.addClassCleanup", false]], "addclasscleanup() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans class method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.addClassCleanup", false]], "addcleanup() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.addCleanup", false]], "addcleanup() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.addCleanup", false]], "addtypeequalityfunc() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.addTypeEqualityFunc", false]], "addtypeequalityfunc() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.addTypeEqualityFunc", false]], "all_agree() (in module cuvis_ai.deciders.combining_decider)": [[27, "cuvis_ai.deciders.combining_decider.all_agree", false]], "alpha (cuvis_ai.utils.nn_config.adam attribute)": [[134, "cuvis_ai.utils.nn_config.Adam.alpha", false]], "alpha (cuvis_ai.utils.nn_config.sgd attribute)": [[136, "cuvis_ai.utils.nn_config.SGD.alpha", false]], "args (cuvis_ai.utils.nn_config.adam property)": [[134, "cuvis_ai.utils.nn_config.Adam.args", false]], "args (cuvis_ai.utils.nn_config.optimizer property)": [[135, "cuvis_ai.utils.nn_config.Optimizer.args", false]], "args (cuvis_ai.utils.nn_config.sgd property)": [[136, "cuvis_ai.utils.nn_config.SGD.args", false]], "assert_() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assert_", false]], "assert_() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assert_", false]], "assert_() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assert_", false]], "assert_() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assert_", false]], "assert_() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assert_", false]], "assert_() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assert_", false]], "assertalmostequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertAlmostEqual", false]], "assertalmostequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertAlmostEqual", false]], "assertalmostequals() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertAlmostEquals", false]], "assertalmostequals() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertAlmostEquals", false]], "assertcountequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertCountEqual", false]], "assertcountequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertCountEqual", false]], "assertdictcontainssubset() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertDictContainsSubset", false]], "assertdictcontainssubset() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertDictContainsSubset", false]], "assertdictequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertDictEqual", false]], "assertdictequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertDictEqual", false]], "assertequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertEqual", false]], "assertequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertEqual", false]], "assertequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertEqual", false]], "assertequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertEqual", false]], "assertequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertEqual", false]], "assertequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertEqual", false]], "assertequals() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertEquals", false]], "assertequals() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertEquals", false]], "assertequals() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertEquals", false]], "assertequals() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertEquals", false]], "assertequals() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertEquals", false]], "assertequals() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertEquals", false]], "assertfalse() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertFalse", false]], "assertfalse() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertFalse", false]], "assertgreater() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertGreater", false]], "assertgreater() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertGreater", false]], "assertgreaterequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertGreaterEqual", false]], "assertgreaterequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertGreaterEqual", false]], "assertin() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertIn", false]], "assertin() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertIn", false]], "assertin() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertIn", false]], "assertin() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertIn", false]], "assertin() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertIn", false]], "assertin() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertIn", false]], "assertis() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertIs", false]], "assertis() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertIs", false]], "assertis() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertIs", false]], "assertis() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertIs", false]], "assertis() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertIs", false]], "assertis() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertIs", false]], "assertisinstance() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertIsInstance", false]], "assertisinstance() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertIsInstance", false]], "assertisnone() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertIsNone", false]], "assertisnone() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertIsNone", false]], "assertisnot() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertIsNot", false]], "assertisnot() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertIsNot", false]], "assertisnotnone() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertIsNotNone", false]], "assertisnotnone() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertIsNotNone", false]], "assertless() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertLess", false]], "assertless() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertLess", false]], "assertless() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertLess", false]], "assertless() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertLess", false]], "assertless() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertLess", false]], "assertless() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertLess", false]], "assertlessequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertLessEqual", false]], "assertlessequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertLessEqual", false]], "assertlistequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertListEqual", false]], "assertlistequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertListEqual", false]], "assertlogs() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertLogs", false]], "assertlogs() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertLogs", false]], "assertmultilineequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertMultiLineEqual", false]], "assertmultilineequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertMultiLineEqual", false]], "assertnologs() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNoLogs", false]], "assertnologs() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNoLogs", false]], "assertnotalmostequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNotAlmostEqual", false]], "assertnotalmostequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNotAlmostEqual", false]], "assertnotalmostequals() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNotAlmostEquals", false]], "assertnotalmostequals() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNotAlmostEquals", false]], "assertnotequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNotEqual", false]], "assertnotequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNotEqual", false]], "assertnotequals() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNotEquals", false]], "assertnotequals() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNotEquals", false]], "assertnotin() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNotIn", false]], "assertnotin() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNotIn", false]], "assertnotisinstance() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNotIsInstance", false]], "assertnotisinstance() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNotIsInstance", false]], "assertnotregex() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNotRegex", false]], "assertnotregex() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNotRegex", false]], "assertnotregexpmatches() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertNotRegexpMatches", false]], "assertnotregexpmatches() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertNotRegexpMatches", false]], "assertraises() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertRaises", false]], "assertraises() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertRaises", false]], "assertraises() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertRaises", false]], "assertraises() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertRaises", false]], "assertraises() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertRaises", false]], "assertraises() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertRaises", false]], "assertraisesregex() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertRaisesRegex", false]], "assertraisesregex() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertRaisesRegex", false]], "assertraisesregexp() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertRaisesRegexp", false]], "assertraisesregexp() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertRaisesRegexp", false]], "assertregex() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertRegex", false]], "assertregex() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertRegex", false]], "assertregex() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertRegex", false]], "assertregex() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertRegex", false]], "assertregex() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertRegex", false]], "assertregex() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertRegex", false]], "assertregexpmatches() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertRegexpMatches", false]], "assertregexpmatches() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertRegexpMatches", false]], "assertsequenceequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertSequenceEqual", false]], "assertsequenceequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertSequenceEqual", false]], "assertsetequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertSetEqual", false]], "assertsetequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertSetEqual", false]], "asserttrue() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertTrue", false]], "asserttrue() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertTrue", false]], "asserttupleequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertTupleEqual", false]], "asserttupleequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertTupleEqual", false]], "assertwarns() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertWarns", false]], "assertwarns() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertWarns", false]], "assertwarnsregex() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.assertWarnsRegex", false]], "assertwarnsregex() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.assertWarnsRegex", false]], "at_least_n_agree() (in module cuvis_ai.deciders.combining_decider)": [[28, "cuvis_ai.deciders.combining_decider.at_least_n_agree", false]], "basedataset (class in cuvis_ai.data.basedataset)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet", false]], "basedecider (class in cuvis_ai.deciders.base_decider)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider", false]], "basesupervised (class in cuvis_ai.supervised.base_supervised)": [[62, "cuvis_ai.supervised.base_supervised.BaseSupervised", false]], "basetransformation (class in cuvis_ai.transformation.base_transformation)": [[98, "cuvis_ai.transformation.base_transformation.BaseTransformation", false]], "baseunsupervised (class in cuvis_ai.unsupervised.base_unsupervised)": [[125, "cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised", false]], "beta_1 (cuvis_ai.utils.nn_config.adam attribute)": [[134, "cuvis_ai.utils.nn_config.Adam.beta_1", false]], "beta_2 (cuvis_ai.utils.nn_config.adam attribute)": [[134, "cuvis_ai.utils.nn_config.Adam.beta_2", false]], "binary_mask_to_rle() (in module cuvis_ai.utils.numpy_utils)": [[138, "cuvis_ai.utils.numpy_utils.binary_mask_to_rle", false]], "binarydecider (class in cuvis_ai.deciders.binary_decider)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider", false]], "c_attrib_list (in module cuvis_ai.data.metadatautils)": [[10, "cuvis_ai.data.MetadataUtils.C_ATTRIB_LIST", false]], "call_super_init (cuvis_ai.tv_transforms.bandpass attribute)": [[107, "cuvis_ai.tv_transforms.Bandpass.call_super_init", false]], "call_super_init (cuvis_ai.tv_transforms.multibandpass attribute)": [[111, "cuvis_ai.tv_transforms.MultiBandpass.call_super_init", false]], "call_super_init (cuvis_ai.tv_transforms.normalizestddev attribute)": [[115, "cuvis_ai.tv_transforms.NormalizeStdDev.call_super_init", false]], "call_super_init (cuvis_ai.tv_transforms.normalizetofloat attribute)": [[119, "cuvis_ai.tv_transforms.NormalizeToFloat.call_super_init", false]], "canberra (class in cuvis_ai.distance.distance)": [[34, "cuvis_ai.distance.distance.Canberra", false]], "cascaded (class in cuvis_ai.deciders.cascaded_decider)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded", false]], "check_array_shape() (in module cuvis_ai.utils.numpy_utils)": [[139, "cuvis_ai.utils.numpy_utils.check_array_shape", false]], "check_input_dim() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.check_input_dim", false]], "check_input_dim() (cuvis_ai.deciders.base_decider.basedecider method)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.check_input_dim", false]], "check_input_dim() (cuvis_ai.deciders.binary_decider.binarydecider method)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.check_input_dim", false]], "check_input_dim() (cuvis_ai.deciders.cascaded_decider.cascaded method)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.check_input_dim", false]], "check_input_dim() (cuvis_ai.deciders.combining_decider.combiningdecider method)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.check_input_dim", false]], "check_input_dim() (cuvis_ai.deciders.multiclass_decider.multiclassdecider method)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.check_input_dim", false]], "check_input_dim() (cuvis_ai.distance.distance.abstractdistance method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.check_input_dim", false]], "check_input_dim() (cuvis_ai.distance.distance.canberra method)": [[34, "cuvis_ai.distance.distance.Canberra.check_input_dim", false]], "check_input_dim() (cuvis_ai.distance.distance.ecs method)": [[35, "cuvis_ai.distance.distance.ECS.check_input_dim", false]], "check_input_dim() (cuvis_ai.distance.distance.euclidean method)": [[36, "cuvis_ai.distance.distance.Euclidean.check_input_dim", false]], "check_input_dim() (cuvis_ai.distance.distance.gfc method)": [[37, "cuvis_ai.distance.distance.GFC.check_input_dim", false]], "check_input_dim() (cuvis_ai.distance.distance.manhattan method)": [[38, "cuvis_ai.distance.distance.Manhattan.check_input_dim", false]], "check_input_dim() (cuvis_ai.distance.distance.minkowski method)": [[39, "cuvis_ai.distance.distance.Minkowski.check_input_dim", false]], "check_input_dim() (cuvis_ai.distance.distance.spectralangle method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.check_input_dim", false]], "check_input_dim() (cuvis_ai.node.node.node method)": [[49, "cuvis_ai.node.node.Node.check_input_dim", false]], "check_input_dim() (cuvis_ai.preprocessor.nmf.nmf method)": [[57, "cuvis_ai.preprocessor.nmf.NMF.check_input_dim", false]], "check_input_dim() (cuvis_ai.preprocessor.pca.pca method)": [[59, "cuvis_ai.preprocessor.pca.PCA.check_input_dim", false]], "check_input_dim() (cuvis_ai.supervised.lda.lda method)": [[64, "cuvis_ai.supervised.lda.LDA.check_input_dim", false]], "check_input_dim() (cuvis_ai.supervised.qda.qda method)": [[66, "cuvis_ai.supervised.qda.QDA.check_input_dim", false]], "check_input_dim() (cuvis_ai.supervised.svm.svm method)": [[70, "cuvis_ai.supervised.svm.SVM.check_input_dim", false]], "check_input_dim() (cuvis_ai.transformation.reflectance.reflectance method)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.check_input_dim", false]], "check_input_dim() (cuvis_ai.transformation.torch_transformation.torchtransformation method)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.check_input_dim", false]], "check_input_dim() (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation method)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.check_input_dim", false]], "check_input_dim() (cuvis_ai.unsupervised.gmm.gmm method)": [[127, "cuvis_ai.unsupervised.gmm.GMM.check_input_dim", false]], "check_input_dim() (cuvis_ai.unsupervised.kmeans.kmeans method)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.check_input_dim", false]], "check_input_dim() (cuvis_ai.unsupervised.mean_shift.meanshift method)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.check_input_dim", false]], "check_output_dim() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.check_output_dim", false]], "check_output_dim() (cuvis_ai.deciders.base_decider.basedecider method)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.check_output_dim", false]], "check_output_dim() (cuvis_ai.deciders.binary_decider.binarydecider method)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.check_output_dim", false]], "check_output_dim() (cuvis_ai.deciders.cascaded_decider.cascaded method)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.check_output_dim", false]], "check_output_dim() (cuvis_ai.deciders.combining_decider.combiningdecider method)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.check_output_dim", false]], "check_output_dim() (cuvis_ai.deciders.multiclass_decider.multiclassdecider method)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.check_output_dim", false]], "check_output_dim() (cuvis_ai.distance.distance.abstractdistance method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.check_output_dim", false]], "check_output_dim() (cuvis_ai.distance.distance.canberra method)": [[34, "cuvis_ai.distance.distance.Canberra.check_output_dim", false]], "check_output_dim() (cuvis_ai.distance.distance.ecs method)": [[35, "cuvis_ai.distance.distance.ECS.check_output_dim", false]], "check_output_dim() (cuvis_ai.distance.distance.euclidean method)": [[36, "cuvis_ai.distance.distance.Euclidean.check_output_dim", false]], "check_output_dim() (cuvis_ai.distance.distance.gfc method)": [[37, "cuvis_ai.distance.distance.GFC.check_output_dim", false]], "check_output_dim() (cuvis_ai.distance.distance.manhattan method)": [[38, "cuvis_ai.distance.distance.Manhattan.check_output_dim", false]], "check_output_dim() (cuvis_ai.distance.distance.minkowski method)": [[39, "cuvis_ai.distance.distance.Minkowski.check_output_dim", false]], "check_output_dim() (cuvis_ai.distance.distance.spectralangle method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.check_output_dim", false]], "check_output_dim() (cuvis_ai.node.node.node method)": [[49, "cuvis_ai.node.node.Node.check_output_dim", false]], "check_output_dim() (cuvis_ai.preprocessor.nmf.nmf method)": [[57, "cuvis_ai.preprocessor.nmf.NMF.check_output_dim", false]], "check_output_dim() (cuvis_ai.preprocessor.pca.pca method)": [[59, "cuvis_ai.preprocessor.pca.PCA.check_output_dim", false]], "check_output_dim() (cuvis_ai.supervised.lda.lda method)": [[64, "cuvis_ai.supervised.lda.LDA.check_output_dim", false]], "check_output_dim() (cuvis_ai.supervised.qda.qda method)": [[66, "cuvis_ai.supervised.qda.QDA.check_output_dim", false]], "check_output_dim() (cuvis_ai.supervised.svm.svm method)": [[70, "cuvis_ai.supervised.svm.SVM.check_output_dim", false]], "check_output_dim() (cuvis_ai.transformation.reflectance.reflectance method)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.check_output_dim", false]], "check_output_dim() (cuvis_ai.transformation.torch_transformation.torchtransformation method)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.check_output_dim", false]], "check_output_dim() (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation method)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.check_output_dim", false]], "check_output_dim() (cuvis_ai.unsupervised.gmm.gmm method)": [[127, "cuvis_ai.unsupervised.gmm.GMM.check_output_dim", false]], "check_output_dim() (cuvis_ai.unsupervised.kmeans.kmeans method)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.check_output_dim", false]], "check_output_dim() (cuvis_ai.unsupervised.mean_shift.meanshift method)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.check_output_dim", false]], "combiningdecider (class in cuvis_ai.deciders.combining_decider)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider", false]], "convert_coco2tv() (in module cuvis_ai.data.labels2tv)": [[7, "cuvis_ai.data.Labels2TV.convert_COCO2TV", false]], "counttestcases() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.countTestCases", false]], "counttestcases() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.countTestCases", false]], "cubeconsumer (class in cuvis_ai.node.consumers)": [[43, "cuvis_ai.node.Consumers.CubeConsumer", false]], "cuvis_ai": [[0, "module-cuvis_ai", false]], "cuvis_ai.data": [[1, "module-cuvis_ai.data", false]], "cuvis_ai.data.basedataset": [[2, "module-cuvis_ai.data.BaseDataSet", false]], "cuvis_ai.data.cuvisdataset": [[4, "module-cuvis_ai.data.CuvisDataSet", false]], "cuvis_ai.data.labels2tv": [[5, "module-cuvis_ai.data.Labels2TV", false]], "cuvis_ai.data.livecuvisdataloader": [[8, "module-cuvis_ai.data.LiveCuvisDataLoader", false]], "cuvis_ai.data.metadatautils": [[9, "module-cuvis_ai.data.MetadataUtils", false]], "cuvis_ai.data.numpydataset": [[12, "module-cuvis_ai.data.NumpyDataSet", false]], "cuvis_ai.data.outputformat": [[13, "module-cuvis_ai.data.OutputFormat", false]], "cuvis_ai.data.publicdatasets": [[14, "module-cuvis_ai.data.PublicDataSets", false]], "cuvis_ai.data.utils_dataloader": [[15, "module-cuvis_ai.data.utils_dataloader", false]], "cuvis_ai.deciders": [[18, "module-cuvis_ai.deciders", false]], "cuvis_ai.deciders.base_decider": [[19, "module-cuvis_ai.deciders.base_decider", false]], "cuvis_ai.deciders.binary_decider": [[21, "module-cuvis_ai.deciders.binary_decider", false]], "cuvis_ai.deciders.cascaded_decider": [[23, "module-cuvis_ai.deciders.cascaded_decider", false]], "cuvis_ai.deciders.combining_decider": [[25, "module-cuvis_ai.deciders.combining_decider", false]], "cuvis_ai.deciders.multiclass_decider": [[29, "module-cuvis_ai.deciders.multiclass_decider", false]], "cuvis_ai.distance": [[31, "module-cuvis_ai.distance", false]], "cuvis_ai.distance.distance": [[32, "module-cuvis_ai.distance.distance", false]], "cuvis_ai.node": [[41, "module-cuvis_ai.node", false]], "cuvis_ai.node.consumers": [[42, "module-cuvis_ai.node.Consumers", false]], "cuvis_ai.node.node": [[48, "module-cuvis_ai.node.node", false]], "cuvis_ai.pipeline": [[50, "module-cuvis_ai.pipeline", false]], "cuvis_ai.pipeline.graph": [[51, "module-cuvis_ai.pipeline.graph", false]], "cuvis_ai.preprocessor": [[53, "module-cuvis_ai.preprocessor", false]], "cuvis_ai.preprocessor.base_preprocessor": [[54, "module-cuvis_ai.preprocessor.base_preprocessor", false]], "cuvis_ai.preprocessor.nmf": [[56, "module-cuvis_ai.preprocessor.nmf", false]], "cuvis_ai.preprocessor.pca": [[58, "module-cuvis_ai.preprocessor.pca", false]], "cuvis_ai.supervised": [[60, "module-cuvis_ai.supervised", false]], "cuvis_ai.supervised.base_supervised": [[61, "module-cuvis_ai.supervised.base_supervised", false]], "cuvis_ai.supervised.lda": [[63, "module-cuvis_ai.supervised.lda", false]], "cuvis_ai.supervised.qda": [[65, "module-cuvis_ai.supervised.qda", false]], "cuvis_ai.supervised.skorch_supervised": [[67, "module-cuvis_ai.supervised.skorch_supervised", false]], "cuvis_ai.supervised.svm": [[69, "module-cuvis_ai.supervised.svm", false]], "cuvis_ai.test": [[71, "module-cuvis_ai.test", false]], "cuvis_ai.test.test_numpy_utils": [[72, "module-cuvis_ai.test.test_numpy_utils", false]], "cuvis_ai.test.test_pipeline_graph": [[74, "module-cuvis_ai.test.test_pipeline_graph", false]], "cuvis_ai.test.test_preprocessor_structural": [[75, "module-cuvis_ai.test.test_preprocessor_structural", false]], "cuvis_ai.test.test_serialization": [[79, "module-cuvis_ai.test.test_serialization", false]], "cuvis_ai.test.test_unsupervised_structural": [[92, "module-cuvis_ai.test.test_unsupervised_structural", false]], "cuvis_ai.transformation": [[96, "module-cuvis_ai.transformation", false]], "cuvis_ai.transformation.base_transformation": [[97, "module-cuvis_ai.transformation.base_transformation", false]], "cuvis_ai.transformation.reflectance": [[99, "module-cuvis_ai.transformation.reflectance", false]], "cuvis_ai.transformation.torch_transformation": [[101, "module-cuvis_ai.transformation.torch_transformation", false]], "cuvis_ai.transformation.torchvision_transformation": [[103, "module-cuvis_ai.transformation.torchvision_transformation", false]], "cuvis_ai.tv_transforms": [[105, "module-cuvis_ai.tv_transforms", false]], "cuvis_ai.tv_transforms.bandpass": [[106, "module-cuvis_ai.tv_transforms.Bandpass", false]], "cuvis_ai.tv_transforms.multibandpass": [[110, "module-cuvis_ai.tv_transforms.MultiBandpass", false]], "cuvis_ai.tv_transforms.normalizestddev": [[114, "module-cuvis_ai.tv_transforms.NormalizeStdDev", false]], "cuvis_ai.tv_transforms.normalizetofloat": [[118, "module-cuvis_ai.tv_transforms.NormalizeToFloat", false]], "cuvis_ai.tv_transforms.wavelengthlist": [[122, "module-cuvis_ai.tv_transforms.WavelengthList", false]], "cuvis_ai.unsupervised": [[123, "module-cuvis_ai.unsupervised", false]], "cuvis_ai.unsupervised.base_unsupervised": [[124, "module-cuvis_ai.unsupervised.base_unsupervised", false]], "cuvis_ai.unsupervised.gmm": [[126, "module-cuvis_ai.unsupervised.gmm", false]], "cuvis_ai.unsupervised.kmeans": [[128, "module-cuvis_ai.unsupervised.kmeans", false]], "cuvis_ai.unsupervised.mean_shift": [[130, "module-cuvis_ai.unsupervised.mean_shift", false]], "cuvis_ai.utils": [[132, "module-cuvis_ai.utils", false]], "cuvis_ai.utils.nn_config": [[133, "module-cuvis_ai.utils.nn_config", false]], "cuvis_ai.utils.numpy_utils": [[137, "module-cuvis_ai.utils.numpy_utils", false]], "cuvis_ai.utils.serializer": [[150, "module-cuvis_ai.utils.serializer", false]], "cuvis_ai.utils.test": [[152, "module-cuvis_ai.utils.test", false]], "cuvis_ai.utils.visualize": [[154, "module-cuvis_ai.utils.visualize", false]], "cuvis_collate() (in module cuvis_ai.data.utils_dataloader)": [[16, "cuvis_ai.data.utils_dataloader.cuvis_collate", false]], "debug() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.debug", false]], "debug() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.debug", false]], "debug() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.debug", false]], "debug() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.debug", false]], "debug() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.debug", false]], "debug() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.debug", false]], "debug() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.debug", false]], "debug() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.debug", false]], "debug() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.debug", false]], "debug() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.debug", false]], "debug() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.debug", false]], "debug() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.debug", false]], "debug() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.debug", false]], "debug() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.debug", false]], "debug() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.debug", false]], "debug() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.debug", false]], "defaulttestresult() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.defaultTestResult", false]], "defaulttestresult() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.defaultTestResult", false]], "delete_node() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.delete_node", false]], "doclasscleanups() (cuvis_ai.test.test_numpy_utils.testnumpyutils class method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf class method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca class method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testpreprocessornmf class method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testpreprocessorpca class method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testsupervisedlda class method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testsupervisedqda class method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testsupervisedsvm class method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testtransformationreflectance class method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testtransformationtorch class method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testtransformationtorchvision class method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testunsupervisedgmm class method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testunsupervisedkmeans class method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift class method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm class method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.doClassCleanups", false]], "doclasscleanups() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans class method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.doClassCleanups", false]], "docleanups() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.doCleanups", false]], "docleanups() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.doCleanups", false]], "docleanups() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.doCleanups", false]], "docleanups() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.doCleanups", false]], "docleanups() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.doCleanups", false]], "docleanups() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.doCleanups", false]], "dump_patches (cuvis_ai.tv_transforms.bandpass attribute)": [[108, "cuvis_ai.tv_transforms.Bandpass.dump_patches", false]], "dump_patches (cuvis_ai.tv_transforms.multibandpass attribute)": [[112, "cuvis_ai.tv_transforms.MultiBandpass.dump_patches", false]], "dump_patches (cuvis_ai.tv_transforms.normalizestddev attribute)": [[116, "cuvis_ai.tv_transforms.NormalizeStdDev.dump_patches", false]], "dump_patches (cuvis_ai.tv_transforms.normalizetofloat attribute)": [[120, "cuvis_ai.tv_transforms.NormalizeToFloat.dump_patches", false]], "ecs (class in cuvis_ai.distance.distance)": [[35, "cuvis_ai.distance.distance.ECS", false]], "epochs (cuvis_ai.supervised.skorch_supervised.skorchsupervised attribute)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.epochs", false]], "epsilon (cuvis_ai.utils.nn_config.adam attribute)": [[134, "cuvis_ai.utils.nn_config.Adam.epsilon", false]], "euclidean (class in cuvis_ai.distance.distance)": [[36, "cuvis_ai.distance.distance.Euclidean", false]], "extra_repr() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.extra_repr", false]], "fail() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.fail", false]], "fail() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.fail", false]], "fail() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.fail", false]], "fail() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.fail", false]], "fail() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.fail", false]], "fail() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.fail", false]], "fail() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.fail", false]], "fail() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.fail", false]], "fail() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.fail", false]], "fail() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.fail", false]], "fail() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.fail", false]], "fail() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.fail", false]], "fail() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.fail", false]], "fail() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.fail", false]], "fail() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.fail", false]], "fail() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.fail", false]], "failif() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.failIf", false]], "failif() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.failIf", false]], "failif() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.failIf", false]], "failif() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.failIf", false]], "failif() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.failIf", false]], "failif() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.failIf", false]], "failifalmostequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.failIfAlmostEqual", false]], "failifalmostequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.failIfAlmostEqual", false]], "failifequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.failIfEqual", false]], "failifequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.failIfEqual", false]], "failunless() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.failUnless", false]], "failunless() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.failUnless", false]], "failunless() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.failUnless", false]], "failunless() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.failUnless", false]], "failunless() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.failUnless", false]], "failunless() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.failUnless", false]], "failunlessalmostequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.failUnlessAlmostEqual", false]], "failunlessalmostequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.failUnlessAlmostEqual", false]], "failunlessequal() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.failUnlessEqual", false]], "failunlessequal() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.failUnlessEqual", false]], "failunlessraises() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.failUnlessRaises", false]], "failunlessraises() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.failUnlessRaises", false]], "failureexception (cuvis_ai.test.test_numpy_utils.testnumpyutils attribute)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.failureException", false]], "failureexception (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf attribute)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.failureException", false]], "failureexception (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca attribute)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testpreprocessornmf attribute)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testpreprocessorpca attribute)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testsupervisedlda attribute)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testsupervisedqda attribute)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testsupervisedsvm attribute)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testtransformationreflectance attribute)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testtransformationtorch attribute)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testtransformationtorchvision attribute)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testunsupervisedgmm attribute)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testunsupervisedkmeans attribute)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.failureException", false]], "failureexception (cuvis_ai.test.test_serialization.testunsupervisedmeanshift attribute)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.failureException", false]], "failureexception (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm attribute)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.failureException", false]], "failureexception (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans attribute)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.failureException", false]], "fit() (cuvis_ai.deciders.base_decider.basedecider method)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.fit", false]], "fit() (cuvis_ai.deciders.binary_decider.binarydecider method)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.fit", false]], "fit() (cuvis_ai.deciders.cascaded_decider.cascaded method)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.fit", false]], "fit() (cuvis_ai.deciders.combining_decider.combiningdecider method)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.fit", false]], "fit() (cuvis_ai.deciders.multiclass_decider.multiclassdecider method)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.fit", false]], "fit() (cuvis_ai.distance.distance.abstractdistance method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.fit", false]], "fit() (cuvis_ai.distance.distance.canberra method)": [[34, "cuvis_ai.distance.distance.Canberra.fit", false]], "fit() (cuvis_ai.distance.distance.ecs method)": [[35, "cuvis_ai.distance.distance.ECS.fit", false]], "fit() (cuvis_ai.distance.distance.euclidean method)": [[36, "cuvis_ai.distance.distance.Euclidean.fit", false]], "fit() (cuvis_ai.distance.distance.gfc method)": [[37, "cuvis_ai.distance.distance.GFC.fit", false]], "fit() (cuvis_ai.distance.distance.manhattan method)": [[38, "cuvis_ai.distance.distance.Manhattan.fit", false]], "fit() (cuvis_ai.distance.distance.minkowski method)": [[39, "cuvis_ai.distance.distance.Minkowski.fit", false]], "fit() (cuvis_ai.distance.distance.spectralangle method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.fit", false]], "fit() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.fit", false]], "fit() (cuvis_ai.preprocessor.base_preprocessor.preprocessor method)": [[55, "cuvis_ai.preprocessor.base_preprocessor.Preprocessor.fit", false]], "fit() (cuvis_ai.preprocessor.nmf.nmf method)": [[57, "cuvis_ai.preprocessor.nmf.NMF.fit", false]], "fit() (cuvis_ai.preprocessor.pca.pca method)": [[59, "cuvis_ai.preprocessor.pca.PCA.fit", false]], "fit() (cuvis_ai.supervised.base_supervised.basesupervised method)": [[62, "cuvis_ai.supervised.base_supervised.BaseSupervised.fit", false]], "fit() (cuvis_ai.supervised.lda.lda method)": [[64, "cuvis_ai.supervised.lda.LDA.fit", false]], "fit() (cuvis_ai.supervised.qda.qda method)": [[66, "cuvis_ai.supervised.qda.QDA.fit", false]], "fit() (cuvis_ai.supervised.skorch_supervised.skorchsupervised method)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.fit", false]], "fit() (cuvis_ai.supervised.svm.svm method)": [[70, "cuvis_ai.supervised.svm.SVM.fit", false]], "fit() (cuvis_ai.transformation.base_transformation.basetransformation method)": [[98, "cuvis_ai.transformation.base_transformation.BaseTransformation.fit", false]], "fit() (cuvis_ai.transformation.reflectance.reflectance method)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.fit", false]], "fit() (cuvis_ai.transformation.torch_transformation.torchtransformation method)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.fit", false]], "fit() (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation method)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.fit", false]], "fit() (cuvis_ai.unsupervised.base_unsupervised.baseunsupervised method)": [[125, "cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised.fit", false]], "fit() (cuvis_ai.unsupervised.gmm.gmm method)": [[127, "cuvis_ai.unsupervised.gmm.GMM.fit", false]], "fit() (cuvis_ai.unsupervised.kmeans.kmeans method)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.fit", false]], "fit() (cuvis_ai.unsupervised.mean_shift.meanshift method)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.fit", false]], "flatten_batch_and_labels() (in module cuvis_ai.utils.numpy_utils)": [[140, "cuvis_ai.utils.numpy_utils.flatten_batch_and_labels", false]], "flatten_batch_and_spatial() (in module cuvis_ai.utils.numpy_utils)": [[141, "cuvis_ai.utils.numpy_utils.flatten_batch_and_spatial", false]], "flatten_labels() (in module cuvis_ai.utils.numpy_utils)": [[142, "cuvis_ai.utils.numpy_utils.flatten_labels", false]], "flatten_spatial() (in module cuvis_ai.utils.numpy_utils)": [[143, "cuvis_ai.utils.numpy_utils.flatten_spatial", false]], "forward() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.forward", false]], "forward() (cuvis_ai.deciders.base_decider.basedecider method)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.forward", false]], "forward() (cuvis_ai.deciders.binary_decider.binarydecider method)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.forward", false]], "forward() (cuvis_ai.deciders.cascaded_decider.cascaded method)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.forward", false]], "forward() (cuvis_ai.deciders.combining_decider.combiningdecider method)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.forward", false]], "forward() (cuvis_ai.deciders.multiclass_decider.multiclassdecider method)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.forward", false]], "forward() (cuvis_ai.distance.distance.abstractdistance method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.forward", false]], "forward() (cuvis_ai.distance.distance.canberra method)": [[34, "cuvis_ai.distance.distance.Canberra.forward", false]], "forward() (cuvis_ai.distance.distance.ecs method)": [[35, "cuvis_ai.distance.distance.ECS.forward", false]], "forward() (cuvis_ai.distance.distance.euclidean method)": [[36, "cuvis_ai.distance.distance.Euclidean.forward", false]], "forward() (cuvis_ai.distance.distance.gfc method)": [[37, "cuvis_ai.distance.distance.GFC.forward", false]], "forward() (cuvis_ai.distance.distance.manhattan method)": [[38, "cuvis_ai.distance.distance.Manhattan.forward", false]], "forward() (cuvis_ai.distance.distance.minkowski method)": [[39, "cuvis_ai.distance.distance.Minkowski.forward", false]], "forward() (cuvis_ai.distance.distance.spectralangle method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.forward", false]], "forward() (cuvis_ai.node.node.node method)": [[49, "cuvis_ai.node.node.Node.forward", false]], "forward() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.forward", false]], "forward() (cuvis_ai.preprocessor.nmf.nmf method)": [[57, "cuvis_ai.preprocessor.nmf.NMF.forward", false]], "forward() (cuvis_ai.preprocessor.pca.pca method)": [[59, "cuvis_ai.preprocessor.pca.PCA.forward", false]], "forward() (cuvis_ai.supervised.base_supervised.basesupervised method)": [[62, "cuvis_ai.supervised.base_supervised.BaseSupervised.forward", false]], "forward() (cuvis_ai.supervised.lda.lda method)": [[64, "cuvis_ai.supervised.lda.LDA.forward", false]], "forward() (cuvis_ai.supervised.qda.qda method)": [[66, "cuvis_ai.supervised.qda.QDA.forward", false]], "forward() (cuvis_ai.supervised.skorch_supervised.skorchsupervised method)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.forward", false]], "forward() (cuvis_ai.supervised.svm.svm method)": [[70, "cuvis_ai.supervised.svm.SVM.forward", false]], "forward() (cuvis_ai.transformation.base_transformation.basetransformation method)": [[98, "cuvis_ai.transformation.base_transformation.BaseTransformation.forward", false]], "forward() (cuvis_ai.transformation.reflectance.reflectance method)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.forward", false]], "forward() (cuvis_ai.transformation.torch_transformation.torchtransformation method)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.forward", false]], "forward() (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation method)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.forward", false]], "forward() (cuvis_ai.unsupervised.base_unsupervised.baseunsupervised method)": [[125, "cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised.forward", false]], "forward() (cuvis_ai.unsupervised.gmm.gmm method)": [[127, "cuvis_ai.unsupervised.gmm.GMM.forward", false]], "forward() (cuvis_ai.unsupervised.kmeans.kmeans method)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.forward", false]], "forward() (cuvis_ai.unsupervised.mean_shift.meanshift method)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.forward", false]], "gen_coco_labels() (in module cuvis_ai.utils.numpy_utils)": [[144, "cuvis_ai.utils.numpy_utils.gen_coco_labels", false]], "get_dataloader_from_dataset() (in module cuvis_ai.data.utils_dataloader)": [[17, "cuvis_ai.data.utils_dataloader.get_dataloader_from_dataset", false]], "get_datatype() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.get_datatype", false]], "get_np_dummy_data() (in module cuvis_ai.utils.test)": [[153, "cuvis_ai.utils.test.get_np_dummy_data", false]], "get_shape_without_batch() (in module cuvis_ai.utils.numpy_utils)": [[145, "cuvis_ai.utils.numpy_utils.get_shape_without_batch", false]], "gfc (class in cuvis_ai.distance.distance)": [[37, "cuvis_ai.distance.distance.GFC", false]], "gmm (class in cuvis_ai.unsupervised.gmm)": [[127, "cuvis_ai.unsupervised.gmm.GMM", false]], "graph (class in cuvis_ai.pipeline.graph)": [[52, "cuvis_ai.pipeline.graph.Graph", false]], "id() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.id", false]], "id() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.id", false]], "id() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.id", false]], "id() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.id", false]], "id() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.id", false]], "id() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.id", false]], "id() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.id", false]], "id() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.id", false]], "id() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.id", false]], "id() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.id", false]], "id() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.id", false]], "id() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.id", false]], "id() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.id", false]], "id() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.id", false]], "id() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.id", false]], "id() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.id", false]], "input_dim (cuvis_ai.data.basedataset.basedataset property)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.input_dim", false]], "input_dim (cuvis_ai.deciders.base_decider.basedecider property)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.input_dim", false]], "input_dim (cuvis_ai.deciders.binary_decider.binarydecider property)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.input_dim", false]], "input_dim (cuvis_ai.deciders.cascaded_decider.cascaded property)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.input_dim", false]], "input_dim (cuvis_ai.deciders.combining_decider.combiningdecider property)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.input_dim", false]], "input_dim (cuvis_ai.deciders.multiclass_decider.multiclassdecider property)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.input_dim", false]], "input_dim (cuvis_ai.distance.distance.abstractdistance property)": [[33, "cuvis_ai.distance.distance.AbstractDistance.input_dim", false]], "input_dim (cuvis_ai.distance.distance.canberra property)": [[34, "cuvis_ai.distance.distance.Canberra.input_dim", false]], "input_dim (cuvis_ai.distance.distance.ecs property)": [[35, "cuvis_ai.distance.distance.ECS.input_dim", false]], "input_dim (cuvis_ai.distance.distance.euclidean property)": [[36, "cuvis_ai.distance.distance.Euclidean.input_dim", false]], "input_dim (cuvis_ai.distance.distance.gfc property)": [[37, "cuvis_ai.distance.distance.GFC.input_dim", false]], "input_dim (cuvis_ai.distance.distance.manhattan property)": [[38, "cuvis_ai.distance.distance.Manhattan.input_dim", false]], "input_dim (cuvis_ai.distance.distance.minkowski property)": [[39, "cuvis_ai.distance.distance.Minkowski.input_dim", false]], "input_dim (cuvis_ai.distance.distance.spectralangle property)": [[40, "cuvis_ai.distance.distance.SpectralAngle.input_dim", false]], "input_dim (cuvis_ai.node.node.node property)": [[49, "cuvis_ai.node.node.Node.input_dim", false]], "input_dim (cuvis_ai.preprocessor.nmf.nmf property)": [[57, "cuvis_ai.preprocessor.nmf.NMF.input_dim", false]], "input_dim (cuvis_ai.preprocessor.pca.pca property)": [[59, "cuvis_ai.preprocessor.pca.PCA.input_dim", false]], "input_dim (cuvis_ai.supervised.lda.lda property)": [[64, "cuvis_ai.supervised.lda.LDA.input_dim", false]], "input_dim (cuvis_ai.supervised.qda.qda property)": [[66, "cuvis_ai.supervised.qda.QDA.input_dim", false]], "input_dim (cuvis_ai.supervised.svm.svm property)": [[70, "cuvis_ai.supervised.svm.SVM.input_dim", false]], "input_dim (cuvis_ai.transformation.reflectance.reflectance property)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.input_dim", false]], "input_dim (cuvis_ai.transformation.torch_transformation.torchtransformation property)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.input_dim", false]], "input_dim (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation property)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.input_dim", false]], "input_dim (cuvis_ai.unsupervised.gmm.gmm property)": [[127, "cuvis_ai.unsupervised.gmm.GMM.input_dim", false]], "input_dim (cuvis_ai.unsupervised.kmeans.kmeans property)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.input_dim", false]], "input_dim (cuvis_ai.unsupervised.mean_shift.meanshift property)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.input_dim", false]], "input_dim() (cuvis_ai.transformation.base_transformation.basetransformation method)": [[98, "cuvis_ai.transformation.base_transformation.BaseTransformation.input_dim", false]], "kmeans (class in cuvis_ai.unsupervised.kmeans)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans", false]], "labelconsumer (class in cuvis_ai.node.consumers)": [[44, "cuvis_ai.node.Consumers.LabelConsumer", false]], "labelconsumerinference (class in cuvis_ai.node.consumers)": [[45, "cuvis_ai.node.Consumers.LabelConsumerInference", false]], "lda (class in cuvis_ai.supervised.lda)": [[64, "cuvis_ai.supervised.lda.LDA", false]], "load() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.load", false]], "load() (cuvis_ai.deciders.base_decider.basedecider method)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.load", false]], "load() (cuvis_ai.deciders.binary_decider.binarydecider method)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.load", false]], "load() (cuvis_ai.deciders.cascaded_decider.cascaded method)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.load", false]], "load() (cuvis_ai.deciders.combining_decider.combiningdecider method)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.load", false]], "load() (cuvis_ai.deciders.multiclass_decider.multiclassdecider method)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.load", false]], "load() (cuvis_ai.distance.distance.abstractdistance method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.load", false]], "load() (cuvis_ai.distance.distance.canberra method)": [[34, "cuvis_ai.distance.distance.Canberra.load", false]], "load() (cuvis_ai.distance.distance.ecs method)": [[35, "cuvis_ai.distance.distance.ECS.load", false]], "load() (cuvis_ai.distance.distance.euclidean method)": [[36, "cuvis_ai.distance.distance.Euclidean.load", false]], "load() (cuvis_ai.distance.distance.gfc method)": [[37, "cuvis_ai.distance.distance.GFC.load", false]], "load() (cuvis_ai.distance.distance.manhattan method)": [[38, "cuvis_ai.distance.distance.Manhattan.load", false]], "load() (cuvis_ai.distance.distance.minkowski method)": [[39, "cuvis_ai.distance.distance.Minkowski.load", false]], "load() (cuvis_ai.distance.distance.spectralangle method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.load", false]], "load() (cuvis_ai.node.node.node method)": [[49, "cuvis_ai.node.node.Node.load", false]], "load() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.load", false]], "load() (cuvis_ai.preprocessor.nmf.nmf method)": [[57, "cuvis_ai.preprocessor.nmf.NMF.load", false]], "load() (cuvis_ai.preprocessor.pca.pca method)": [[59, "cuvis_ai.preprocessor.pca.PCA.load", false]], "load() (cuvis_ai.supervised.lda.lda method)": [[64, "cuvis_ai.supervised.lda.LDA.load", false]], "load() (cuvis_ai.supervised.qda.qda method)": [[66, "cuvis_ai.supervised.qda.QDA.load", false]], "load() (cuvis_ai.supervised.skorch_supervised.skorchsupervised method)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.load", false]], "load() (cuvis_ai.supervised.svm.svm method)": [[70, "cuvis_ai.supervised.svm.SVM.load", false]], "load() (cuvis_ai.transformation.base_transformation.basetransformation method)": [[98, "cuvis_ai.transformation.base_transformation.BaseTransformation.load", false]], "load() (cuvis_ai.transformation.reflectance.reflectance method)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.load", false]], "load() (cuvis_ai.transformation.torch_transformation.torchtransformation method)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.load", false]], "load() (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation method)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.load", false]], "load() (cuvis_ai.unsupervised.gmm.gmm method)": [[127, "cuvis_ai.unsupervised.gmm.GMM.load", false]], "load() (cuvis_ai.unsupervised.kmeans.kmeans method)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.load", false]], "load() (cuvis_ai.unsupervised.mean_shift.meanshift method)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.load", false]], "load_node() (cuvis_ai.utils.serializer.serializer method)": [[151, "cuvis_ai.utils.serializer.Serializer.load_node", false]], "longmessage (cuvis_ai.test.test_numpy_utils.testnumpyutils attribute)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.longMessage", false]], "longmessage (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf attribute)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.longMessage", false]], "longmessage (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca attribute)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testpreprocessornmf attribute)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testpreprocessorpca attribute)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testsupervisedlda attribute)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testsupervisedqda attribute)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testsupervisedsvm attribute)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testtransformationreflectance attribute)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testtransformationtorch attribute)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testtransformationtorchvision attribute)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testunsupervisedgmm attribute)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testunsupervisedkmeans attribute)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.longMessage", false]], "longmessage (cuvis_ai.test.test_serialization.testunsupervisedmeanshift attribute)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.longMessage", false]], "longmessage (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm attribute)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.longMessage", false]], "longmessage (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans attribute)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.longMessage", false]], "lr (cuvis_ai.utils.nn_config.adam attribute)": [[134, "cuvis_ai.utils.nn_config.Adam.lr", false]], "lr (cuvis_ai.utils.nn_config.sgd attribute)": [[136, "cuvis_ai.utils.nn_config.SGD.lr", false]], "manhattan (class in cuvis_ai.distance.distance)": [[38, "cuvis_ai.distance.distance.Manhattan", false]], "maxdiff (cuvis_ai.test.test_numpy_utils.testnumpyutils attribute)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.maxDiff", false]], "maxdiff (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf attribute)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.maxDiff", false]], "maxdiff (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca attribute)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testpreprocessornmf attribute)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testpreprocessorpca attribute)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testsupervisedlda attribute)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testsupervisedqda attribute)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testsupervisedsvm attribute)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testtransformationreflectance attribute)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testtransformationtorch attribute)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testtransformationtorchvision attribute)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testunsupervisedgmm attribute)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testunsupervisedkmeans attribute)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.maxDiff", false]], "maxdiff (cuvis_ai.test.test_serialization.testunsupervisedmeanshift attribute)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.maxDiff", false]], "maxdiff (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm attribute)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.maxDiff", false]], "maxdiff (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans attribute)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.maxDiff", false]], "meanshift (class in cuvis_ai.unsupervised.mean_shift)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift", false]], "metadataconsumer (class in cuvis_ai.node.consumers)": [[46, "cuvis_ai.node.Consumers.MetadataConsumer", false]], "metadataconsumerinference (class in cuvis_ai.node.consumers)": [[47, "cuvis_ai.node.Consumers.MetadataConsumerInference", false]], "metadatainit() (in module cuvis_ai.data.metadatautils)": [[11, "cuvis_ai.data.MetadataUtils.metadataInit", false]], "minkowski (class in cuvis_ai.distance.distance)": [[39, "cuvis_ai.distance.distance.Minkowski", false]], "model (cuvis_ai.supervised.skorch_supervised.skorchsupervised attribute)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.model", false]], "model_args (cuvis_ai.supervised.skorch_supervised.skorchsupervised attribute)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.model_args", false]], "module": [[0, "module-cuvis_ai", false], [1, "module-cuvis_ai.data", false], [2, "module-cuvis_ai.data.BaseDataSet", false], [4, "module-cuvis_ai.data.CuvisDataSet", false], [5, "module-cuvis_ai.data.Labels2TV", false], [8, "module-cuvis_ai.data.LiveCuvisDataLoader", false], [9, "module-cuvis_ai.data.MetadataUtils", false], [12, "module-cuvis_ai.data.NumpyDataSet", false], [13, "module-cuvis_ai.data.OutputFormat", false], [14, "module-cuvis_ai.data.PublicDataSets", false], [15, "module-cuvis_ai.data.utils_dataloader", false], [18, "module-cuvis_ai.deciders", false], [19, "module-cuvis_ai.deciders.base_decider", false], [21, "module-cuvis_ai.deciders.binary_decider", false], [23, "module-cuvis_ai.deciders.cascaded_decider", false], [25, "module-cuvis_ai.deciders.combining_decider", false], [29, "module-cuvis_ai.deciders.multiclass_decider", false], [31, "module-cuvis_ai.distance", false], [32, "module-cuvis_ai.distance.distance", false], [41, "module-cuvis_ai.node", false], [42, "module-cuvis_ai.node.Consumers", false], [48, "module-cuvis_ai.node.node", false], [50, "module-cuvis_ai.pipeline", false], [51, "module-cuvis_ai.pipeline.graph", false], [53, "module-cuvis_ai.preprocessor", false], [54, "module-cuvis_ai.preprocessor.base_preprocessor", false], [56, "module-cuvis_ai.preprocessor.nmf", false], [58, "module-cuvis_ai.preprocessor.pca", false], [60, "module-cuvis_ai.supervised", false], [61, "module-cuvis_ai.supervised.base_supervised", false], [63, "module-cuvis_ai.supervised.lda", false], [65, "module-cuvis_ai.supervised.qda", false], [67, "module-cuvis_ai.supervised.skorch_supervised", false], [69, "module-cuvis_ai.supervised.svm", false], [71, "module-cuvis_ai.test", false], [72, "module-cuvis_ai.test.test_numpy_utils", false], [74, "module-cuvis_ai.test.test_pipeline_graph", false], [75, "module-cuvis_ai.test.test_preprocessor_structural", false], [79, "module-cuvis_ai.test.test_serialization", false], [92, "module-cuvis_ai.test.test_unsupervised_structural", false], [96, "module-cuvis_ai.transformation", false], [97, "module-cuvis_ai.transformation.base_transformation", false], [99, "module-cuvis_ai.transformation.reflectance", false], [101, "module-cuvis_ai.transformation.torch_transformation", false], [103, "module-cuvis_ai.transformation.torchvision_transformation", false], [105, "module-cuvis_ai.tv_transforms", false], [106, "module-cuvis_ai.tv_transforms.Bandpass", false], [110, "module-cuvis_ai.tv_transforms.MultiBandpass", false], [114, "module-cuvis_ai.tv_transforms.NormalizeStdDev", false], [118, "module-cuvis_ai.tv_transforms.NormalizeToFloat", false], [122, "module-cuvis_ai.tv_transforms.WavelengthList", false], [123, "module-cuvis_ai.unsupervised", false], [124, "module-cuvis_ai.unsupervised.base_unsupervised", false], [126, "module-cuvis_ai.unsupervised.gmm", false], [128, "module-cuvis_ai.unsupervised.kmeans", false], [130, "module-cuvis_ai.unsupervised.mean_shift", false], [132, "module-cuvis_ai.utils", false], [133, "module-cuvis_ai.utils.nn_config", false], [137, "module-cuvis_ai.utils.numpy_utils", false], [150, "module-cuvis_ai.utils.serializer", false], [152, "module-cuvis_ai.utils.test", false], [154, "module-cuvis_ai.utils.visualize", false]], "momentum (cuvis_ai.utils.nn_config.sgd attribute)": [[136, "cuvis_ai.utils.nn_config.SGD.momentum", false]], "multiclassdecider (class in cuvis_ai.deciders.multiclass_decider)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider", false]], "n_components (cuvis_ai.supervised.lda.lda attribute)": [[64, "cuvis_ai.supervised.lda.LDA.n_components", false]], "name (cuvis_ai.utils.nn_config.adam property)": [[134, "cuvis_ai.utils.nn_config.Adam.name", false]], "name (cuvis_ai.utils.nn_config.optimizer property)": [[135, "cuvis_ai.utils.nn_config.Optimizer.name", false]], "name (cuvis_ai.utils.nn_config.sgd property)": [[136, "cuvis_ai.utils.nn_config.SGD.name", false]], "nesterov (cuvis_ai.utils.nn_config.sgd attribute)": [[136, "cuvis_ai.utils.nn_config.SGD.nesterov", false]], "nmf (class in cuvis_ai.preprocessor.nmf)": [[57, "cuvis_ai.preprocessor.nmf.NMF", false]], "node (class in cuvis_ai.node.node)": [[49, "cuvis_ai.node.node.Node", false]], "optimizer (class in cuvis_ai.utils.nn_config)": [[135, "cuvis_ai.utils.nn_config.Optimizer", false]], "optimizer (cuvis_ai.supervised.skorch_supervised.skorchsupervised attribute)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.optimizer", false]], "output_dim (cuvis_ai.data.basedataset.basedataset property)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.output_dim", false]], "output_dim (cuvis_ai.deciders.base_decider.basedecider property)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.output_dim", false]], "output_dim (cuvis_ai.deciders.binary_decider.binarydecider property)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.output_dim", false]], "output_dim (cuvis_ai.deciders.cascaded_decider.cascaded property)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.output_dim", false]], "output_dim (cuvis_ai.deciders.combining_decider.combiningdecider property)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.output_dim", false]], "output_dim (cuvis_ai.deciders.multiclass_decider.multiclassdecider property)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.output_dim", false]], "output_dim (cuvis_ai.distance.distance.abstractdistance property)": [[33, "cuvis_ai.distance.distance.AbstractDistance.output_dim", false]], "output_dim (cuvis_ai.distance.distance.canberra property)": [[34, "cuvis_ai.distance.distance.Canberra.output_dim", false]], "output_dim (cuvis_ai.distance.distance.ecs property)": [[35, "cuvis_ai.distance.distance.ECS.output_dim", false]], "output_dim (cuvis_ai.distance.distance.euclidean property)": [[36, "cuvis_ai.distance.distance.Euclidean.output_dim", false]], "output_dim (cuvis_ai.distance.distance.gfc property)": [[37, "cuvis_ai.distance.distance.GFC.output_dim", false]], "output_dim (cuvis_ai.distance.distance.manhattan property)": [[38, "cuvis_ai.distance.distance.Manhattan.output_dim", false]], "output_dim (cuvis_ai.distance.distance.minkowski property)": [[39, "cuvis_ai.distance.distance.Minkowski.output_dim", false]], "output_dim (cuvis_ai.distance.distance.spectralangle property)": [[40, "cuvis_ai.distance.distance.SpectralAngle.output_dim", false]], "output_dim (cuvis_ai.node.node.node property)": [[49, "cuvis_ai.node.node.Node.output_dim", false]], "output_dim (cuvis_ai.preprocessor.nmf.nmf property)": [[57, "cuvis_ai.preprocessor.nmf.NMF.output_dim", false]], "output_dim (cuvis_ai.preprocessor.pca.pca property)": [[59, "cuvis_ai.preprocessor.pca.PCA.output_dim", false]], "output_dim (cuvis_ai.supervised.lda.lda property)": [[64, "cuvis_ai.supervised.lda.LDA.output_dim", false]], "output_dim (cuvis_ai.supervised.qda.qda property)": [[66, "cuvis_ai.supervised.qda.QDA.output_dim", false]], "output_dim (cuvis_ai.supervised.svm.svm property)": [[70, "cuvis_ai.supervised.svm.SVM.output_dim", false]], "output_dim (cuvis_ai.transformation.reflectance.reflectance property)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.output_dim", false]], "output_dim (cuvis_ai.transformation.torch_transformation.torchtransformation property)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.output_dim", false]], "output_dim (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation property)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.output_dim", false]], "output_dim (cuvis_ai.unsupervised.gmm.gmm property)": [[127, "cuvis_ai.unsupervised.gmm.GMM.output_dim", false]], "output_dim (cuvis_ai.unsupervised.kmeans.kmeans property)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.output_dim", false]], "output_dim (cuvis_ai.unsupervised.mean_shift.meanshift property)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.output_dim", false]], "output_dim() (cuvis_ai.transformation.base_transformation.basetransformation method)": [[98, "cuvis_ai.transformation.base_transformation.BaseTransformation.output_dim", false]], "pca (class in cuvis_ai.preprocessor.pca)": [[59, "cuvis_ai.preprocessor.pca.PCA", false]], "power_t (cuvis_ai.utils.nn_config.sgd attribute)": [[136, "cuvis_ai.utils.nn_config.SGD.power_t", false]], "preprocessor (class in cuvis_ai.preprocessor.base_preprocessor)": [[55, "cuvis_ai.preprocessor.base_preprocessor.Preprocessor", false]], "pytorch_args (cuvis_ai.utils.nn_config.adam property)": [[134, "cuvis_ai.utils.nn_config.Adam.pytorch_args", false]], "pytorch_args (cuvis_ai.utils.nn_config.optimizer property)": [[135, "cuvis_ai.utils.nn_config.Optimizer.pytorch_args", false]], "pytorch_args (cuvis_ai.utils.nn_config.sgd property)": [[136, "cuvis_ai.utils.nn_config.SGD.pytorch_args", false]], "qda (class in cuvis_ai.supervised.qda)": [[66, "cuvis_ai.supervised.qda.QDA", false]], "reconstruct_from_yaml() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.reconstruct_from_yaml", false]], "reconstruct_stage() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.reconstruct_stage", false]], "reflectance (class in cuvis_ai.transformation.reflectance)": [[100, "cuvis_ai.transformation.reflectance.Reflectance", false]], "rle2mask() (in module cuvis_ai.data.labels2tv)": [[6, "cuvis_ai.data.Labels2TV.RLE2mask", false]], "run() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.run", false]], "run() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.run", false]], "run() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.run", false]], "run() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.run", false]], "run() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.run", false]], "run() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.run", false]], "run() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.run", false]], "run() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.run", false]], "run() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.run", false]], "run() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.run", false]], "run() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.run", false]], "run() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.run", false]], "run() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.run", false]], "run() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.run", false]], "run() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.run", false]], "run() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.run", false]], "score() (cuvis_ai.distance.distance.abstractdistance method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.score", false]], "score() (cuvis_ai.distance.distance.canberra static method)": [[34, "cuvis_ai.distance.distance.Canberra.score", false]], "score() (cuvis_ai.distance.distance.ecs method)": [[35, "cuvis_ai.distance.distance.ECS.score", false]], "score() (cuvis_ai.distance.distance.euclidean static method)": [[36, "cuvis_ai.distance.distance.Euclidean.score", false]], "score() (cuvis_ai.distance.distance.gfc method)": [[37, "cuvis_ai.distance.distance.GFC.score", false]], "score() (cuvis_ai.distance.distance.manhattan static method)": [[38, "cuvis_ai.distance.distance.Manhattan.score", false]], "score() (cuvis_ai.distance.distance.minkowski method)": [[39, "cuvis_ai.distance.distance.Minkowski.score", false]], "score() (cuvis_ai.distance.distance.spectralangle static method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.score", false]], "serialize() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.serialize", false]], "serialize() (cuvis_ai.deciders.base_decider.basedecider method)": [[20, "cuvis_ai.deciders.base_decider.BaseDecider.serialize", false]], "serialize() (cuvis_ai.deciders.binary_decider.binarydecider method)": [[22, "cuvis_ai.deciders.binary_decider.BinaryDecider.serialize", false]], "serialize() (cuvis_ai.deciders.cascaded_decider.cascaded method)": [[24, "cuvis_ai.deciders.cascaded_decider.Cascaded.serialize", false]], "serialize() (cuvis_ai.deciders.combining_decider.combiningdecider method)": [[26, "cuvis_ai.deciders.combining_decider.CombiningDecider.serialize", false]], "serialize() (cuvis_ai.deciders.multiclass_decider.multiclassdecider method)": [[30, "cuvis_ai.deciders.multiclass_decider.MultiClassDecider.serialize", false]], "serialize() (cuvis_ai.distance.distance.abstractdistance method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.serialize", false]], "serialize() (cuvis_ai.distance.distance.canberra method)": [[34, "cuvis_ai.distance.distance.Canberra.serialize", false]], "serialize() (cuvis_ai.distance.distance.ecs method)": [[35, "cuvis_ai.distance.distance.ECS.serialize", false]], "serialize() (cuvis_ai.distance.distance.euclidean method)": [[36, "cuvis_ai.distance.distance.Euclidean.serialize", false]], "serialize() (cuvis_ai.distance.distance.gfc method)": [[37, "cuvis_ai.distance.distance.GFC.serialize", false]], "serialize() (cuvis_ai.distance.distance.manhattan method)": [[38, "cuvis_ai.distance.distance.Manhattan.serialize", false]], "serialize() (cuvis_ai.distance.distance.minkowski method)": [[39, "cuvis_ai.distance.distance.Minkowski.serialize", false]], "serialize() (cuvis_ai.distance.distance.spectralangle method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.serialize", false]], "serialize() (cuvis_ai.node.node.node method)": [[49, "cuvis_ai.node.node.Node.serialize", false]], "serialize() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.serialize", false]], "serialize() (cuvis_ai.preprocessor.nmf.nmf method)": [[57, "cuvis_ai.preprocessor.nmf.NMF.serialize", false]], "serialize() (cuvis_ai.preprocessor.pca.pca method)": [[59, "cuvis_ai.preprocessor.pca.PCA.serialize", false]], "serialize() (cuvis_ai.supervised.lda.lda method)": [[64, "cuvis_ai.supervised.lda.LDA.serialize", false]], "serialize() (cuvis_ai.supervised.qda.qda method)": [[66, "cuvis_ai.supervised.qda.QDA.serialize", false]], "serialize() (cuvis_ai.supervised.skorch_supervised.skorchsupervised method)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.serialize", false]], "serialize() (cuvis_ai.supervised.svm.svm method)": [[70, "cuvis_ai.supervised.svm.SVM.serialize", false]], "serialize() (cuvis_ai.transformation.base_transformation.basetransformation method)": [[98, "cuvis_ai.transformation.base_transformation.BaseTransformation.serialize", false]], "serialize() (cuvis_ai.transformation.reflectance.reflectance method)": [[100, "cuvis_ai.transformation.reflectance.Reflectance.serialize", false]], "serialize() (cuvis_ai.transformation.torch_transformation.torchtransformation method)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation.serialize", false]], "serialize() (cuvis_ai.transformation.torchvision_transformation.torchvisiontransformation method)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation.serialize", false]], "serialize() (cuvis_ai.unsupervised.gmm.gmm method)": [[127, "cuvis_ai.unsupervised.gmm.GMM.serialize", false]], "serialize() (cuvis_ai.unsupervised.kmeans.kmeans method)": [[129, "cuvis_ai.unsupervised.kmeans.KMeans.serialize", false]], "serialize() (cuvis_ai.unsupervised.mean_shift.meanshift method)": [[131, "cuvis_ai.unsupervised.mean_shift.MeanShift.serialize", false]], "serialize_node() (cuvis_ai.utils.serializer.serializer method)": [[151, "cuvis_ai.utils.serializer.Serializer.serialize_node", false]], "serializer (class in cuvis_ai.utils.serializer)": [[151, "cuvis_ai.utils.serializer.Serializer", false]], "set_datatype() (cuvis_ai.data.basedataset.basedataset method)": [[3, "cuvis_ai.data.BaseDataSet.BaseDataSet.set_datatype", false]], "setup() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.setUp", false]], "setup() (cuvis_ai.test.test_preprocessor_structural.testpreprocessednode method)": [[76, "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode.setUp", false]], "setup() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.setUp", false]], "setup() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.setUp", false]], "setup() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.setUp", false]], "setup() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.setUp", false]], "setup() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.setUp", false]], "setup() (cuvis_ai.test.test_unsupervised_structural.testunsupervisednode method)": [[95, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode.setUp", false]], "setupclass() (cuvis_ai.test.test_numpy_utils.testnumpyutils class method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.setUpClass", false]], "setupclass() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf class method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.setUpClass", false]], "setupclass() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca class method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testpreprocessornmf class method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testpreprocessorpca class method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testsupervisedlda class method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testsupervisedqda class method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testsupervisedsvm class method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testtransformationreflectance class method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testtransformationtorch class method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testtransformationtorchvision class method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testunsupervisedgmm class method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testunsupervisedkmeans class method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.setUpClass", false]], "setupclass() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift class method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.setUpClass", false]], "setupclass() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm class method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.setUpClass", false]], "setupclass() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans class method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.setUpClass", false]], "sgd (class in cuvis_ai.utils.nn_config)": [[136, "cuvis_ai.utils.nn_config.SGD", false]], "shortdescription() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.shortDescription", false]], "shortdescription() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.shortDescription", false]], "skiptest() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.skipTest", false]], "skiptest() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.skipTest", false]], "skiptest() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.skipTest", false]], "skiptest() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.skipTest", false]], "skiptest() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.skipTest", false]], "skiptest() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.skipTest", false]], "sklearn_args (cuvis_ai.utils.nn_config.adam property)": [[134, "cuvis_ai.utils.nn_config.Adam.sklearn_args", false]], "sklearn_args (cuvis_ai.utils.nn_config.optimizer property)": [[135, "cuvis_ai.utils.nn_config.Optimizer.sklearn_args", false]], "sklearn_args (cuvis_ai.utils.nn_config.sgd property)": [[136, "cuvis_ai.utils.nn_config.SGD.sklearn_args", false]], "skorchsupervised (class in cuvis_ai.supervised.skorch_supervised)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised", false]], "solver (cuvis_ai.supervised.lda.lda attribute)": [[64, "cuvis_ai.supervised.lda.LDA.solver", false]], "spectra_to_array() (cuvis_ai.distance.distance.abstractdistance static method)": [[33, "cuvis_ai.distance.distance.AbstractDistance.spectra_to_array", false]], "spectra_to_array() (cuvis_ai.distance.distance.canberra static method)": [[34, "cuvis_ai.distance.distance.Canberra.spectra_to_array", false]], "spectra_to_array() (cuvis_ai.distance.distance.ecs static method)": [[35, "cuvis_ai.distance.distance.ECS.spectra_to_array", false]], "spectra_to_array() (cuvis_ai.distance.distance.euclidean static method)": [[36, "cuvis_ai.distance.distance.Euclidean.spectra_to_array", false]], "spectra_to_array() (cuvis_ai.distance.distance.gfc static method)": [[37, "cuvis_ai.distance.distance.GFC.spectra_to_array", false]], "spectra_to_array() (cuvis_ai.distance.distance.manhattan static method)": [[38, "cuvis_ai.distance.distance.Manhattan.spectra_to_array", false]], "spectra_to_array() (cuvis_ai.distance.distance.minkowski static method)": [[39, "cuvis_ai.distance.distance.Minkowski.spectra_to_array", false]], "spectra_to_array() (cuvis_ai.distance.distance.spectralangle static method)": [[40, "cuvis_ai.distance.distance.SpectralAngle.spectra_to_array", false]], "spectralangle (class in cuvis_ai.distance.distance)": [[40, "cuvis_ai.distance.distance.SpectralAngle", false]], "subtest() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.subTest", false]], "subtest() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.subTest", false]], "subtest() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.subTest", false]], "subtest() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.subTest", false]], "subtest() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.subTest", false]], "subtest() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.subTest", false]], "svm (class in cuvis_ai.supervised.svm)": [[70, "cuvis_ai.supervised.svm.SVM", false]], "teardown() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.tearDown", false]], "teardown() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.tearDown", false]], "teardown() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.tearDown", false]], "teardown() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.tearDown", false]], "teardown() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.tearDown", false]], "teardown() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.tearDown", false]], "teardownclass() (cuvis_ai.test.test_numpy_utils.testnumpyutils class method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf class method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca class method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testpreprocessornmf class method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testpreprocessorpca class method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testsupervisedlda class method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testsupervisedqda class method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testsupervisedsvm class method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testtransformationreflectance class method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testtransformationtorch class method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testtransformationtorchvision class method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testunsupervisedgmm class method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testunsupervisedkmeans class method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift class method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm class method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.tearDownClass", false]], "teardownclass() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans class method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.tearDownClass", false]], "test_correct_input_dim() (cuvis_ai.test.test_preprocessor_structural.testpreprocessednode method)": [[76, "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode.test_correct_input_dim", false]], "test_correct_input_dim() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.test_correct_input_dim", false]], "test_correct_input_dim() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.test_correct_input_dim", false]], "test_correct_input_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.test_correct_input_dim", false]], "test_correct_input_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.test_correct_input_dim", false]], "test_correct_input_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisednode method)": [[95, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode.test_correct_input_dim", false]], "test_correct_output_dim() (cuvis_ai.test.test_preprocessor_structural.testpreprocessednode method)": [[76, "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode.test_correct_output_dim", false]], "test_correct_output_dim() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.test_correct_output_dim", false]], "test_correct_output_dim() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.test_correct_output_dim", false]], "test_correct_output_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.test_correct_output_dim", false]], "test_correct_output_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.test_correct_output_dim", false]], "test_correct_output_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisednode method)": [[95, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode.test_correct_output_dim", false]], "test_get_shape_without_batch() (cuvis_ai.test.test_numpy_utils.testnumpyutils method)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils.test_get_shape_without_batch", false]], "test_incorrect_input_dim() (cuvis_ai.test.test_preprocessor_structural.testpreprocessednode method)": [[76, "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode.test_incorrect_input_dim", false]], "test_incorrect_input_dim() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.test_incorrect_input_dim", false]], "test_incorrect_input_dim() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.test_incorrect_input_dim", false]], "test_incorrect_input_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.test_incorrect_input_dim", false]], "test_incorrect_input_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.test_incorrect_input_dim", false]], "test_incorrect_input_dim() (cuvis_ai.test.test_unsupervised_structural.testunsupervisednode method)": [[95, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode.test_incorrect_input_dim", false]], "test_initialization() (cuvis_ai.test.test_preprocessor_structural.testpreprocessednode method)": [[76, "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode.test_initialization", false]], "test_initialization() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.test_initialization", false]], "test_initialization() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.test_initialization", false]], "test_initialization() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.test_initialization", false]], "test_initialization() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.test_initialization", false]], "test_initialization() (cuvis_ai.test.test_unsupervised_structural.testunsupervisednode method)": [[95, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode.test_initialization", false]], "test_passthrough() (cuvis_ai.test.test_preprocessor_structural.testpreprocessednode method)": [[76, "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode.test_passthrough", false]], "test_passthrough() (cuvis_ai.test.test_preprocessor_structural.testunsupervisednmf method)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF.test_passthrough", false]], "test_passthrough() (cuvis_ai.test.test_preprocessor_structural.testunsupervisedpca method)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA.test_passthrough", false]], "test_passthrough() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedgmm method)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM.test_passthrough", false]], "test_passthrough() (cuvis_ai.test.test_unsupervised_structural.testunsupervisedkmeans method)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans.test_passthrough", false]], "test_passthrough() (cuvis_ai.test.test_unsupervised_structural.testunsupervisednode method)": [[95, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode.test_passthrough", false]], "test_serialization() (cuvis_ai.test.test_serialization.testnodeserialization method)": [[80, "cuvis_ai.test.test_serialization.TestNodeSerialization.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testpreprocessornmf method)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testpreprocessorpca method)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testsupervisedlda method)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testsupervisedqda method)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testsupervisedsvm method)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testtransformationreflectance method)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testtransformationtorch method)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testtransformationtorchvision method)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testunsupervisedgmm method)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testunsupervisedkmeans method)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans.test_serialization", false]], "test_serialization() (cuvis_ai.test.test_serialization.testunsupervisedmeanshift method)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift.test_serialization", false]], "testnodeserialization (class in cuvis_ai.test.test_serialization)": [[80, "cuvis_ai.test.test_serialization.TestNodeSerialization", false]], "testnumpyutils (class in cuvis_ai.test.test_numpy_utils)": [[73, "cuvis_ai.test.test_numpy_utils.TestNumpyUtils", false]], "testpreprocessednode (class in cuvis_ai.test.test_preprocessor_structural)": [[76, "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode", false]], "testpreprocessornmf (class in cuvis_ai.test.test_serialization)": [[81, "cuvis_ai.test.test_serialization.TestPreprocessorNMF", false]], "testpreprocessorpca (class in cuvis_ai.test.test_serialization)": [[82, "cuvis_ai.test.test_serialization.TestPreprocessorPCA", false]], "testsupervisedlda (class in cuvis_ai.test.test_serialization)": [[83, "cuvis_ai.test.test_serialization.TestSupervisedLDA", false]], "testsupervisedqda (class in cuvis_ai.test.test_serialization)": [[84, "cuvis_ai.test.test_serialization.TestSupervisedQDA", false]], "testsupervisedsvm (class in cuvis_ai.test.test_serialization)": [[85, "cuvis_ai.test.test_serialization.TestSupervisedSVM", false]], "testtransformationreflectance (class in cuvis_ai.test.test_serialization)": [[86, "cuvis_ai.test.test_serialization.TestTransformationReflectance", false]], "testtransformationtorch (class in cuvis_ai.test.test_serialization)": [[87, "cuvis_ai.test.test_serialization.TestTransformationTorch", false]], "testtransformationtorchvision (class in cuvis_ai.test.test_serialization)": [[88, "cuvis_ai.test.test_serialization.TestTransformationTorchVision", false]], "testunsupervisedgmm (class in cuvis_ai.test.test_serialization)": [[89, "cuvis_ai.test.test_serialization.TestUnsupervisedGMM", false]], "testunsupervisedgmm (class in cuvis_ai.test.test_unsupervised_structural)": [[93, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM", false]], "testunsupervisedkmeans (class in cuvis_ai.test.test_serialization)": [[90, "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans", false]], "testunsupervisedkmeans (class in cuvis_ai.test.test_unsupervised_structural)": [[94, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans", false]], "testunsupervisedmeanshift (class in cuvis_ai.test.test_serialization)": [[91, "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift", false]], "testunsupervisednmf (class in cuvis_ai.test.test_preprocessor_structural)": [[77, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF", false]], "testunsupervisednode (class in cuvis_ai.test.test_unsupervised_structural)": [[95, "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode", false]], "testunsupervisedpca (class in cuvis_ai.test.test_preprocessor_structural)": [[78, "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA", false]], "torchtransformation (class in cuvis_ai.transformation.torch_transformation)": [[102, "cuvis_ai.transformation.torch_transformation.TorchTransformation", false]], "torchvisiontransformation (class in cuvis_ai.transformation.torchvision_transformation)": [[104, "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation", false]], "train() (cuvis_ai.pipeline.graph.graph method)": [[52, "cuvis_ai.pipeline.graph.Graph.train", false]], "training (cuvis_ai.tv_transforms.bandpass attribute)": [[109, "cuvis_ai.tv_transforms.Bandpass.training", false]], "training (cuvis_ai.tv_transforms.multibandpass attribute)": [[113, "cuvis_ai.tv_transforms.MultiBandpass.training", false]], "training (cuvis_ai.tv_transforms.normalizestddev attribute)": [[117, "cuvis_ai.tv_transforms.NormalizeStdDev.training", false]], "training (cuvis_ai.tv_transforms.normalizetofloat attribute)": [[121, "cuvis_ai.tv_transforms.NormalizeToFloat.training", false]], "unflatten_batch_and_labels() (in module cuvis_ai.utils.numpy_utils)": [[146, "cuvis_ai.utils.numpy_utils.unflatten_batch_and_labels", false]], "unflatten_batch_and_spatial() (in module cuvis_ai.utils.numpy_utils)": [[147, "cuvis_ai.utils.numpy_utils.unflatten_batch_and_spatial", false]], "unflatten_labels() (in module cuvis_ai.utils.numpy_utils)": [[148, "cuvis_ai.utils.numpy_utils.unflatten_labels", false]], "unflatten_spatial() (in module cuvis_ai.utils.numpy_utils)": [[149, "cuvis_ai.utils.numpy_utils.unflatten_spatial", false]], "verbose (cuvis_ai.supervised.skorch_supervised.skorchsupervised attribute)": [[68, "cuvis_ai.supervised.skorch_supervised.SkorchSupervised.verbose", false]], "visualize_features() (in module cuvis_ai.utils.visualize)": [[155, "cuvis_ai.utils.visualize.visualize_features", false]], "visualize_image() (in module cuvis_ai.utils.visualize)": [[156, "cuvis_ai.utils.visualize.visualize_image", false]]}, "objects": {"": [[0, 0, 0, "-", "cuvis_ai"]], "cuvis_ai": [[1, 0, 0, "-", "data"], [18, 0, 0, "-", "deciders"], [31, 0, 0, "-", "distance"], [41, 0, 0, "-", "node"], [50, 0, 0, "-", "pipeline"], [53, 0, 0, "-", "preprocessor"], [60, 0, 0, "-", "supervised"], [71, 0, 0, "-", "test"], [96, 0, 0, "-", "transformation"], [105, 0, 0, "-", "tv_transforms"], [123, 0, 0, "-", "unsupervised"], [132, 0, 0, "-", "utils"]], "cuvis_ai.data": [[2, 0, 0, "-", "BaseDataSet"], [4, 0, 0, "-", "CuvisDataSet"], [5, 0, 0, "-", "Labels2TV"], [8, 0, 0, "-", "LiveCuvisDataLoader"], [9, 0, 0, "-", "MetadataUtils"], [12, 0, 0, "-", "NumpyDataSet"], [13, 0, 0, "-", "OutputFormat"], [14, 0, 0, "-", "PublicDataSets"], [15, 0, 0, "-", "utils_dataloader"]], "cuvis_ai.data.BaseDataSet": [[3, 1, 1, "", "BaseDataSet"]], "cuvis_ai.data.BaseDataSet.BaseDataSet": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "check_input_dim"], [3, 2, 1, "", "check_output_dim"], [3, 2, 1, "", "extra_repr"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_datatype"], [3, 3, 1, "", "input_dim"], [3, 2, 1, "", "load"], [3, 3, 1, "", "output_dim"], [3, 2, 1, "", "serialize"], [3, 2, 1, "", "set_datatype"]], "cuvis_ai.data.Labels2TV": [[6, 4, 1, "", "RLE2mask"], [7, 4, 1, "", "convert_COCO2TV"]], "cuvis_ai.data.MetadataUtils": [[10, 5, 1, "", "C_ATTRIB_LIST"], [11, 4, 1, "", "metadataInit"]], "cuvis_ai.data.utils_dataloader": [[16, 4, 1, "", "cuvis_collate"], [17, 4, 1, "", "get_dataloader_from_dataset"]], "cuvis_ai.deciders": [[19, 0, 0, "-", "base_decider"], [21, 0, 0, "-", "binary_decider"], [23, 0, 0, "-", "cascaded_decider"], [25, 0, 0, "-", "combining_decider"], [29, 0, 0, "-", "multiclass_decider"]], "cuvis_ai.deciders.base_decider": [[20, 1, 1, "", "BaseDecider"]], "cuvis_ai.deciders.base_decider.BaseDecider": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "check_input_dim"], [20, 2, 1, "", "check_output_dim"], [20, 2, 1, "", "fit"], [20, 2, 1, "", "forward"], [20, 3, 1, "", "input_dim"], [20, 2, 1, "", "load"], [20, 3, 1, "", "output_dim"], [20, 2, 1, "", "serialize"]], "cuvis_ai.deciders.binary_decider": [[22, 1, 1, "", "BinaryDecider"]], "cuvis_ai.deciders.binary_decider.BinaryDecider": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "check_input_dim"], [22, 2, 1, "", "check_output_dim"], [22, 2, 1, "", "fit"], [22, 2, 1, "", "forward"], [22, 3, 1, "", "input_dim"], [22, 2, 1, "", "load"], [22, 3, 1, "", "output_dim"], [22, 2, 1, "", "serialize"]], "cuvis_ai.deciders.cascaded_decider": [[24, 1, 1, "", "Cascaded"]], "cuvis_ai.deciders.cascaded_decider.Cascaded": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "check_input_dim"], [24, 2, 1, "", "check_output_dim"], [24, 2, 1, "", "fit"], [24, 2, 1, "", "forward"], [24, 3, 1, "", "input_dim"], [24, 2, 1, "", "load"], [24, 3, 1, "", "output_dim"], [24, 2, 1, "", "serialize"]], "cuvis_ai.deciders.combining_decider": [[26, 1, 1, "", "CombiningDecider"], [27, 4, 1, "", "all_agree"], [28, 4, 1, "", "at_least_n_agree"]], "cuvis_ai.deciders.combining_decider.CombiningDecider": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "check_input_dim"], [26, 2, 1, "", "check_output_dim"], [26, 2, 1, "", "fit"], [26, 2, 1, "", "forward"], [26, 3, 1, "", "input_dim"], [26, 2, 1, "", "load"], [26, 3, 1, "", "output_dim"], [26, 2, 1, "", "serialize"]], "cuvis_ai.deciders.multiclass_decider": [[30, 1, 1, "", "MultiClassDecider"]], "cuvis_ai.deciders.multiclass_decider.MultiClassDecider": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "check_input_dim"], [30, 2, 1, "", "check_output_dim"], [30, 2, 1, "", "fit"], [30, 2, 1, "", "forward"], [30, 3, 1, "", "input_dim"], [30, 2, 1, "", "load"], [30, 3, 1, "", "output_dim"], [30, 2, 1, "", "serialize"]], "cuvis_ai.distance": [[32, 0, 0, "-", "distance"]], "cuvis_ai.distance.distance": [[33, 1, 1, "", "AbstractDistance"], [34, 1, 1, "", "Canberra"], [35, 1, 1, "", "ECS"], [36, 1, 1, "", "Euclidean"], [37, 1, 1, "", "GFC"], [38, 1, 1, "", "Manhattan"], [39, 1, 1, "", "Minkowski"], [40, 1, 1, "", "SpectralAngle"]], "cuvis_ai.distance.distance.AbstractDistance": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "check_input_dim"], [33, 2, 1, "", "check_output_dim"], [33, 2, 1, "", "fit"], [33, 2, 1, "", "forward"], [33, 3, 1, "", "input_dim"], [33, 2, 1, "", "load"], [33, 3, 1, "", "output_dim"], [33, 2, 1, "", "score"], [33, 2, 1, "", "serialize"], [33, 2, 1, "", "spectra_to_array"]], "cuvis_ai.distance.distance.Canberra": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "check_input_dim"], [34, 2, 1, "", "check_output_dim"], [34, 2, 1, "", "fit"], [34, 2, 1, "", "forward"], [34, 3, 1, "", "input_dim"], [34, 2, 1, "", "load"], [34, 3, 1, "", "output_dim"], [34, 2, 1, "", "score"], [34, 2, 1, "", "serialize"], [34, 2, 1, "", "spectra_to_array"]], "cuvis_ai.distance.distance.ECS": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "check_input_dim"], [35, 2, 1, "", "check_output_dim"], [35, 2, 1, "", "fit"], [35, 2, 1, "", "forward"], [35, 3, 1, "", "input_dim"], [35, 2, 1, "", "load"], [35, 3, 1, "", "output_dim"], [35, 2, 1, "", "score"], [35, 2, 1, "", "serialize"], [35, 2, 1, "", "spectra_to_array"]], "cuvis_ai.distance.distance.Euclidean": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "check_input_dim"], [36, 2, 1, "", "check_output_dim"], [36, 2, 1, "", "fit"], [36, 2, 1, "", "forward"], [36, 3, 1, "", "input_dim"], [36, 2, 1, "", "load"], [36, 3, 1, "", "output_dim"], [36, 2, 1, "", "score"], [36, 2, 1, "", "serialize"], [36, 2, 1, "", "spectra_to_array"]], "cuvis_ai.distance.distance.GFC": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "check_input_dim"], [37, 2, 1, "", "check_output_dim"], [37, 2, 1, "", "fit"], [37, 2, 1, "", "forward"], [37, 3, 1, "", "input_dim"], [37, 2, 1, "", "load"], [37, 3, 1, "", "output_dim"], [37, 2, 1, "", "score"], [37, 2, 1, "", "serialize"], [37, 2, 1, "", "spectra_to_array"]], "cuvis_ai.distance.distance.Manhattan": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "check_input_dim"], [38, 2, 1, "", "check_output_dim"], [38, 2, 1, "", "fit"], [38, 2, 1, "", "forward"], [38, 3, 1, "", "input_dim"], [38, 2, 1, "", "load"], [38, 3, 1, "", "output_dim"], [38, 2, 1, "", "score"], [38, 2, 1, "", "serialize"], [38, 2, 1, "", "spectra_to_array"]], "cuvis_ai.distance.distance.Minkowski": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "check_input_dim"], [39, 2, 1, "", "check_output_dim"], [39, 2, 1, "", "fit"], [39, 2, 1, "", "forward"], [39, 3, 1, "", "input_dim"], [39, 2, 1, "", "load"], [39, 3, 1, "", "output_dim"], [39, 2, 1, "", "score"], [39, 2, 1, "", "serialize"], [39, 2, 1, "", "spectra_to_array"]], "cuvis_ai.distance.distance.SpectralAngle": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "check_input_dim"], [40, 2, 1, "", "check_output_dim"], [40, 2, 1, "", "fit"], [40, 2, 1, "", "forward"], [40, 3, 1, "", "input_dim"], [40, 2, 1, "", "load"], [40, 3, 1, "", "output_dim"], [40, 2, 1, "", "score"], [40, 2, 1, "", "serialize"], [40, 2, 1, "", "spectra_to_array"]], "cuvis_ai.node": [[42, 0, 0, "-", "Consumers"], [48, 0, 0, "-", "node"]], "cuvis_ai.node.Consumers": [[43, 1, 1, "", "CubeConsumer"], [44, 1, 1, "", "LabelConsumer"], [45, 1, 1, "", "LabelConsumerInference"], [46, 1, 1, "", "MetadataConsumer"], [47, 1, 1, "", "MetadataConsumerInference"]], "cuvis_ai.node.Consumers.CubeConsumer": [[43, 2, 1, "", "__init__"]], "cuvis_ai.node.Consumers.LabelConsumer": [[44, 2, 1, "", "__init__"]], "cuvis_ai.node.Consumers.LabelConsumerInference": [[45, 2, 1, "", "__init__"]], "cuvis_ai.node.Consumers.MetadataConsumer": [[46, 2, 1, "", "__init__"]], "cuvis_ai.node.Consumers.MetadataConsumerInference": [[47, 2, 1, "", "__init__"]], "cuvis_ai.node.node": [[49, 1, 1, "", "Node"]], "cuvis_ai.node.node.Node": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "check_input_dim"], [49, 2, 1, "", "check_output_dim"], [49, 2, 1, "", "forward"], [49, 3, 1, "", "input_dim"], [49, 2, 1, "", "load"], [49, 3, 1, "", "output_dim"], [49, 2, 1, "", "serialize"]], "cuvis_ai.pipeline": [[51, 0, 0, "-", "graph"]], "cuvis_ai.pipeline.graph": [[52, 1, 1, "", "Graph"]], "cuvis_ai.pipeline.graph.Graph": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "add_base_node"], [52, 2, 1, "", "add_edge"], [52, 2, 1, "", "add_node"], [52, 2, 1, "", "delete_node"], [52, 2, 1, "", "fit"], [52, 2, 1, "", "forward"], [52, 2, 1, "", "load"], [52, 2, 1, "", "reconstruct_from_yaml"], [52, 2, 1, "", "reconstruct_stage"], [52, 2, 1, "", "serialize"], [52, 2, 1, "", "train"]], "cuvis_ai.preprocessor": [[54, 0, 0, "-", "base_preprocessor"], [56, 0, 0, "-", "nmf"], [58, 0, 0, "-", "pca"]], "cuvis_ai.preprocessor.base_preprocessor": [[55, 1, 1, "", "Preprocessor"]], "cuvis_ai.preprocessor.base_preprocessor.Preprocessor": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "fit"]], "cuvis_ai.preprocessor.nmf": [[57, 1, 1, "", "NMF"]], "cuvis_ai.preprocessor.nmf.NMF": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "check_input_dim"], [57, 2, 1, "", "check_output_dim"], [57, 2, 1, "", "fit"], [57, 2, 1, "", "forward"], [57, 3, 1, "", "input_dim"], [57, 2, 1, "", "load"], [57, 3, 1, "", "output_dim"], [57, 2, 1, "", "serialize"]], "cuvis_ai.preprocessor.pca": [[59, 1, 1, "", "PCA"]], "cuvis_ai.preprocessor.pca.PCA": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "check_input_dim"], [59, 2, 1, "", "check_output_dim"], [59, 2, 1, "", "fit"], [59, 2, 1, "", "forward"], [59, 3, 1, "", "input_dim"], [59, 2, 1, "", "load"], [59, 3, 1, "", "output_dim"], [59, 2, 1, "", "serialize"]], "cuvis_ai.supervised": [[61, 0, 0, "-", "base_supervised"], [63, 0, 0, "-", "lda"], [65, 0, 0, "-", "qda"], [67, 0, 0, "-", "skorch_supervised"], [69, 0, 0, "-", "svm"]], "cuvis_ai.supervised.base_supervised": [[62, 1, 1, "", "BaseSupervised"]], "cuvis_ai.supervised.base_supervised.BaseSupervised": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "fit"], [62, 2, 1, "", "forward"]], "cuvis_ai.supervised.lda": [[64, 1, 1, "", "LDA"]], "cuvis_ai.supervised.lda.LDA": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "check_input_dim"], [64, 2, 1, "", "check_output_dim"], [64, 2, 1, "", "fit"], [64, 2, 1, "", "forward"], [64, 3, 1, "", "input_dim"], [64, 2, 1, "", "load"], [64, 6, 1, "", "n_components"], [64, 3, 1, "", "output_dim"], [64, 2, 1, "", "serialize"], [64, 6, 1, "", "solver"]], "cuvis_ai.supervised.qda": [[66, 1, 1, "", "QDA"]], "cuvis_ai.supervised.qda.QDA": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "check_input_dim"], [66, 2, 1, "", "check_output_dim"], [66, 2, 1, "", "fit"], [66, 2, 1, "", "forward"], [66, 3, 1, "", "input_dim"], [66, 2, 1, "", "load"], [66, 3, 1, "", "output_dim"], [66, 2, 1, "", "serialize"]], "cuvis_ai.supervised.skorch_supervised": [[68, 1, 1, "", "SkorchSupervised"]], "cuvis_ai.supervised.skorch_supervised.SkorchSupervised": [[68, 2, 1, "", "__init__"], [68, 6, 1, "", "epochs"], [68, 2, 1, "", "fit"], [68, 2, 1, "", "forward"], [68, 2, 1, "", "load"], [68, 6, 1, "", "model"], [68, 6, 1, "", "model_args"], [68, 6, 1, "", "optimizer"], [68, 2, 1, "", "serialize"], [68, 6, 1, "", "verbose"]], "cuvis_ai.supervised.svm": [[70, 1, 1, "", "SVM"]], "cuvis_ai.supervised.svm.SVM": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "check_input_dim"], [70, 2, 1, "", "check_output_dim"], [70, 2, 1, "", "fit"], [70, 2, 1, "", "forward"], [70, 3, 1, "", "input_dim"], [70, 2, 1, "", "load"], [70, 3, 1, "", "output_dim"], [70, 2, 1, "", "serialize"]], "cuvis_ai.test": [[72, 0, 0, "-", "test_numpy_utils"], [74, 0, 0, "-", "test_pipeline_graph"], [75, 0, 0, "-", "test_preprocessor_structural"], [79, 0, 0, "-", "test_serialization"], [92, 0, 0, "-", "test_unsupervised_structural"]], "cuvis_ai.test.test_numpy_utils": [[73, 1, 1, "", "TestNumpyUtils"]], "cuvis_ai.test.test_numpy_utils.TestNumpyUtils": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "addClassCleanup"], [73, 2, 1, "", "addCleanup"], [73, 2, 1, "", "addTypeEqualityFunc"], [73, 2, 1, "", "assertAlmostEqual"], [73, 2, 1, "", "assertAlmostEquals"], [73, 2, 1, "", "assertCountEqual"], [73, 2, 1, "", "assertDictContainsSubset"], [73, 2, 1, "", "assertDictEqual"], [73, 2, 1, "", "assertEqual"], [73, 2, 1, "", "assertEquals"], [73, 2, 1, "", "assertFalse"], [73, 2, 1, "", "assertGreater"], [73, 2, 1, "", "assertGreaterEqual"], [73, 2, 1, "", "assertIn"], [73, 2, 1, "", "assertIs"], [73, 2, 1, "", "assertIsInstance"], [73, 2, 1, "", "assertIsNone"], [73, 2, 1, "", "assertIsNot"], [73, 2, 1, "", "assertIsNotNone"], [73, 2, 1, "", "assertLess"], [73, 2, 1, "", "assertLessEqual"], [73, 2, 1, "", "assertListEqual"], [73, 2, 1, "", "assertLogs"], [73, 2, 1, "", "assertMultiLineEqual"], [73, 2, 1, "", "assertNoLogs"], [73, 2, 1, "", "assertNotAlmostEqual"], [73, 2, 1, "", "assertNotAlmostEquals"], [73, 2, 1, "", "assertNotEqual"], [73, 2, 1, "", "assertNotEquals"], [73, 2, 1, "", "assertNotIn"], [73, 2, 1, "", "assertNotIsInstance"], [73, 2, 1, "", "assertNotRegex"], [73, 2, 1, "", "assertNotRegexpMatches"], [73, 2, 1, "", "assertRaises"], [73, 2, 1, "", "assertRaisesRegex"], [73, 2, 1, "", "assertRaisesRegexp"], [73, 2, 1, "", "assertRegex"], [73, 2, 1, "", "assertRegexpMatches"], [73, 2, 1, "", "assertSequenceEqual"], [73, 2, 1, "", "assertSetEqual"], [73, 2, 1, "", "assertTrue"], [73, 2, 1, "", "assertTupleEqual"], [73, 2, 1, "", "assertWarns"], [73, 2, 1, "", "assertWarnsRegex"], [73, 2, 1, "", "assert_"], [73, 2, 1, "", "countTestCases"], [73, 2, 1, "", "debug"], [73, 2, 1, "", "defaultTestResult"], [73, 2, 1, "", "doClassCleanups"], [73, 2, 1, "", "doCleanups"], [73, 2, 1, "", "fail"], [73, 2, 1, "", "failIf"], [73, 2, 1, "", "failIfAlmostEqual"], [73, 2, 1, "", "failIfEqual"], [73, 2, 1, "", "failUnless"], [73, 2, 1, "", "failUnlessAlmostEqual"], [73, 2, 1, "", "failUnlessEqual"], [73, 2, 1, "", "failUnlessRaises"], [73, 6, 1, "", "failureException"], [73, 2, 1, "", "id"], [73, 6, 1, "", "longMessage"], [73, 6, 1, "", "maxDiff"], [73, 2, 1, "", "run"], [73, 2, 1, "", "setUp"], [73, 2, 1, "", "setUpClass"], [73, 2, 1, "", "shortDescription"], [73, 2, 1, "", "skipTest"], [73, 2, 1, "", "subTest"], [73, 2, 1, "", "tearDown"], [73, 2, 1, "", "tearDownClass"], [73, 2, 1, "", "test_get_shape_without_batch"]], "cuvis_ai.test.test_preprocessor_structural": [[76, 1, 1, "", "TestPreprocessedNode"], [77, 1, 1, "", "TestUnsupervisedNMF"], [78, 1, 1, "", "TestUnsupervisedPCA"]], "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "setUp"], [76, 2, 1, "", "test_correct_input_dim"], [76, 2, 1, "", "test_correct_output_dim"], [76, 2, 1, "", "test_incorrect_input_dim"], [76, 2, 1, "", "test_initialization"], [76, 2, 1, "", "test_passthrough"]], "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "addClassCleanup"], [77, 2, 1, "", "addCleanup"], [77, 2, 1, "", "addTypeEqualityFunc"], [77, 2, 1, "", "assertAlmostEqual"], [77, 2, 1, "", "assertAlmostEquals"], [77, 2, 1, "", "assertCountEqual"], [77, 2, 1, "", "assertDictContainsSubset"], [77, 2, 1, "", "assertDictEqual"], [77, 2, 1, "", "assertEqual"], [77, 2, 1, "", "assertEquals"], [77, 2, 1, "", "assertFalse"], [77, 2, 1, "", "assertGreater"], [77, 2, 1, "", "assertGreaterEqual"], [77, 2, 1, "", "assertIn"], [77, 2, 1, "", "assertIs"], [77, 2, 1, "", "assertIsInstance"], [77, 2, 1, "", "assertIsNone"], [77, 2, 1, "", "assertIsNot"], [77, 2, 1, "", "assertIsNotNone"], [77, 2, 1, "", "assertLess"], [77, 2, 1, "", "assertLessEqual"], [77, 2, 1, "", "assertListEqual"], [77, 2, 1, "", "assertLogs"], [77, 2, 1, "", "assertMultiLineEqual"], [77, 2, 1, "", "assertNoLogs"], [77, 2, 1, "", "assertNotAlmostEqual"], [77, 2, 1, "", "assertNotAlmostEquals"], [77, 2, 1, "", "assertNotEqual"], [77, 2, 1, "", "assertNotEquals"], [77, 2, 1, "", "assertNotIn"], [77, 2, 1, "", "assertNotIsInstance"], [77, 2, 1, "", "assertNotRegex"], [77, 2, 1, "", "assertNotRegexpMatches"], [77, 2, 1, "", "assertRaises"], [77, 2, 1, "", "assertRaisesRegex"], [77, 2, 1, "", "assertRaisesRegexp"], [77, 2, 1, "", "assertRegex"], [77, 2, 1, "", "assertRegexpMatches"], [77, 2, 1, "", "assertSequenceEqual"], [77, 2, 1, "", "assertSetEqual"], [77, 2, 1, "", "assertTrue"], [77, 2, 1, "", "assertTupleEqual"], [77, 2, 1, "", "assertWarns"], [77, 2, 1, "", "assertWarnsRegex"], [77, 2, 1, "", "assert_"], [77, 2, 1, "", "countTestCases"], [77, 2, 1, "", "debug"], [77, 2, 1, "", "defaultTestResult"], [77, 2, 1, "", "doClassCleanups"], [77, 2, 1, "", "doCleanups"], [77, 2, 1, "", "fail"], [77, 2, 1, "", "failIf"], [77, 2, 1, "", "failIfAlmostEqual"], [77, 2, 1, "", "failIfEqual"], [77, 2, 1, "", "failUnless"], [77, 2, 1, "", "failUnlessAlmostEqual"], [77, 2, 1, "", "failUnlessEqual"], [77, 2, 1, "", "failUnlessRaises"], [77, 6, 1, "", "failureException"], [77, 2, 1, "", "id"], [77, 6, 1, "", "longMessage"], [77, 6, 1, "", "maxDiff"], [77, 2, 1, "", "run"], [77, 2, 1, "", "setUp"], [77, 2, 1, "", "setUpClass"], [77, 2, 1, "", "shortDescription"], [77, 2, 1, "", "skipTest"], [77, 2, 1, "", "subTest"], [77, 2, 1, "", "tearDown"], [77, 2, 1, "", "tearDownClass"], [77, 2, 1, "", "test_correct_input_dim"], [77, 2, 1, "", "test_correct_output_dim"], [77, 2, 1, "", "test_incorrect_input_dim"], [77, 2, 1, "", "test_initialization"], [77, 2, 1, "", "test_passthrough"]], "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "addClassCleanup"], [78, 2, 1, "", "addCleanup"], [78, 2, 1, "", "addTypeEqualityFunc"], [78, 2, 1, "", "assertAlmostEqual"], [78, 2, 1, "", "assertAlmostEquals"], [78, 2, 1, "", "assertCountEqual"], [78, 2, 1, "", "assertDictContainsSubset"], [78, 2, 1, "", "assertDictEqual"], [78, 2, 1, "", "assertEqual"], [78, 2, 1, "", "assertEquals"], [78, 2, 1, "", "assertFalse"], [78, 2, 1, "", "assertGreater"], [78, 2, 1, "", "assertGreaterEqual"], [78, 2, 1, "", "assertIn"], [78, 2, 1, "", "assertIs"], [78, 2, 1, "", "assertIsInstance"], [78, 2, 1, "", "assertIsNone"], [78, 2, 1, "", "assertIsNot"], [78, 2, 1, "", "assertIsNotNone"], [78, 2, 1, "", "assertLess"], [78, 2, 1, "", "assertLessEqual"], [78, 2, 1, "", "assertListEqual"], [78, 2, 1, "", "assertLogs"], [78, 2, 1, "", "assertMultiLineEqual"], [78, 2, 1, "", "assertNoLogs"], [78, 2, 1, "", "assertNotAlmostEqual"], [78, 2, 1, "", "assertNotAlmostEquals"], [78, 2, 1, "", "assertNotEqual"], [78, 2, 1, "", "assertNotEquals"], [78, 2, 1, "", "assertNotIn"], [78, 2, 1, "", "assertNotIsInstance"], [78, 2, 1, "", "assertNotRegex"], [78, 2, 1, "", "assertNotRegexpMatches"], [78, 2, 1, "", "assertRaises"], [78, 2, 1, "", "assertRaisesRegex"], [78, 2, 1, "", "assertRaisesRegexp"], [78, 2, 1, "", "assertRegex"], [78, 2, 1, "", "assertRegexpMatches"], [78, 2, 1, "", "assertSequenceEqual"], [78, 2, 1, "", "assertSetEqual"], [78, 2, 1, "", "assertTrue"], [78, 2, 1, "", "assertTupleEqual"], [78, 2, 1, "", "assertWarns"], [78, 2, 1, "", "assertWarnsRegex"], [78, 2, 1, "", "assert_"], [78, 2, 1, "", "countTestCases"], [78, 2, 1, "", "debug"], [78, 2, 1, "", "defaultTestResult"], [78, 2, 1, "", "doClassCleanups"], [78, 2, 1, "", "doCleanups"], [78, 2, 1, "", "fail"], [78, 2, 1, "", "failIf"], [78, 2, 1, "", "failIfAlmostEqual"], [78, 2, 1, "", "failIfEqual"], [78, 2, 1, "", "failUnless"], [78, 2, 1, "", "failUnlessAlmostEqual"], [78, 2, 1, "", "failUnlessEqual"], [78, 2, 1, "", "failUnlessRaises"], [78, 6, 1, "", "failureException"], [78, 2, 1, "", "id"], [78, 6, 1, "", "longMessage"], [78, 6, 1, "", "maxDiff"], [78, 2, 1, "", "run"], [78, 2, 1, "", "setUp"], [78, 2, 1, "", "setUpClass"], [78, 2, 1, "", "shortDescription"], [78, 2, 1, "", "skipTest"], [78, 2, 1, "", "subTest"], [78, 2, 1, "", "tearDown"], [78, 2, 1, "", "tearDownClass"], [78, 2, 1, "", "test_correct_input_dim"], [78, 2, 1, "", "test_correct_output_dim"], [78, 2, 1, "", "test_incorrect_input_dim"], [78, 2, 1, "", "test_initialization"], [78, 2, 1, "", "test_passthrough"]], "cuvis_ai.test.test_serialization": [[80, 1, 1, "", "TestNodeSerialization"], [81, 1, 1, "", "TestPreprocessorNMF"], [82, 1, 1, "", "TestPreprocessorPCA"], [83, 1, 1, "", "TestSupervisedLDA"], [84, 1, 1, "", "TestSupervisedQDA"], [85, 1, 1, "", "TestSupervisedSVM"], [86, 1, 1, "", "TestTransformationReflectance"], [87, 1, 1, "", "TestTransformationTorch"], [88, 1, 1, "", "TestTransformationTorchVision"], [89, 1, 1, "", "TestUnsupervisedGMM"], [90, 1, 1, "", "TestUnsupervisedKMeans"], [91, 1, 1, "", "TestUnsupervisedMeanShift"]], "cuvis_ai.test.test_serialization.TestNodeSerialization": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestPreprocessorNMF": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "addClassCleanup"], [81, 2, 1, "", "addCleanup"], [81, 2, 1, "", "addTypeEqualityFunc"], [81, 2, 1, "", "assertAlmostEqual"], [81, 2, 1, "", "assertAlmostEquals"], [81, 2, 1, "", "assertCountEqual"], [81, 2, 1, "", "assertDictContainsSubset"], [81, 2, 1, "", "assertDictEqual"], [81, 2, 1, "", "assertEqual"], [81, 2, 1, "", "assertEquals"], [81, 2, 1, "", "assertFalse"], [81, 2, 1, "", "assertGreater"], [81, 2, 1, "", "assertGreaterEqual"], [81, 2, 1, "", "assertIn"], [81, 2, 1, "", "assertIs"], [81, 2, 1, "", "assertIsInstance"], [81, 2, 1, "", "assertIsNone"], [81, 2, 1, "", "assertIsNot"], [81, 2, 1, "", "assertIsNotNone"], [81, 2, 1, "", "assertLess"], [81, 2, 1, "", "assertLessEqual"], [81, 2, 1, "", "assertListEqual"], [81, 2, 1, "", "assertLogs"], [81, 2, 1, "", "assertMultiLineEqual"], [81, 2, 1, "", "assertNoLogs"], [81, 2, 1, "", "assertNotAlmostEqual"], [81, 2, 1, "", "assertNotAlmostEquals"], [81, 2, 1, "", "assertNotEqual"], [81, 2, 1, "", "assertNotEquals"], [81, 2, 1, "", "assertNotIn"], [81, 2, 1, "", "assertNotIsInstance"], [81, 2, 1, "", "assertNotRegex"], [81, 2, 1, "", "assertNotRegexpMatches"], [81, 2, 1, "", "assertRaises"], [81, 2, 1, "", "assertRaisesRegex"], [81, 2, 1, "", "assertRaisesRegexp"], [81, 2, 1, "", "assertRegex"], [81, 2, 1, "", "assertRegexpMatches"], [81, 2, 1, "", "assertSequenceEqual"], [81, 2, 1, "", "assertSetEqual"], [81, 2, 1, "", "assertTrue"], [81, 2, 1, "", "assertTupleEqual"], [81, 2, 1, "", "assertWarns"], [81, 2, 1, "", "assertWarnsRegex"], [81, 2, 1, "", "assert_"], [81, 2, 1, "", "countTestCases"], [81, 2, 1, "", "debug"], [81, 2, 1, "", "defaultTestResult"], [81, 2, 1, "", "doClassCleanups"], [81, 2, 1, "", "doCleanups"], [81, 2, 1, "", "fail"], [81, 2, 1, "", "failIf"], [81, 2, 1, "", "failIfAlmostEqual"], [81, 2, 1, "", "failIfEqual"], [81, 2, 1, "", "failUnless"], [81, 2, 1, "", "failUnlessAlmostEqual"], [81, 2, 1, "", "failUnlessEqual"], [81, 2, 1, "", "failUnlessRaises"], [81, 6, 1, "", "failureException"], [81, 2, 1, "", "id"], [81, 6, 1, "", "longMessage"], [81, 6, 1, "", "maxDiff"], [81, 2, 1, "", "run"], [81, 2, 1, "", "setUp"], [81, 2, 1, "", "setUpClass"], [81, 2, 1, "", "shortDescription"], [81, 2, 1, "", "skipTest"], [81, 2, 1, "", "subTest"], [81, 2, 1, "", "tearDown"], [81, 2, 1, "", "tearDownClass"], [81, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestPreprocessorPCA": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "addClassCleanup"], [82, 2, 1, "", "addCleanup"], [82, 2, 1, "", "addTypeEqualityFunc"], [82, 2, 1, "", "assertAlmostEqual"], [82, 2, 1, "", "assertAlmostEquals"], [82, 2, 1, "", "assertCountEqual"], [82, 2, 1, "", "assertDictContainsSubset"], [82, 2, 1, "", "assertDictEqual"], [82, 2, 1, "", "assertEqual"], [82, 2, 1, "", "assertEquals"], [82, 2, 1, "", "assertFalse"], [82, 2, 1, "", "assertGreater"], [82, 2, 1, "", "assertGreaterEqual"], [82, 2, 1, "", "assertIn"], [82, 2, 1, "", "assertIs"], [82, 2, 1, "", "assertIsInstance"], [82, 2, 1, "", "assertIsNone"], [82, 2, 1, "", "assertIsNot"], [82, 2, 1, "", "assertIsNotNone"], [82, 2, 1, "", "assertLess"], [82, 2, 1, "", "assertLessEqual"], [82, 2, 1, "", "assertListEqual"], [82, 2, 1, "", "assertLogs"], [82, 2, 1, "", "assertMultiLineEqual"], [82, 2, 1, "", "assertNoLogs"], [82, 2, 1, "", "assertNotAlmostEqual"], [82, 2, 1, "", "assertNotAlmostEquals"], [82, 2, 1, "", "assertNotEqual"], [82, 2, 1, "", "assertNotEquals"], [82, 2, 1, "", "assertNotIn"], [82, 2, 1, "", "assertNotIsInstance"], [82, 2, 1, "", "assertNotRegex"], [82, 2, 1, "", "assertNotRegexpMatches"], [82, 2, 1, "", "assertRaises"], [82, 2, 1, "", "assertRaisesRegex"], [82, 2, 1, "", "assertRaisesRegexp"], [82, 2, 1, "", "assertRegex"], [82, 2, 1, "", "assertRegexpMatches"], [82, 2, 1, "", "assertSequenceEqual"], [82, 2, 1, "", "assertSetEqual"], [82, 2, 1, "", "assertTrue"], [82, 2, 1, "", "assertTupleEqual"], [82, 2, 1, "", "assertWarns"], [82, 2, 1, "", "assertWarnsRegex"], [82, 2, 1, "", "assert_"], [82, 2, 1, "", "countTestCases"], [82, 2, 1, "", "debug"], [82, 2, 1, "", "defaultTestResult"], [82, 2, 1, "", "doClassCleanups"], [82, 2, 1, "", "doCleanups"], [82, 2, 1, "", "fail"], [82, 2, 1, "", "failIf"], [82, 2, 1, "", "failIfAlmostEqual"], [82, 2, 1, "", "failIfEqual"], [82, 2, 1, "", "failUnless"], [82, 2, 1, "", "failUnlessAlmostEqual"], [82, 2, 1, "", "failUnlessEqual"], [82, 2, 1, "", "failUnlessRaises"], [82, 6, 1, "", "failureException"], [82, 2, 1, "", "id"], [82, 6, 1, "", "longMessage"], [82, 6, 1, "", "maxDiff"], [82, 2, 1, "", "run"], [82, 2, 1, "", "setUp"], [82, 2, 1, "", "setUpClass"], [82, 2, 1, "", "shortDescription"], [82, 2, 1, "", "skipTest"], [82, 2, 1, "", "subTest"], [82, 2, 1, "", "tearDown"], [82, 2, 1, "", "tearDownClass"], [82, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestSupervisedLDA": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "addClassCleanup"], [83, 2, 1, "", "addCleanup"], [83, 2, 1, "", "addTypeEqualityFunc"], [83, 2, 1, "", "assertAlmostEqual"], [83, 2, 1, "", "assertAlmostEquals"], [83, 2, 1, "", "assertCountEqual"], [83, 2, 1, "", "assertDictContainsSubset"], [83, 2, 1, "", "assertDictEqual"], [83, 2, 1, "", "assertEqual"], [83, 2, 1, "", "assertEquals"], [83, 2, 1, "", "assertFalse"], [83, 2, 1, "", "assertGreater"], [83, 2, 1, "", "assertGreaterEqual"], [83, 2, 1, "", "assertIn"], [83, 2, 1, "", "assertIs"], [83, 2, 1, "", "assertIsInstance"], [83, 2, 1, "", "assertIsNone"], [83, 2, 1, "", "assertIsNot"], [83, 2, 1, "", "assertIsNotNone"], [83, 2, 1, "", "assertLess"], [83, 2, 1, "", "assertLessEqual"], [83, 2, 1, "", "assertListEqual"], [83, 2, 1, "", "assertLogs"], [83, 2, 1, "", "assertMultiLineEqual"], [83, 2, 1, "", "assertNoLogs"], [83, 2, 1, "", "assertNotAlmostEqual"], [83, 2, 1, "", "assertNotAlmostEquals"], [83, 2, 1, "", "assertNotEqual"], [83, 2, 1, "", "assertNotEquals"], [83, 2, 1, "", "assertNotIn"], [83, 2, 1, "", "assertNotIsInstance"], [83, 2, 1, "", "assertNotRegex"], [83, 2, 1, "", "assertNotRegexpMatches"], [83, 2, 1, "", "assertRaises"], [83, 2, 1, "", "assertRaisesRegex"], [83, 2, 1, "", "assertRaisesRegexp"], [83, 2, 1, "", "assertRegex"], [83, 2, 1, "", "assertRegexpMatches"], [83, 2, 1, "", "assertSequenceEqual"], [83, 2, 1, "", "assertSetEqual"], [83, 2, 1, "", "assertTrue"], [83, 2, 1, "", "assertTupleEqual"], [83, 2, 1, "", "assertWarns"], [83, 2, 1, "", "assertWarnsRegex"], [83, 2, 1, "", "assert_"], [83, 2, 1, "", "countTestCases"], [83, 2, 1, "", "debug"], [83, 2, 1, "", "defaultTestResult"], [83, 2, 1, "", "doClassCleanups"], [83, 2, 1, "", "doCleanups"], [83, 2, 1, "", "fail"], [83, 2, 1, "", "failIf"], [83, 2, 1, "", "failIfAlmostEqual"], [83, 2, 1, "", "failIfEqual"], [83, 2, 1, "", "failUnless"], [83, 2, 1, "", "failUnlessAlmostEqual"], [83, 2, 1, "", "failUnlessEqual"], [83, 2, 1, "", "failUnlessRaises"], [83, 6, 1, "", "failureException"], [83, 2, 1, "", "id"], [83, 6, 1, "", "longMessage"], [83, 6, 1, "", "maxDiff"], [83, 2, 1, "", "run"], [83, 2, 1, "", "setUp"], [83, 2, 1, "", "setUpClass"], [83, 2, 1, "", "shortDescription"], [83, 2, 1, "", "skipTest"], [83, 2, 1, "", "subTest"], [83, 2, 1, "", "tearDown"], [83, 2, 1, "", "tearDownClass"], [83, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestSupervisedQDA": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "addClassCleanup"], [84, 2, 1, "", "addCleanup"], [84, 2, 1, "", "addTypeEqualityFunc"], [84, 2, 1, "", "assertAlmostEqual"], [84, 2, 1, "", "assertAlmostEquals"], [84, 2, 1, "", "assertCountEqual"], [84, 2, 1, "", "assertDictContainsSubset"], [84, 2, 1, "", "assertDictEqual"], [84, 2, 1, "", "assertEqual"], [84, 2, 1, "", "assertEquals"], [84, 2, 1, "", "assertFalse"], [84, 2, 1, "", "assertGreater"], [84, 2, 1, "", "assertGreaterEqual"], [84, 2, 1, "", "assertIn"], [84, 2, 1, "", "assertIs"], [84, 2, 1, "", "assertIsInstance"], [84, 2, 1, "", "assertIsNone"], [84, 2, 1, "", "assertIsNot"], [84, 2, 1, "", "assertIsNotNone"], [84, 2, 1, "", "assertLess"], [84, 2, 1, "", "assertLessEqual"], [84, 2, 1, "", "assertListEqual"], [84, 2, 1, "", "assertLogs"], [84, 2, 1, "", "assertMultiLineEqual"], [84, 2, 1, "", "assertNoLogs"], [84, 2, 1, "", "assertNotAlmostEqual"], [84, 2, 1, "", "assertNotAlmostEquals"], [84, 2, 1, "", "assertNotEqual"], [84, 2, 1, "", "assertNotEquals"], [84, 2, 1, "", "assertNotIn"], [84, 2, 1, "", "assertNotIsInstance"], [84, 2, 1, "", "assertNotRegex"], [84, 2, 1, "", "assertNotRegexpMatches"], [84, 2, 1, "", "assertRaises"], [84, 2, 1, "", "assertRaisesRegex"], [84, 2, 1, "", "assertRaisesRegexp"], [84, 2, 1, "", "assertRegex"], [84, 2, 1, "", "assertRegexpMatches"], [84, 2, 1, "", "assertSequenceEqual"], [84, 2, 1, "", "assertSetEqual"], [84, 2, 1, "", "assertTrue"], [84, 2, 1, "", "assertTupleEqual"], [84, 2, 1, "", "assertWarns"], [84, 2, 1, "", "assertWarnsRegex"], [84, 2, 1, "", "assert_"], [84, 2, 1, "", "countTestCases"], [84, 2, 1, "", "debug"], [84, 2, 1, "", "defaultTestResult"], [84, 2, 1, "", "doClassCleanups"], [84, 2, 1, "", "doCleanups"], [84, 2, 1, "", "fail"], [84, 2, 1, "", "failIf"], [84, 2, 1, "", "failIfAlmostEqual"], [84, 2, 1, "", "failIfEqual"], [84, 2, 1, "", "failUnless"], [84, 2, 1, "", "failUnlessAlmostEqual"], [84, 2, 1, "", "failUnlessEqual"], [84, 2, 1, "", "failUnlessRaises"], [84, 6, 1, "", "failureException"], [84, 2, 1, "", "id"], [84, 6, 1, "", "longMessage"], [84, 6, 1, "", "maxDiff"], [84, 2, 1, "", "run"], [84, 2, 1, "", "setUp"], [84, 2, 1, "", "setUpClass"], [84, 2, 1, "", "shortDescription"], [84, 2, 1, "", "skipTest"], [84, 2, 1, "", "subTest"], [84, 2, 1, "", "tearDown"], [84, 2, 1, "", "tearDownClass"], [84, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestSupervisedSVM": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "addClassCleanup"], [85, 2, 1, "", "addCleanup"], [85, 2, 1, "", "addTypeEqualityFunc"], [85, 2, 1, "", "assertAlmostEqual"], [85, 2, 1, "", "assertAlmostEquals"], [85, 2, 1, "", "assertCountEqual"], [85, 2, 1, "", "assertDictContainsSubset"], [85, 2, 1, "", "assertDictEqual"], [85, 2, 1, "", "assertEqual"], [85, 2, 1, "", "assertEquals"], [85, 2, 1, "", "assertFalse"], [85, 2, 1, "", "assertGreater"], [85, 2, 1, "", "assertGreaterEqual"], [85, 2, 1, "", "assertIn"], [85, 2, 1, "", "assertIs"], [85, 2, 1, "", "assertIsInstance"], [85, 2, 1, "", "assertIsNone"], [85, 2, 1, "", "assertIsNot"], [85, 2, 1, "", "assertIsNotNone"], [85, 2, 1, "", "assertLess"], [85, 2, 1, "", "assertLessEqual"], [85, 2, 1, "", "assertListEqual"], [85, 2, 1, "", "assertLogs"], [85, 2, 1, "", "assertMultiLineEqual"], [85, 2, 1, "", "assertNoLogs"], [85, 2, 1, "", "assertNotAlmostEqual"], [85, 2, 1, "", "assertNotAlmostEquals"], [85, 2, 1, "", "assertNotEqual"], [85, 2, 1, "", "assertNotEquals"], [85, 2, 1, "", "assertNotIn"], [85, 2, 1, "", "assertNotIsInstance"], [85, 2, 1, "", "assertNotRegex"], [85, 2, 1, "", "assertNotRegexpMatches"], [85, 2, 1, "", "assertRaises"], [85, 2, 1, "", "assertRaisesRegex"], [85, 2, 1, "", "assertRaisesRegexp"], [85, 2, 1, "", "assertRegex"], [85, 2, 1, "", "assertRegexpMatches"], [85, 2, 1, "", "assertSequenceEqual"], [85, 2, 1, "", "assertSetEqual"], [85, 2, 1, "", "assertTrue"], [85, 2, 1, "", "assertTupleEqual"], [85, 2, 1, "", "assertWarns"], [85, 2, 1, "", "assertWarnsRegex"], [85, 2, 1, "", "assert_"], [85, 2, 1, "", "countTestCases"], [85, 2, 1, "", "debug"], [85, 2, 1, "", "defaultTestResult"], [85, 2, 1, "", "doClassCleanups"], [85, 2, 1, "", "doCleanups"], [85, 2, 1, "", "fail"], [85, 2, 1, "", "failIf"], [85, 2, 1, "", "failIfAlmostEqual"], [85, 2, 1, "", "failIfEqual"], [85, 2, 1, "", "failUnless"], [85, 2, 1, "", "failUnlessAlmostEqual"], [85, 2, 1, "", "failUnlessEqual"], [85, 2, 1, "", "failUnlessRaises"], [85, 6, 1, "", "failureException"], [85, 2, 1, "", "id"], [85, 6, 1, "", "longMessage"], [85, 6, 1, "", "maxDiff"], [85, 2, 1, "", "run"], [85, 2, 1, "", "setUp"], [85, 2, 1, "", "setUpClass"], [85, 2, 1, "", "shortDescription"], [85, 2, 1, "", "skipTest"], [85, 2, 1, "", "subTest"], [85, 2, 1, "", "tearDown"], [85, 2, 1, "", "tearDownClass"], [85, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestTransformationReflectance": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "addClassCleanup"], [86, 2, 1, "", "addCleanup"], [86, 2, 1, "", "addTypeEqualityFunc"], [86, 2, 1, "", "assertAlmostEqual"], [86, 2, 1, "", "assertAlmostEquals"], [86, 2, 1, "", "assertCountEqual"], [86, 2, 1, "", "assertDictContainsSubset"], [86, 2, 1, "", "assertDictEqual"], [86, 2, 1, "", "assertEqual"], [86, 2, 1, "", "assertEquals"], [86, 2, 1, "", "assertFalse"], [86, 2, 1, "", "assertGreater"], [86, 2, 1, "", "assertGreaterEqual"], [86, 2, 1, "", "assertIn"], [86, 2, 1, "", "assertIs"], [86, 2, 1, "", "assertIsInstance"], [86, 2, 1, "", "assertIsNone"], [86, 2, 1, "", "assertIsNot"], [86, 2, 1, "", "assertIsNotNone"], [86, 2, 1, "", "assertLess"], [86, 2, 1, "", "assertLessEqual"], [86, 2, 1, "", "assertListEqual"], [86, 2, 1, "", "assertLogs"], [86, 2, 1, "", "assertMultiLineEqual"], [86, 2, 1, "", "assertNoLogs"], [86, 2, 1, "", "assertNotAlmostEqual"], [86, 2, 1, "", "assertNotAlmostEquals"], [86, 2, 1, "", "assertNotEqual"], [86, 2, 1, "", "assertNotEquals"], [86, 2, 1, "", "assertNotIn"], [86, 2, 1, "", "assertNotIsInstance"], [86, 2, 1, "", "assertNotRegex"], [86, 2, 1, "", "assertNotRegexpMatches"], [86, 2, 1, "", "assertRaises"], [86, 2, 1, "", "assertRaisesRegex"], [86, 2, 1, "", "assertRaisesRegexp"], [86, 2, 1, "", "assertRegex"], [86, 2, 1, "", "assertRegexpMatches"], [86, 2, 1, "", "assertSequenceEqual"], [86, 2, 1, "", "assertSetEqual"], [86, 2, 1, "", "assertTrue"], [86, 2, 1, "", "assertTupleEqual"], [86, 2, 1, "", "assertWarns"], [86, 2, 1, "", "assertWarnsRegex"], [86, 2, 1, "", "assert_"], [86, 2, 1, "", "countTestCases"], [86, 2, 1, "", "debug"], [86, 2, 1, "", "defaultTestResult"], [86, 2, 1, "", "doClassCleanups"], [86, 2, 1, "", "doCleanups"], [86, 2, 1, "", "fail"], [86, 2, 1, "", "failIf"], [86, 2, 1, "", "failIfAlmostEqual"], [86, 2, 1, "", "failIfEqual"], [86, 2, 1, "", "failUnless"], [86, 2, 1, "", "failUnlessAlmostEqual"], [86, 2, 1, "", "failUnlessEqual"], [86, 2, 1, "", "failUnlessRaises"], [86, 6, 1, "", "failureException"], [86, 2, 1, "", "id"], [86, 6, 1, "", "longMessage"], [86, 6, 1, "", "maxDiff"], [86, 2, 1, "", "run"], [86, 2, 1, "", "setUp"], [86, 2, 1, "", "setUpClass"], [86, 2, 1, "", "shortDescription"], [86, 2, 1, "", "skipTest"], [86, 2, 1, "", "subTest"], [86, 2, 1, "", "tearDown"], [86, 2, 1, "", "tearDownClass"], [86, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestTransformationTorch": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "addClassCleanup"], [87, 2, 1, "", "addCleanup"], [87, 2, 1, "", "addTypeEqualityFunc"], [87, 2, 1, "", "assertAlmostEqual"], [87, 2, 1, "", "assertAlmostEquals"], [87, 2, 1, "", "assertCountEqual"], [87, 2, 1, "", "assertDictContainsSubset"], [87, 2, 1, "", "assertDictEqual"], [87, 2, 1, "", "assertEqual"], [87, 2, 1, "", "assertEquals"], [87, 2, 1, "", "assertFalse"], [87, 2, 1, "", "assertGreater"], [87, 2, 1, "", "assertGreaterEqual"], [87, 2, 1, "", "assertIn"], [87, 2, 1, "", "assertIs"], [87, 2, 1, "", "assertIsInstance"], [87, 2, 1, "", "assertIsNone"], [87, 2, 1, "", "assertIsNot"], [87, 2, 1, "", "assertIsNotNone"], [87, 2, 1, "", "assertLess"], [87, 2, 1, "", "assertLessEqual"], [87, 2, 1, "", "assertListEqual"], [87, 2, 1, "", "assertLogs"], [87, 2, 1, "", "assertMultiLineEqual"], [87, 2, 1, "", "assertNoLogs"], [87, 2, 1, "", "assertNotAlmostEqual"], [87, 2, 1, "", "assertNotAlmostEquals"], [87, 2, 1, "", "assertNotEqual"], [87, 2, 1, "", "assertNotEquals"], [87, 2, 1, "", "assertNotIn"], [87, 2, 1, "", "assertNotIsInstance"], [87, 2, 1, "", "assertNotRegex"], [87, 2, 1, "", "assertNotRegexpMatches"], [87, 2, 1, "", "assertRaises"], [87, 2, 1, "", "assertRaisesRegex"], [87, 2, 1, "", "assertRaisesRegexp"], [87, 2, 1, "", "assertRegex"], [87, 2, 1, "", "assertRegexpMatches"], [87, 2, 1, "", "assertSequenceEqual"], [87, 2, 1, "", "assertSetEqual"], [87, 2, 1, "", "assertTrue"], [87, 2, 1, "", "assertTupleEqual"], [87, 2, 1, "", "assertWarns"], [87, 2, 1, "", "assertWarnsRegex"], [87, 2, 1, "", "assert_"], [87, 2, 1, "", "countTestCases"], [87, 2, 1, "", "debug"], [87, 2, 1, "", "defaultTestResult"], [87, 2, 1, "", "doClassCleanups"], [87, 2, 1, "", "doCleanups"], [87, 2, 1, "", "fail"], [87, 2, 1, "", "failIf"], [87, 2, 1, "", "failIfAlmostEqual"], [87, 2, 1, "", "failIfEqual"], [87, 2, 1, "", "failUnless"], [87, 2, 1, "", "failUnlessAlmostEqual"], [87, 2, 1, "", "failUnlessEqual"], [87, 2, 1, "", "failUnlessRaises"], [87, 6, 1, "", "failureException"], [87, 2, 1, "", "id"], [87, 6, 1, "", "longMessage"], [87, 6, 1, "", "maxDiff"], [87, 2, 1, "", "run"], [87, 2, 1, "", "setUp"], [87, 2, 1, "", "setUpClass"], [87, 2, 1, "", "shortDescription"], [87, 2, 1, "", "skipTest"], [87, 2, 1, "", "subTest"], [87, 2, 1, "", "tearDown"], [87, 2, 1, "", "tearDownClass"], [87, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestTransformationTorchVision": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "addClassCleanup"], [88, 2, 1, "", "addCleanup"], [88, 2, 1, "", "addTypeEqualityFunc"], [88, 2, 1, "", "assertAlmostEqual"], [88, 2, 1, "", "assertAlmostEquals"], [88, 2, 1, "", "assertCountEqual"], [88, 2, 1, "", "assertDictContainsSubset"], [88, 2, 1, "", "assertDictEqual"], [88, 2, 1, "", "assertEqual"], [88, 2, 1, "", "assertEquals"], [88, 2, 1, "", "assertFalse"], [88, 2, 1, "", "assertGreater"], [88, 2, 1, "", "assertGreaterEqual"], [88, 2, 1, "", "assertIn"], [88, 2, 1, "", "assertIs"], [88, 2, 1, "", "assertIsInstance"], [88, 2, 1, "", "assertIsNone"], [88, 2, 1, "", "assertIsNot"], [88, 2, 1, "", "assertIsNotNone"], [88, 2, 1, "", "assertLess"], [88, 2, 1, "", "assertLessEqual"], [88, 2, 1, "", "assertListEqual"], [88, 2, 1, "", "assertLogs"], [88, 2, 1, "", "assertMultiLineEqual"], [88, 2, 1, "", "assertNoLogs"], [88, 2, 1, "", "assertNotAlmostEqual"], [88, 2, 1, "", "assertNotAlmostEquals"], [88, 2, 1, "", "assertNotEqual"], [88, 2, 1, "", "assertNotEquals"], [88, 2, 1, "", "assertNotIn"], [88, 2, 1, "", "assertNotIsInstance"], [88, 2, 1, "", "assertNotRegex"], [88, 2, 1, "", "assertNotRegexpMatches"], [88, 2, 1, "", "assertRaises"], [88, 2, 1, "", "assertRaisesRegex"], [88, 2, 1, "", "assertRaisesRegexp"], [88, 2, 1, "", "assertRegex"], [88, 2, 1, "", "assertRegexpMatches"], [88, 2, 1, "", "assertSequenceEqual"], [88, 2, 1, "", "assertSetEqual"], [88, 2, 1, "", "assertTrue"], [88, 2, 1, "", "assertTupleEqual"], [88, 2, 1, "", "assertWarns"], [88, 2, 1, "", "assertWarnsRegex"], [88, 2, 1, "", "assert_"], [88, 2, 1, "", "countTestCases"], [88, 2, 1, "", "debug"], [88, 2, 1, "", "defaultTestResult"], [88, 2, 1, "", "doClassCleanups"], [88, 2, 1, "", "doCleanups"], [88, 2, 1, "", "fail"], [88, 2, 1, "", "failIf"], [88, 2, 1, "", "failIfAlmostEqual"], [88, 2, 1, "", "failIfEqual"], [88, 2, 1, "", "failUnless"], [88, 2, 1, "", "failUnlessAlmostEqual"], [88, 2, 1, "", "failUnlessEqual"], [88, 2, 1, "", "failUnlessRaises"], [88, 6, 1, "", "failureException"], [88, 2, 1, "", "id"], [88, 6, 1, "", "longMessage"], [88, 6, 1, "", "maxDiff"], [88, 2, 1, "", "run"], [88, 2, 1, "", "setUp"], [88, 2, 1, "", "setUpClass"], [88, 2, 1, "", "shortDescription"], [88, 2, 1, "", "skipTest"], [88, 2, 1, "", "subTest"], [88, 2, 1, "", "tearDown"], [88, 2, 1, "", "tearDownClass"], [88, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestUnsupervisedGMM": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "addClassCleanup"], [89, 2, 1, "", "addCleanup"], [89, 2, 1, "", "addTypeEqualityFunc"], [89, 2, 1, "", "assertAlmostEqual"], [89, 2, 1, "", "assertAlmostEquals"], [89, 2, 1, "", "assertCountEqual"], [89, 2, 1, "", "assertDictContainsSubset"], [89, 2, 1, "", "assertDictEqual"], [89, 2, 1, "", "assertEqual"], [89, 2, 1, "", "assertEquals"], [89, 2, 1, "", "assertFalse"], [89, 2, 1, "", "assertGreater"], [89, 2, 1, "", "assertGreaterEqual"], [89, 2, 1, "", "assertIn"], [89, 2, 1, "", "assertIs"], [89, 2, 1, "", "assertIsInstance"], [89, 2, 1, "", "assertIsNone"], [89, 2, 1, "", "assertIsNot"], [89, 2, 1, "", "assertIsNotNone"], [89, 2, 1, "", "assertLess"], [89, 2, 1, "", "assertLessEqual"], [89, 2, 1, "", "assertListEqual"], [89, 2, 1, "", "assertLogs"], [89, 2, 1, "", "assertMultiLineEqual"], [89, 2, 1, "", "assertNoLogs"], [89, 2, 1, "", "assertNotAlmostEqual"], [89, 2, 1, "", "assertNotAlmostEquals"], [89, 2, 1, "", "assertNotEqual"], [89, 2, 1, "", "assertNotEquals"], [89, 2, 1, "", "assertNotIn"], [89, 2, 1, "", "assertNotIsInstance"], [89, 2, 1, "", "assertNotRegex"], [89, 2, 1, "", "assertNotRegexpMatches"], [89, 2, 1, "", "assertRaises"], [89, 2, 1, "", "assertRaisesRegex"], [89, 2, 1, "", "assertRaisesRegexp"], [89, 2, 1, "", "assertRegex"], [89, 2, 1, "", "assertRegexpMatches"], [89, 2, 1, "", "assertSequenceEqual"], [89, 2, 1, "", "assertSetEqual"], [89, 2, 1, "", "assertTrue"], [89, 2, 1, "", "assertTupleEqual"], [89, 2, 1, "", "assertWarns"], [89, 2, 1, "", "assertWarnsRegex"], [89, 2, 1, "", "assert_"], [89, 2, 1, "", "countTestCases"], [89, 2, 1, "", "debug"], [89, 2, 1, "", "defaultTestResult"], [89, 2, 1, "", "doClassCleanups"], [89, 2, 1, "", "doCleanups"], [89, 2, 1, "", "fail"], [89, 2, 1, "", "failIf"], [89, 2, 1, "", "failIfAlmostEqual"], [89, 2, 1, "", "failIfEqual"], [89, 2, 1, "", "failUnless"], [89, 2, 1, "", "failUnlessAlmostEqual"], [89, 2, 1, "", "failUnlessEqual"], [89, 2, 1, "", "failUnlessRaises"], [89, 6, 1, "", "failureException"], [89, 2, 1, "", "id"], [89, 6, 1, "", "longMessage"], [89, 6, 1, "", "maxDiff"], [89, 2, 1, "", "run"], [89, 2, 1, "", "setUp"], [89, 2, 1, "", "setUpClass"], [89, 2, 1, "", "shortDescription"], [89, 2, 1, "", "skipTest"], [89, 2, 1, "", "subTest"], [89, 2, 1, "", "tearDown"], [89, 2, 1, "", "tearDownClass"], [89, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "addClassCleanup"], [90, 2, 1, "", "addCleanup"], [90, 2, 1, "", "addTypeEqualityFunc"], [90, 2, 1, "", "assertAlmostEqual"], [90, 2, 1, "", "assertAlmostEquals"], [90, 2, 1, "", "assertCountEqual"], [90, 2, 1, "", "assertDictContainsSubset"], [90, 2, 1, "", "assertDictEqual"], [90, 2, 1, "", "assertEqual"], [90, 2, 1, "", "assertEquals"], [90, 2, 1, "", "assertFalse"], [90, 2, 1, "", "assertGreater"], [90, 2, 1, "", "assertGreaterEqual"], [90, 2, 1, "", "assertIn"], [90, 2, 1, "", "assertIs"], [90, 2, 1, "", "assertIsInstance"], [90, 2, 1, "", "assertIsNone"], [90, 2, 1, "", "assertIsNot"], [90, 2, 1, "", "assertIsNotNone"], [90, 2, 1, "", "assertLess"], [90, 2, 1, "", "assertLessEqual"], [90, 2, 1, "", "assertListEqual"], [90, 2, 1, "", "assertLogs"], [90, 2, 1, "", "assertMultiLineEqual"], [90, 2, 1, "", "assertNoLogs"], [90, 2, 1, "", "assertNotAlmostEqual"], [90, 2, 1, "", "assertNotAlmostEquals"], [90, 2, 1, "", "assertNotEqual"], [90, 2, 1, "", "assertNotEquals"], [90, 2, 1, "", "assertNotIn"], [90, 2, 1, "", "assertNotIsInstance"], [90, 2, 1, "", "assertNotRegex"], [90, 2, 1, "", "assertNotRegexpMatches"], [90, 2, 1, "", "assertRaises"], [90, 2, 1, "", "assertRaisesRegex"], [90, 2, 1, "", "assertRaisesRegexp"], [90, 2, 1, "", "assertRegex"], [90, 2, 1, "", "assertRegexpMatches"], [90, 2, 1, "", "assertSequenceEqual"], [90, 2, 1, "", "assertSetEqual"], [90, 2, 1, "", "assertTrue"], [90, 2, 1, "", "assertTupleEqual"], [90, 2, 1, "", "assertWarns"], [90, 2, 1, "", "assertWarnsRegex"], [90, 2, 1, "", "assert_"], [90, 2, 1, "", "countTestCases"], [90, 2, 1, "", "debug"], [90, 2, 1, "", "defaultTestResult"], [90, 2, 1, "", "doClassCleanups"], [90, 2, 1, "", "doCleanups"], [90, 2, 1, "", "fail"], [90, 2, 1, "", "failIf"], [90, 2, 1, "", "failIfAlmostEqual"], [90, 2, 1, "", "failIfEqual"], [90, 2, 1, "", "failUnless"], [90, 2, 1, "", "failUnlessAlmostEqual"], [90, 2, 1, "", "failUnlessEqual"], [90, 2, 1, "", "failUnlessRaises"], [90, 6, 1, "", "failureException"], [90, 2, 1, "", "id"], [90, 6, 1, "", "longMessage"], [90, 6, 1, "", "maxDiff"], [90, 2, 1, "", "run"], [90, 2, 1, "", "setUp"], [90, 2, 1, "", "setUpClass"], [90, 2, 1, "", "shortDescription"], [90, 2, 1, "", "skipTest"], [90, 2, 1, "", "subTest"], [90, 2, 1, "", "tearDown"], [90, 2, 1, "", "tearDownClass"], [90, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "addClassCleanup"], [91, 2, 1, "", "addCleanup"], [91, 2, 1, "", "addTypeEqualityFunc"], [91, 2, 1, "", "assertAlmostEqual"], [91, 2, 1, "", "assertAlmostEquals"], [91, 2, 1, "", "assertCountEqual"], [91, 2, 1, "", "assertDictContainsSubset"], [91, 2, 1, "", "assertDictEqual"], [91, 2, 1, "", "assertEqual"], [91, 2, 1, "", "assertEquals"], [91, 2, 1, "", "assertFalse"], [91, 2, 1, "", "assertGreater"], [91, 2, 1, "", "assertGreaterEqual"], [91, 2, 1, "", "assertIn"], [91, 2, 1, "", "assertIs"], [91, 2, 1, "", "assertIsInstance"], [91, 2, 1, "", "assertIsNone"], [91, 2, 1, "", "assertIsNot"], [91, 2, 1, "", "assertIsNotNone"], [91, 2, 1, "", "assertLess"], [91, 2, 1, "", "assertLessEqual"], [91, 2, 1, "", "assertListEqual"], [91, 2, 1, "", "assertLogs"], [91, 2, 1, "", "assertMultiLineEqual"], [91, 2, 1, "", "assertNoLogs"], [91, 2, 1, "", "assertNotAlmostEqual"], [91, 2, 1, "", "assertNotAlmostEquals"], [91, 2, 1, "", "assertNotEqual"], [91, 2, 1, "", "assertNotEquals"], [91, 2, 1, "", "assertNotIn"], [91, 2, 1, "", "assertNotIsInstance"], [91, 2, 1, "", "assertNotRegex"], [91, 2, 1, "", "assertNotRegexpMatches"], [91, 2, 1, "", "assertRaises"], [91, 2, 1, "", "assertRaisesRegex"], [91, 2, 1, "", "assertRaisesRegexp"], [91, 2, 1, "", "assertRegex"], [91, 2, 1, "", "assertRegexpMatches"], [91, 2, 1, "", "assertSequenceEqual"], [91, 2, 1, "", "assertSetEqual"], [91, 2, 1, "", "assertTrue"], [91, 2, 1, "", "assertTupleEqual"], [91, 2, 1, "", "assertWarns"], [91, 2, 1, "", "assertWarnsRegex"], [91, 2, 1, "", "assert_"], [91, 2, 1, "", "countTestCases"], [91, 2, 1, "", "debug"], [91, 2, 1, "", "defaultTestResult"], [91, 2, 1, "", "doClassCleanups"], [91, 2, 1, "", "doCleanups"], [91, 2, 1, "", "fail"], [91, 2, 1, "", "failIf"], [91, 2, 1, "", "failIfAlmostEqual"], [91, 2, 1, "", "failIfEqual"], [91, 2, 1, "", "failUnless"], [91, 2, 1, "", "failUnlessAlmostEqual"], [91, 2, 1, "", "failUnlessEqual"], [91, 2, 1, "", "failUnlessRaises"], [91, 6, 1, "", "failureException"], [91, 2, 1, "", "id"], [91, 6, 1, "", "longMessage"], [91, 6, 1, "", "maxDiff"], [91, 2, 1, "", "run"], [91, 2, 1, "", "setUp"], [91, 2, 1, "", "setUpClass"], [91, 2, 1, "", "shortDescription"], [91, 2, 1, "", "skipTest"], [91, 2, 1, "", "subTest"], [91, 2, 1, "", "tearDown"], [91, 2, 1, "", "tearDownClass"], [91, 2, 1, "", "test_serialization"]], "cuvis_ai.test.test_unsupervised_structural": [[93, 1, 1, "", "TestUnsupervisedGMM"], [94, 1, 1, "", "TestUnsupervisedKMeans"], [95, 1, 1, "", "TestUnsupervisedNode"]], "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "addClassCleanup"], [93, 2, 1, "", "addCleanup"], [93, 2, 1, "", "addTypeEqualityFunc"], [93, 2, 1, "", "assertAlmostEqual"], [93, 2, 1, "", "assertAlmostEquals"], [93, 2, 1, "", "assertCountEqual"], [93, 2, 1, "", "assertDictContainsSubset"], [93, 2, 1, "", "assertDictEqual"], [93, 2, 1, "", "assertEqual"], [93, 2, 1, "", "assertEquals"], [93, 2, 1, "", "assertFalse"], [93, 2, 1, "", "assertGreater"], [93, 2, 1, "", "assertGreaterEqual"], [93, 2, 1, "", "assertIn"], [93, 2, 1, "", "assertIs"], [93, 2, 1, "", "assertIsInstance"], [93, 2, 1, "", "assertIsNone"], [93, 2, 1, "", "assertIsNot"], [93, 2, 1, "", "assertIsNotNone"], [93, 2, 1, "", "assertLess"], [93, 2, 1, "", "assertLessEqual"], [93, 2, 1, "", "assertListEqual"], [93, 2, 1, "", "assertLogs"], [93, 2, 1, "", "assertMultiLineEqual"], [93, 2, 1, "", "assertNoLogs"], [93, 2, 1, "", "assertNotAlmostEqual"], [93, 2, 1, "", "assertNotAlmostEquals"], [93, 2, 1, "", "assertNotEqual"], [93, 2, 1, "", "assertNotEquals"], [93, 2, 1, "", "assertNotIn"], [93, 2, 1, "", "assertNotIsInstance"], [93, 2, 1, "", "assertNotRegex"], [93, 2, 1, "", "assertNotRegexpMatches"], [93, 2, 1, "", "assertRaises"], [93, 2, 1, "", "assertRaisesRegex"], [93, 2, 1, "", "assertRaisesRegexp"], [93, 2, 1, "", "assertRegex"], [93, 2, 1, "", "assertRegexpMatches"], [93, 2, 1, "", "assertSequenceEqual"], [93, 2, 1, "", "assertSetEqual"], [93, 2, 1, "", "assertTrue"], [93, 2, 1, "", "assertTupleEqual"], [93, 2, 1, "", "assertWarns"], [93, 2, 1, "", "assertWarnsRegex"], [93, 2, 1, "", "assert_"], [93, 2, 1, "", "countTestCases"], [93, 2, 1, "", "debug"], [93, 2, 1, "", "defaultTestResult"], [93, 2, 1, "", "doClassCleanups"], [93, 2, 1, "", "doCleanups"], [93, 2, 1, "", "fail"], [93, 2, 1, "", "failIf"], [93, 2, 1, "", "failIfAlmostEqual"], [93, 2, 1, "", "failIfEqual"], [93, 2, 1, "", "failUnless"], [93, 2, 1, "", "failUnlessAlmostEqual"], [93, 2, 1, "", "failUnlessEqual"], [93, 2, 1, "", "failUnlessRaises"], [93, 6, 1, "", "failureException"], [93, 2, 1, "", "id"], [93, 6, 1, "", "longMessage"], [93, 6, 1, "", "maxDiff"], [93, 2, 1, "", "run"], [93, 2, 1, "", "setUp"], [93, 2, 1, "", "setUpClass"], [93, 2, 1, "", "shortDescription"], [93, 2, 1, "", "skipTest"], [93, 2, 1, "", "subTest"], [93, 2, 1, "", "tearDown"], [93, 2, 1, "", "tearDownClass"], [93, 2, 1, "", "test_correct_input_dim"], [93, 2, 1, "", "test_correct_output_dim"], [93, 2, 1, "", "test_incorrect_input_dim"], [93, 2, 1, "", "test_initialization"], [93, 2, 1, "", "test_passthrough"]], "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "addClassCleanup"], [94, 2, 1, "", "addCleanup"], [94, 2, 1, "", "addTypeEqualityFunc"], [94, 2, 1, "", "assertAlmostEqual"], [94, 2, 1, "", "assertAlmostEquals"], [94, 2, 1, "", "assertCountEqual"], [94, 2, 1, "", "assertDictContainsSubset"], [94, 2, 1, "", "assertDictEqual"], [94, 2, 1, "", "assertEqual"], [94, 2, 1, "", "assertEquals"], [94, 2, 1, "", "assertFalse"], [94, 2, 1, "", "assertGreater"], [94, 2, 1, "", "assertGreaterEqual"], [94, 2, 1, "", "assertIn"], [94, 2, 1, "", "assertIs"], [94, 2, 1, "", "assertIsInstance"], [94, 2, 1, "", "assertIsNone"], [94, 2, 1, "", "assertIsNot"], [94, 2, 1, "", "assertIsNotNone"], [94, 2, 1, "", "assertLess"], [94, 2, 1, "", "assertLessEqual"], [94, 2, 1, "", "assertListEqual"], [94, 2, 1, "", "assertLogs"], [94, 2, 1, "", "assertMultiLineEqual"], [94, 2, 1, "", "assertNoLogs"], [94, 2, 1, "", "assertNotAlmostEqual"], [94, 2, 1, "", "assertNotAlmostEquals"], [94, 2, 1, "", "assertNotEqual"], [94, 2, 1, "", "assertNotEquals"], [94, 2, 1, "", "assertNotIn"], [94, 2, 1, "", "assertNotIsInstance"], [94, 2, 1, "", "assertNotRegex"], [94, 2, 1, "", "assertNotRegexpMatches"], [94, 2, 1, "", "assertRaises"], [94, 2, 1, "", "assertRaisesRegex"], [94, 2, 1, "", "assertRaisesRegexp"], [94, 2, 1, "", "assertRegex"], [94, 2, 1, "", "assertRegexpMatches"], [94, 2, 1, "", "assertSequenceEqual"], [94, 2, 1, "", "assertSetEqual"], [94, 2, 1, "", "assertTrue"], [94, 2, 1, "", "assertTupleEqual"], [94, 2, 1, "", "assertWarns"], [94, 2, 1, "", "assertWarnsRegex"], [94, 2, 1, "", "assert_"], [94, 2, 1, "", "countTestCases"], [94, 2, 1, "", "debug"], [94, 2, 1, "", "defaultTestResult"], [94, 2, 1, "", "doClassCleanups"], [94, 2, 1, "", "doCleanups"], [94, 2, 1, "", "fail"], [94, 2, 1, "", "failIf"], [94, 2, 1, "", "failIfAlmostEqual"], [94, 2, 1, "", "failIfEqual"], [94, 2, 1, "", "failUnless"], [94, 2, 1, "", "failUnlessAlmostEqual"], [94, 2, 1, "", "failUnlessEqual"], [94, 2, 1, "", "failUnlessRaises"], [94, 6, 1, "", "failureException"], [94, 2, 1, "", "id"], [94, 6, 1, "", "longMessage"], [94, 6, 1, "", "maxDiff"], [94, 2, 1, "", "run"], [94, 2, 1, "", "setUp"], [94, 2, 1, "", "setUpClass"], [94, 2, 1, "", "shortDescription"], [94, 2, 1, "", "skipTest"], [94, 2, 1, "", "subTest"], [94, 2, 1, "", "tearDown"], [94, 2, 1, "", "tearDownClass"], [94, 2, 1, "", "test_correct_input_dim"], [94, 2, 1, "", "test_correct_output_dim"], [94, 2, 1, "", "test_incorrect_input_dim"], [94, 2, 1, "", "test_initialization"], [94, 2, 1, "", "test_passthrough"]], "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "setUp"], [95, 2, 1, "", "test_correct_input_dim"], [95, 2, 1, "", "test_correct_output_dim"], [95, 2, 1, "", "test_incorrect_input_dim"], [95, 2, 1, "", "test_initialization"], [95, 2, 1, "", "test_passthrough"]], "cuvis_ai.transformation": [[97, 0, 0, "-", "base_transformation"], [99, 0, 0, "-", "reflectance"], [101, 0, 0, "-", "torch_transformation"], [103, 0, 0, "-", "torchvision_transformation"]], "cuvis_ai.transformation.base_transformation": [[98, 1, 1, "", "BaseTransformation"]], "cuvis_ai.transformation.base_transformation.BaseTransformation": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "fit"], [98, 2, 1, "", "forward"], [98, 2, 1, "", "input_dim"], [98, 2, 1, "", "load"], [98, 2, 1, "", "output_dim"], [98, 2, 1, "", "serialize"]], "cuvis_ai.transformation.reflectance": [[100, 1, 1, "", "Reflectance"]], "cuvis_ai.transformation.reflectance.Reflectance": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "check_input_dim"], [100, 2, 1, "", "check_output_dim"], [100, 2, 1, "", "fit"], [100, 2, 1, "", "forward"], [100, 3, 1, "", "input_dim"], [100, 2, 1, "", "load"], [100, 3, 1, "", "output_dim"], [100, 2, 1, "", "serialize"]], "cuvis_ai.transformation.torch_transformation": [[102, 1, 1, "", "TorchTransformation"]], "cuvis_ai.transformation.torch_transformation.TorchTransformation": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "check_input_dim"], [102, 2, 1, "", "check_output_dim"], [102, 2, 1, "", "fit"], [102, 2, 1, "", "forward"], [102, 3, 1, "", "input_dim"], [102, 2, 1, "", "load"], [102, 3, 1, "", "output_dim"], [102, 2, 1, "", "serialize"]], "cuvis_ai.transformation.torchvision_transformation": [[104, 1, 1, "", "TorchVisionTransformation"]], "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "check_input_dim"], [104, 2, 1, "", "check_output_dim"], [104, 2, 1, "", "fit"], [104, 2, 1, "", "forward"], [104, 3, 1, "", "input_dim"], [104, 2, 1, "", "load"], [104, 3, 1, "", "output_dim"], [104, 2, 1, "", "serialize"]], "cuvis_ai.tv_transforms": [[106, 0, 0, "-", "Bandpass"], [110, 0, 0, "-", "MultiBandpass"], [114, 0, 0, "-", "NormalizeStdDev"], [118, 0, 0, "-", "NormalizeToFloat"], [122, 0, 0, "-", "WavelengthList"]], "cuvis_ai.tv_transforms.Bandpass": [[107, 6, 1, "", "call_super_init"], [108, 6, 1, "", "dump_patches"], [109, 6, 1, "", "training"]], "cuvis_ai.tv_transforms.MultiBandpass": [[111, 6, 1, "", "call_super_init"], [112, 6, 1, "", "dump_patches"], [113, 6, 1, "", "training"]], "cuvis_ai.tv_transforms.NormalizeStdDev": [[115, 6, 1, "", "call_super_init"], [116, 6, 1, "", "dump_patches"], [117, 6, 1, "", "training"]], "cuvis_ai.tv_transforms.NormalizeToFloat": [[119, 6, 1, "", "call_super_init"], [120, 6, 1, "", "dump_patches"], [121, 6, 1, "", "training"]], "cuvis_ai.unsupervised": [[124, 0, 0, "-", "base_unsupervised"], [126, 0, 0, "-", "gmm"], [128, 0, 0, "-", "kmeans"], [130, 0, 0, "-", "mean_shift"]], "cuvis_ai.unsupervised.base_unsupervised": [[125, 1, 1, "", "BaseUnsupervised"]], "cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "fit"], [125, 2, 1, "", "forward"]], "cuvis_ai.unsupervised.gmm": [[127, 1, 1, "", "GMM"]], "cuvis_ai.unsupervised.gmm.GMM": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "check_input_dim"], [127, 2, 1, "", "check_output_dim"], [127, 2, 1, "", "fit"], [127, 2, 1, "", "forward"], [127, 3, 1, "", "input_dim"], [127, 2, 1, "", "load"], [127, 3, 1, "", "output_dim"], [127, 2, 1, "", "serialize"]], "cuvis_ai.unsupervised.kmeans": [[129, 1, 1, "", "KMeans"]], "cuvis_ai.unsupervised.kmeans.KMeans": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "check_input_dim"], [129, 2, 1, "", "check_output_dim"], [129, 2, 1, "", "fit"], [129, 2, 1, "", "forward"], [129, 3, 1, "", "input_dim"], [129, 2, 1, "", "load"], [129, 3, 1, "", "output_dim"], [129, 2, 1, "", "serialize"]], "cuvis_ai.unsupervised.mean_shift": [[131, 1, 1, "", "MeanShift"]], "cuvis_ai.unsupervised.mean_shift.MeanShift": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "check_input_dim"], [131, 2, 1, "", "check_output_dim"], [131, 2, 1, "", "fit"], [131, 2, 1, "", "forward"], [131, 3, 1, "", "input_dim"], [131, 2, 1, "", "load"], [131, 3, 1, "", "output_dim"], [131, 2, 1, "", "serialize"]], "cuvis_ai.utils": [[133, 0, 0, "-", "nn_config"], [137, 0, 0, "-", "numpy_utils"], [150, 0, 0, "-", "serializer"], [152, 0, 0, "-", "test"], [154, 0, 0, "-", "visualize"]], "cuvis_ai.utils.nn_config": [[134, 1, 1, "", "Adam"], [135, 1, 1, "", "Optimizer"], [136, 1, 1, "", "SGD"]], "cuvis_ai.utils.nn_config.Adam": [[134, 2, 1, "", "__init__"], [134, 6, 1, "", "alpha"], [134, 3, 1, "", "args"], [134, 6, 1, "", "beta_1"], [134, 6, 1, "", "beta_2"], [134, 6, 1, "", "epsilon"], [134, 6, 1, "", "lr"], [134, 3, 1, "", "name"], [134, 3, 1, "", "pytorch_args"], [134, 3, 1, "", "sklearn_args"]], "cuvis_ai.utils.nn_config.Optimizer": [[135, 2, 1, "", "__init__"], [135, 3, 1, "", "args"], [135, 3, 1, "", "name"], [135, 3, 1, "", "pytorch_args"], [135, 3, 1, "", "sklearn_args"]], "cuvis_ai.utils.nn_config.SGD": [[136, 2, 1, "", "__init__"], [136, 6, 1, "", "alpha"], [136, 3, 1, "", "args"], [136, 6, 1, "", "lr"], [136, 6, 1, "", "momentum"], [136, 3, 1, "", "name"], [136, 6, 1, "", "nesterov"], [136, 6, 1, "", "power_t"], [136, 3, 1, "", "pytorch_args"], [136, 3, 1, "", "sklearn_args"]], "cuvis_ai.utils.numpy_utils": [[138, 4, 1, "", "binary_mask_to_rle"], [139, 4, 1, "", "check_array_shape"], [140, 4, 1, "", "flatten_batch_and_labels"], [141, 4, 1, "", "flatten_batch_and_spatial"], [142, 4, 1, "", "flatten_labels"], [143, 4, 1, "", "flatten_spatial"], [144, 4, 1, "", "gen_coco_labels"], [145, 4, 1, "", "get_shape_without_batch"], [146, 4, 1, "", "unflatten_batch_and_labels"], [147, 4, 1, "", "unflatten_batch_and_spatial"], [148, 4, 1, "", "unflatten_labels"], [149, 4, 1, "", "unflatten_spatial"]], "cuvis_ai.utils.serializer": [[151, 1, 1, "", "Serializer"]], "cuvis_ai.utils.serializer.Serializer": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "load_node"], [151, 2, 1, "", "serialize_node"]], "cuvis_ai.utils.test": [[153, 4, 1, "", "get_np_dummy_data"]], "cuvis_ai.utils.visualize": [[155, 4, 1, "", "visualize_features"], [156, 4, 1, "", "visualize_image"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "terms": {"": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "0": [17, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 134, 136], "0001": [134, 136], "001": [134, 136], "08": 134, "1": [3, 17, 20, 22, 24, 26, 30, 49, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104], "10": 68, "147": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "1998": 37, "1e": 134, "2": [33, 40, 100], "20": 100, "3": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "37": 37, "5": [100, 136], "50": 100, "6": 37, "640": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "7": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "76990451": 138, "9": [134, 136], "971": 37, "977": 37, "999": 134, "A": [10, 37, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102], "At": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 158], "For": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104, 158, 160], "If": [3, 20, 22, 24, 26, 30, 33, 49, 52, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 157], "In": [10, 158], "No": [33, 34, 35, 36, 37, 38, 39, 40], "The": [10, 20, 22, 26, 30, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 157], "There": 33, "To": [52, 159], "__init__": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 52, 55, 57, 59, 62, 64, 66, 68, 70, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 100, 102, 104, 125, 127, 129, 131, 134, 135, 136, 151], "_description_": [127, 129, 131], "_summary_": [52, 125, 127, 129, 131], "_type_": [127, 129, 131], "abc": [20, 49, 55, 62, 125, 135], "about": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "abstract": [3, 20, 33, 49, 55, 62, 98, 125, 127, 129, 131, 135], "abstractdist": [34, 35, 36, 37, 38, 39, 40], "accomplish": 20, "accord": [40, 104], "ad": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104], "add": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "add_base_nod": 52, "add_edg": 52, "add_nod": 52, "addclasscleanup": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "addcleanup": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "addit": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "addtypeequalityfunc": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "after": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 158], "against": [33, 34, 35, 36, 37, 38, 39, 40], "ai": [52, 127, 129, 131, 158, 160], "algorithm": [33, 131, 157], "alia": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "all": [3, 10, 26, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 125, 127, 129, 131, 158], "all_agre": 26, "allow": [33, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 157, 158], "almost": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "along": [100, 102], "alongsid": 102, "alpha": [134, 136], "alreadi": [52, 144, 157], "also": [10, 26, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104], "an": [3, 20, 33, 35, 49, 52, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "analysi": 59, "andr\u00e9": 37, "angl": 40, "ani": [3, 10, 20, 22, 24, 52, 100, 102, 104, 125], "anoth": 158, "anytim": 102, "append": 144, "appli": [22, 26, 30, 37, 100, 102, 104, 127, 129, 131, 144], "applic": 157, "ar": [3, 22, 26, 33, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157, 158], "archiv": 52, "arg": [26, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102, 134, 135, 136], "argument": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "arrai": [3, 16, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 55, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149], "assert": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assert_": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertalmostequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertcountequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertdictcontainssubset": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertdictequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertfals": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertgreat": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertgreaterequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "asserti": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertin": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertionerror": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertisinst": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertisnon": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertisnot": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertisnotnon": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertless": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertlessequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertlistequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertlog": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertmultilineequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertnolog": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertnotalmostequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertnotequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertnotin": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertnotisinst": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertnotregex": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertnotregexpmatch": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertrais": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertraisesregex": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertraisesregexp": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertregex": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertregexpmatch": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertsequenceequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertsetequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "asserttru": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "asserttupleequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertwarn": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "assertwarnsregex": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "associ": [10, 52], "assum": 52, "at_least_n_agre": 26, "attribut": [3, 4, 8, 9, 10, 12, 13, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 68, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 106, 110, 114, 118, 122, 127, 129, 131, 134, 135, 136], "automat": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "avail": 102, "b": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "background": 144, "bad": 10, "bar": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "base": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 52, 55, 57, 59, 62, 64, 66, 68, 70, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 100, 102, 104, 125, 127, 129, 131, 134, 135, 136, 151], "basedataset": 17, "basedecid": [22, 24, 26, 30], "basesupervis": [64, 66, 68, 70], "basetransform": [100, 102, 104], "baseunsupervis": [127, 129, 131], "basi": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "basic": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "batch": 16, "batch_sampl": 17, "batch_siz": 17, "been": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "befor": [3, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "behavior": 33, "being": 52, "belong": 52, "beltr\u00e1n": 37, "bene": 40, "beta_1": 134, "beta_2": 134, "between": [40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100], "binari": [22, 138], "binary_mask": 138, "bit": 10, "bit_depth": 10, "block": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "bool": [3, 20, 22, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 68, 70, 100, 102, 104, 107, 108, 109, 111, 112, 113, 115, 116, 117, 119, 120, 121, 127, 129, 131, 136, 144], "bool_": 3, "boolean": 26, "both": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 158], "bound": 7, "box": 7, "break": 33, "bright": 100, "brighter": 100, "c": [127, 129, 131], "calcul": [10, 34, 36, 38, 40], "calculu": 100, "call": [33, 34, 35, 36, 37, 38, 39, 40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "callabl": [3, 26, 28, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104], "can": [10, 33, 35, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 131, 144, 158], "case": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "caught": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "channel": [10, 26, 30, 35, 127, 129, 131], "channel_count": 26, "check": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 131], "check_input_dim": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131], "check_output_dim": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131], "child": [52, 125], "children": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "choos": 30, "chosen": [26, 30], "citat": 37, "cl": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "clamp": 100, "clarifi": 144, "class": [2, 3, 10, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 150, 151, 157, 158], "classif": [22, 30], "classifi": [22, 26, 30, 125, 127, 129, 131], "classmethod": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "cleanup": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "cluster": [127, 129, 131], "cm": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "coco": [7, 144], "code": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "coeffici": 37, "collate_fn": 17, "collect": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "column": 10, "com": 138, "compar": [33, 34, 35, 36, 37, 38, 39, 40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "compat": 104, "complet": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "complex128": 3, "complex64": 3, "compon": 59, "composit": 104, "compris": 30, "comput": [10, 100], "concept": 157, "connect": 52, "consid": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "consist": 35, "constant": 102, "construct": [34, 36, 37, 38, 39, 40], "contain": [10, 33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 127, 129, 131, 144], "context": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "convert": [3, 7, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 64, 66, 70, 138], "copi": [52, 138], "correctli": 144, "correspond": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "cosin": 40, "counter": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "counttestcas": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "creat": [30, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157], "cu3": 10, "cube": [3, 10, 104], "cubeconsum": [20, 33, 55, 62, 98, 125], "cumul": 35, "current": [3, 33, 52], "custom": 26, "cuvi": [52, 127, 129, 131, 158, 160], "cuvis_ai": 159, "cuvis_col": 17, "d1": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "d2": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "dark": [10, 100], "darker": 100, "data": [20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 55, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 125, 127, 129, 131, 155, 158], "datacub": [34, 35, 36, 37, 38, 39, 40, 127, 129, 131], "dataload": [52, 104], "datapoint": 22, "dataset": [10, 17], "datatyp": [3, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "daylight": 37, "dead": 10, "debug": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "decid": 33, "decim": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "decis": [20, 22, 26, 27], "deconstruct": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "deem": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "deep": 158, "default": [33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 127, 129, 144], "defaulttestresult": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "defin": [33, 34, 35, 36, 37, 38, 39, 40, 52, 125, 127, 129, 131], "definit": 158, "degre": 39, "delet": 52, "delete_nod": 52, "delta": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "depend": [3, 20, 49, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104], "dependend": 10, "depth": 10, "describ": 10, "descript": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "determin": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "dict": [10, 11, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 57, 59, 64, 66, 68, 70, 100, 102, 104, 127, 129, 131, 151], "dictionari": [10, 33, 34, 35, 36, 37, 38, 39, 40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "differ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 158], "digit": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "dimens": [3, 16, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131], "dimension": 158, "direct": 52, "directli": 10, "directori": [22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 127, 129, 131], "do": [52, 158], "do_someth": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "doclasscleanup": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "docleanup": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "docstr": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "doe": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157], "drop_last": 17, "dtype": 3, "ducktyp": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "dump": [33, 34, 35, 36, 37, 38, 39, 40, 57, 59], "e": [10, 100, 158], "each": [10, 16, 26, 33, 34, 35, 36, 37, 38, 39, 40, 52], "easi": [157, 158], "edg": 52, "effect": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "either": 10, "element": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "emit": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "empti": [155, 156], "enclos": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "end": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "enforc": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "entri": 52, "environ": 159, "epoch": 68, "epsilon": 134, "equal": [22, 35, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "error": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "error_cod": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "etc": 10, "euclidean": 35, "even": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "event": 52, "everi": [33, 144], "everyth": 100, "exactli": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "exampl": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 160], "except": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "execut": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 158], "exercis": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "exist": [52, 144, 157], "expect": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 131], "expected_except": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "expected_regex": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "expected_warn": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "exposur": 10, "expr": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "expr1": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "expr2": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "express": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "extra": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "extra_repr": 3, "extract": 10, "factor": 57, "factori": 68, "fail": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failif": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failifalmostequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failifequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failunless": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failunlessalmostequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failunlessequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failunlessrais": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failur": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "failureexcept": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "fals": [17, 22, 68, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 107, 108, 111, 112, 115, 116, 119, 120, 144], "field": 16, "file": [10, 52, 57, 59, 127, 129, 131, 144], "filenam": [10, 11, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "filepath": [10, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131], "fileset": 10, "fileset_metadata": 11, "filter": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "final": 20, "first": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "fit": [20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 57, 59, 62, 64, 66, 68, 70, 98, 100, 102, 104, 125, 127, 129, 131], "fixtur": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "flag": 10, "float": [10, 100, 134, 136], "float16": 3, "float32": 3, "float64": 3, "flow": 52, "follow": 125, "foo": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "form": [127, 129, 131, 158], "format": [3, 10, 20, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 127, 129, 131], "formula": 40, "forward": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 57, 59, 62, 64, 66, 68, 70, 98, 100, 102, 104, 125, 127, 129, 131], "found": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "frame": 10, "framer": 10, "framework": [157, 158], "from": [3, 10, 20, 22, 24, 26, 30, 49, 52, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 138, 144, 157], "full": 3, "fulli": 52, "function": [5, 7, 9, 15, 17, 25, 33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102, 104, 137, 152, 154, 157], "function_nam": 102, "further": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "g": [10, 100, 158], "garc\u00eda": 37, "gaussian": 127, "gener": [100, 125, 144], "get": [3, 33, 34, 35, 36, 37, 38, 39, 40, 127, 129, 131, 157, 160], "get_datatyp": 3, "getlogg": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "give": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "given": [30, 35, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 127, 129, 131], "goal": 157, "good": 37, "graph": [22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 100, 102, 104], "h": [127, 129, 131], "ha": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 144], "handl": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "have": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "hearth": 158, "height": 35, "helper": 7, "here": 26, "hern\u00e1ndez": 37, "higher": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100], "highest": 30, "hook": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "how": 160, "hsi": 104, "http": 138, "hyperspectr": [127, 129, 131], "i": [3, 10, 20, 22, 24, 26, 30, 49, 52, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 157, 158], "id": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "identifi": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "ignor": 145, "imag": [33, 144], "img": 144, "img_nam": 144, "immedi": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "implement": [33, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 125], "import": [3, 20, 22, 24, 26, 30, 49, 57, 59, 64, 66, 70, 100, 102, 104], "includ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104], "index": [33, 34, 35, 36, 37, 38, 39, 40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "indic": 30, "info": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "inform": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157], "inherit": [127, 129, 131], "init": [33, 34, 35, 36, 37, 38, 39, 40], "initi": [33, 34, 35, 36, 37, 38, 39, 40, 52, 125, 127, 129, 131], "inner_modul": 151, "input": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 55, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131, 158], "input_dim": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 98, 100, 102, 104, 127, 129, 131], "inspect": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "instal": [52, 157], "instanc": [30, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "instead": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157], "int": [3, 10, 20, 26, 28, 30, 39, 49, 57, 59, 64, 68, 98, 100, 102, 104, 127, 129, 131, 139], "int16": 3, "int32": 3, "int64": 3, "int8": 3, "integ": 144, "integr": 10, "integration_time_u": 10, "interfac": 157, "intermediari": 52, "introduct": 160, "invent": 157, "invok": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "isinst": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "item": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "iter": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "its": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 144, 158], "itself": 52, "j": 37, "json": 144, "just": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104], "k": 129, "keep": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "kei": 10, "keyword": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "known": 33, "kwarg": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "l": 37, "l1": [34, 38], "l2": 36, "label": [20, 24, 52, 102, 104, 144, 155, 158], "label_nam": 144, "labelconsum": 62, "larg": 40, "larger": 22, "largest": 100, "learn": 158, "least": 52, "length": [35, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "less": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "level": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "lifo": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "like": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 55, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 131, 157, 158], "line": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "linear": 37, "lineno": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "link": 10, "list": [6, 10, 16, 33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 144, 151, 158], "list1": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "list2": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "load": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 57, 59, 64, 66, 68, 70, 98, 100, 102, 104, 127, 129, 131], "load_nod": 151, "locat": [26, 30, 52], "log": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "logger": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "logger_nam": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "logrecord": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "longmessag": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "look": [157, 160], "lower": 100, "lower_bond": 100, "lower_bound": 100, "lr": [134, 136], "m": [52, 159], "machin": 158, "mai": 26, "main": 52, "make": 20, "manag": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "map": [33, 34, 35, 36, 37, 38, 39, 40], "mapper": 40, "mark": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "mask": [138, 144], "mask_siz": 6, "match": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 131], "matric": [127, 129, 131], "matrix": [26, 30, 57], "maxdiff": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "maximum": 30, "mean": [100, 129, 131], "measur": [10, 33, 37, 40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "member": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "messag": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "meta": [10, 100, 104], "metadata": [10, 33, 34, 35, 36, 37, 38, 39, 40, 52, 100, 102, 104], "metadataconsum": 100, "metadataconsumerinfer": 100, "method": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 52, 55, 57, 59, 62, 64, 66, 68, 70, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 100, 102, 104, 125, 127, 129, 131, 134, 135, 136, 151, 157], "methodnam": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "metric": 33, "microsecond": 10, "might": [33, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "mismatch": [33, 34, 35, 36, 37, 38, 39, 40, 52], "miss": 10, "mixtur": 127, "mode": 10, "model": [37, 52, 68, 127, 129, 131], "model_arg": 68, "modul": [0, 1, 4, 8, 9, 12, 13, 18, 31, 41, 50, 53, 60, 68, 71, 96, 102, 105, 106, 110, 114, 118, 122, 123, 132, 158], "moment": 144, "momentum": 136, "more": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "most": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "msg": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "much": 157, "multi": [30, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "multipl": [10, 26, 33, 144], "must": [10, 35, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 125], "n": [28, 30, 39], "n_cluster": [127, 129], "n_compon": [57, 59, 64], "name": [10, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102, 134, 135, 136, 144, 151], "ndarrai": [6, 22, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 57, 59, 64, 66, 68, 70, 100, 102, 104, 127, 129, 131, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156], "need": [3, 20, 22, 24, 26, 30, 49, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 158], "neg": 57, "nesterov": 136, "new": [34, 35, 36, 37, 38, 39, 40, 52, 125, 127, 129, 131], "nicer": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "niev": 37, "nm": 35, "nn": 68, "nn_config": 68, "node": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 57, 59, 64, 66, 70, 100, 102, 104, 125, 127, 129, 131, 151, 157], "node2": 52, "non": 57, "none": [3, 17, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 57, 59, 64, 68, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 134, 136, 144, 151, 155], "norm": 39, "normal": [40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "nota": 40, "note": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104], "notion": 33, "np": [3, 22, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 100, 102, 104, 127, 129, 131], "num_work": 17, "number": [10, 26, 30, 35, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 127, 129, 131], "numer": 52, "numpi": [3, 10, 16, 22, 33, 34, 35, 36, 37, 38, 39, 40, 104, 144], "obj": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "object": [3, 10, 20, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 52, 57, 59, 64, 66, 70, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 144, 151], "occlud": 144, "often": 158, "omit": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "one": [10, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 158], "onli": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104], "oper": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "operand": 102, "operand_b": 102, "optic": 37, "optim": [68, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 134, 136], "option": [33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129], "order": [10, 39, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "orig_shap": [146, 147, 148, 149], "other": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157], "out": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "outer": 16, "output": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 131, 144], "output_dim": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 98, 100, 102, 104, 127, 129, 131], "output_dir": 144, "output_format": 3, "output_lambda": 3, "outputformat": 3, "overillumin": 10, "overwritten": 52, "own": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 144, 157], "param": [22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 131, 138, 144, 151], "paramet": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 55, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 125, 127, 129, 131], "parameter": [33, 34, 35, 36, 37, 38, 39, 40], "params_list": 151, "parent": 52, "part": 157, "pass": [33, 34, 35, 36, 37, 38, 39, 40, 52, 100, 102, 104, 125], "path": [10, 52, 127, 129, 131, 144], "pattern": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "pca": 158, "per": [10, 30], "percentag": 100, "pickle_inn": 151, "pip": 157, "pipelin": [104, 157], "pixel": [10, 100], "place": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "point": [26, 52], "polygon": 7, "posit": [3, 20, 22, 24, 26, 30, 35, 49, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104], "possibl": 157, "power_t": 136, "pred": 156, "predict": [20, 24, 127, 129, 131], "preprocess": [33, 49, 55], "preprocessor": 157, "present": 104, "prevent": 52, "princip": 59, "print": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "process": [10, 52, 158], "processing_mod": 10, "proper": 104, "properti": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131, 134, 135, 136], "provid": [10, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157], "purpos": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "put": 16, "python": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 159], "pytorch": [52, 102, 157], "pytorch_arg": [134, 135, 136], "quickli": 157, "quickstart": 157, "rais": [33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "rather": 158, "re": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157], "reason": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "rebuild": 52, "recommend": 159, "reconstruct": 52, "reconstruct_from_yaml": 52, "reconstruct_stag": 52, "record": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "recreat": [33, 34, 35, 36, 37, 38, 39, 40, 57, 59], "reduct": 158, "ref_spectra": [33, 34, 35, 36, 37, 38, 39, 40], "refer": [10, 33, 34, 35, 36, 37, 38, 39, 40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100], "reflect": 10, "regard": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "regex": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "regexp": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "regist": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "regular": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "rel": 33, "remain": 100, "remov": 52, "repositori": 160, "repres": [102, 104, 158], "represent": [3, 20, 22, 24, 26, 30, 49, 64, 66, 70], "requir": [33, 34, 35, 36, 37, 38, 39, 40, 100, 127, 129, 131], "residu": 52, "result": [22, 26, 30, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "resum": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "return": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 55, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 125, 127, 129, 131, 138, 144], "rle": [6, 138], "romero": 37, "root": [3, 10, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "root_path": 52, "round": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "row": 10, "rtype": 22, "rule": [26, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "run": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102, 159], "runtest": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "safe": [127, 129, 131], "sam": 40, "same": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 144], "sampl": [127, 129, 131], "sampler": 17, "save": [33, 34, 35, 36, 37, 38, 39, 40, 52, 102, 127, 129, 131, 144], "score": [33, 34, 35, 36, 37, 38, 39, 40], "second": [10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102], "secondari": [127, 129, 131], "seed": [127, 129], "segment": 7, "self": [55, 57, 59, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "seq1": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "seq2": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "seq_typ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "sequenc": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "sequenti": [33, 34, 35, 36, 37, 38, 39, 40, 52], "serial": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 57, 59, 64, 66, 68, 70, 98, 100, 102, 104, 127, 129, 131], "serial_dir": [57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131, 151], "serializ": [33, 34, 35, 36, 37, 38, 39, 40, 52], "serialize_nod": 151, "set": [3, 10, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100], "set1": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "set2": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "set_datatyp": 3, "setup": [73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95], "setupclass": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "shallow": 158, "shamelessli": 138, "shape": [3, 10, 20, 22, 24, 26, 30, 35, 49, 57, 59, 64, 66, 70, 100, 102, 104, 125, 127, 129, 131, 153], "share": [127, 129, 131, 144], "shift": 131, "shortdescript": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "should": [33, 34, 35, 36, 37, 38, 39, 40, 52, 57, 59, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 104, 127, 129, 131, 144], "shuffl": 17, "signific": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "silenc": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "similar": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 158], "similarli": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "simpl": [22, 30, 158, 160], "singl": [26, 30, 33, 104], "single_object_per_label": 144, "singular": [33, 34, 35, 36, 37, 38, 39, 40], "size": [7, 10, 16, 35, 52], "skew": 40, "skip": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "skiptest": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "sklearn": 157, "sklearn_arg": [134, 135, 136], "smaller": 22, "smallest": 100, "solver": 64, "some_attribut": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "someexcept": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "somewarn": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "sourc": [3, 6, 7, 10, 11, 16, 17, 20, 22, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 49, 52, 55, 57, 59, 62, 64, 66, 68, 70, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 100, 102, 104, 125, 127, 129, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156], "space": 39, "spatial": [26, 30], "specif": [3, 20, 22, 24, 26, 30, 49, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 157], "specifi": [3, 10, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "spectra": [33, 34, 35, 36, 37, 38, 39, 40], "spectra_to_arrai": [33, 34, 35, 36, 37, 38, 39, 40], "spectral": [33, 37, 40], "spectrum": 35, "stackoverflow": 138, "stage": 52, "start": [52, 157, 160], "state": 20, "static": [22, 33, 34, 35, 36, 37, 38, 39, 40], "staticmethod": 17, "store": [10, 33, 34, 35, 36, 37, 38, 39, 40, 52, 127, 129, 131], "str": [3, 10, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131, 144, 151], "strategi": 26, "string": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 127, 129, 131], "structur": 52, "style": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "subclass": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "subset": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "subtest": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "success": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "successfulli": 52, "successor": 52, "suffer": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "superset": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "supervis": 158, "support": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "svd": 64, "symmetri": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "take": [52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 160], "taken": 10, "target": 52, "target_transform": 3, "task": [20, 158], "teardown": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "teardownclass": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "tensor": [7, 104], "test": [37, 52], "test_correct_input_dim": [76, 77, 78, 93, 94, 95], "test_correct_output_dim": [76, 77, 78, 93, 94, 95], "test_dataload": 52, "test_get_shape_without_batch": 73, "test_incorrect_input_dim": [76, 77, 78, 93, 94, 95], "test_initi": [76, 77, 78, 93, 94, 95], "test_passthrough": [76, 77, 78, 93, 94, 95], "testcas": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "testnodeseri": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "testpreprocessednod": [77, 78], "testresult": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "testunsupervisednod": [93, 94], "text": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "th": 39, "than": [22, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100], "the_except": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "the_warn": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "thei": [33, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "themselv": 158, "thi": [10, 22, 24, 26, 30, 33, 35, 40, 52, 57, 59, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 157, 158, 159], "thing": 158, "those": 158, "threshold": [22, 100], "through": [33, 34, 35, 36, 37, 38, 39, 40, 52, 125], "time": [10, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "timeout": 17, "titl": [155, 156], "todo": 33, "torch": [52, 68, 102, 104], "torchvis": [7, 104], "toward": 40, "train": [52, 127, 129, 131, 158], "train_dataload": 52, "transform": [3, 20, 24, 49, 57, 59, 64, 66, 70, 125], "tree": 157, "tri": 157, "trigger": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "true": [22, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 136, 151], "tupl": [3, 6, 10, 20, 22, 24, 26, 30, 49, 52, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 98, 100, 102, 104, 139], "tuple1": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "tuple2": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "tutori": 157, "tv_transform": 104, "two": [33, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "type": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 125, 127, 129, 131, 158], "typeerror": 52, "typeobj": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "typic": 35, "uint8": 3, "unequ": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "unexpect": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "unexpected_regex": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "uniform": 157, "uniniti": 52, "union": [52, 68], "unless": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "unlik": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "unsupervis": 158, "unzip": [52, 127, 129, 131], "up": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "upper_bound": 100, "us": [10, 22, 26, 33, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 102, 104, 157, 158, 159], "user": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 100, 102, 104, 127, 129, 131], "usual": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "util": [26, 52, 68], "uuid": 52, "v2": 104, "valid": [3, 10, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 57, 59, 64, 66, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 127, 129, 131], "valu": [26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102], "valueerror": [33, 34, 35, 36, 37, 38, 39, 40, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "vari": 35, "vector": [35, 39], "verbos": 68, "version": 52, "video": 10, "virtual": 159, "visiondataset": 3, "w": [127, 129, 131], "wa": [10, 52, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "wai": 33, "wanted_shap": 139, "warn": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "warnclass": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "wavelength": [10, 35], "wavelengths_nm": 10, "we": 159, "weight": [34, 127, 129, 131], "well": 104, "wheel": 157, "when": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "where": [22, 33, 34, 35, 36, 37, 38, 39, 40, 127, 129, 131, 144], "whether": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "which": [33, 34, 35, 36, 37, 38, 39, 40, 73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 127, 129, 131, 144], "white": [10, 100], "whose": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "width": 35, "within": 104, "without": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "worker_init_fn": 17, "working_dir": [33, 34, 35, 36, 37, 38, 39, 40], "write": [127, 129, 131], "written": [127, 129, 131], "x": [3, 20, 22, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 49, 52, 55, 57, 59, 62, 64, 66, 68, 70, 98, 100, 102, 104, 125, 127, 129, 131], "y": [52, 62, 64, 66, 68, 70, 102], "yaml": [10, 33, 34, 35, 36, 37, 38, 39, 40, 52, 57, 59, 127, 129, 131], "yield": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "you": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 157], "your": 157, "zero": [73, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 144], "zip": 52, "\u03c0": 40}, "titles": ["cuvis_ai", "cuvis_ai.data", "cuvis_ai.data.BaseDataSet", "cuvis_ai.data.BaseDataSet.BaseDataSet", "cuvis_ai.data.CuvisDataSet", "cuvis_ai.data.Labels2TV", "cuvis_ai.data.Labels2TV.RLE2mask", "cuvis_ai.data.Labels2TV.convert_COCO2TV", "cuvis_ai.data.LiveCuvisDataLoader", "cuvis_ai.data.MetadataUtils", "cuvis_ai.data.MetadataUtils.C_ATTRIB_LIST", "cuvis_ai.data.MetadataUtils.metadataInit", "cuvis_ai.data.NumpyDataSet", "cuvis_ai.data.OutputFormat", "cuvis_ai.data.PublicDataSets", "cuvis_ai.data.utils_dataloader", "cuvis_ai.data.utils_dataloader.cuvis_collate", "cuvis_ai.data.utils_dataloader.get_dataloader_from_dataset", "cuvis_ai.deciders", "cuvis_ai.deciders.base_decider", "cuvis_ai.deciders.base_decider.BaseDecider", "cuvis_ai.deciders.binary_decider", "cuvis_ai.deciders.binary_decider.BinaryDecider", "cuvis_ai.deciders.cascaded_decider", "cuvis_ai.deciders.cascaded_decider.Cascaded", "cuvis_ai.deciders.combining_decider", "cuvis_ai.deciders.combining_decider.CombiningDecider", "cuvis_ai.deciders.combining_decider.all_agree", "cuvis_ai.deciders.combining_decider.at_least_n_agree", "cuvis_ai.deciders.multiclass_decider", "cuvis_ai.deciders.multiclass_decider.MultiClassDecider", "cuvis_ai.distance", "cuvis_ai.distance.distance", "cuvis_ai.distance.distance.AbstractDistance", "cuvis_ai.distance.distance.Canberra", "cuvis_ai.distance.distance.ECS", "cuvis_ai.distance.distance.Euclidean", "cuvis_ai.distance.distance.GFC", "cuvis_ai.distance.distance.Manhattan", "cuvis_ai.distance.distance.Minkowski", "cuvis_ai.distance.distance.SpectralAngle", "cuvis_ai.node", "cuvis_ai.node.Consumers", "cuvis_ai.node.Consumers.CubeConsumer", "cuvis_ai.node.Consumers.LabelConsumer", "cuvis_ai.node.Consumers.LabelConsumerInference", "cuvis_ai.node.Consumers.MetadataConsumer", "cuvis_ai.node.Consumers.MetadataConsumerInference", "cuvis_ai.node.node", "cuvis_ai.node.node.Node", "cuvis_ai.pipeline", "cuvis_ai.pipeline.graph", "cuvis_ai.pipeline.graph.Graph", "cuvis_ai.preprocessor", "cuvis_ai.preprocessor.base_preprocessor", "cuvis_ai.preprocessor.base_preprocessor.Preprocessor", "cuvis_ai.preprocessor.nmf", "cuvis_ai.preprocessor.nmf.NMF", "cuvis_ai.preprocessor.pca", "cuvis_ai.preprocessor.pca.PCA", "cuvis_ai.supervised", "cuvis_ai.supervised.base_supervised", "cuvis_ai.supervised.base_supervised.BaseSupervised", "cuvis_ai.supervised.lda", "cuvis_ai.supervised.lda.LDA", "cuvis_ai.supervised.qda", "cuvis_ai.supervised.qda.QDA", "cuvis_ai.supervised.skorch_supervised", "cuvis_ai.supervised.skorch_supervised.SkorchSupervised", "cuvis_ai.supervised.svm", "cuvis_ai.supervised.svm.SVM", "cuvis_ai.test", "cuvis_ai.test.test_numpy_utils", "cuvis_ai.test.test_numpy_utils.TestNumpyUtils", "cuvis_ai.test.test_pipeline_graph", "cuvis_ai.test.test_preprocessor_structural", "cuvis_ai.test.test_preprocessor_structural.TestPreprocessedNode", "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedNMF", "cuvis_ai.test.test_preprocessor_structural.TestUnsupervisedPCA", "cuvis_ai.test.test_serialization", "cuvis_ai.test.test_serialization.TestNodeSerialization", "cuvis_ai.test.test_serialization.TestPreprocessorNMF", "cuvis_ai.test.test_serialization.TestPreprocessorPCA", "cuvis_ai.test.test_serialization.TestSupervisedLDA", "cuvis_ai.test.test_serialization.TestSupervisedQDA", "cuvis_ai.test.test_serialization.TestSupervisedSVM", "cuvis_ai.test.test_serialization.TestTransformationReflectance", "cuvis_ai.test.test_serialization.TestTransformationTorch", "cuvis_ai.test.test_serialization.TestTransformationTorchVision", "cuvis_ai.test.test_serialization.TestUnsupervisedGMM", "cuvis_ai.test.test_serialization.TestUnsupervisedKMeans", "cuvis_ai.test.test_serialization.TestUnsupervisedMeanShift", "cuvis_ai.test.test_unsupervised_structural", "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedGMM", "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedKMeans", "cuvis_ai.test.test_unsupervised_structural.TestUnsupervisedNode", "cuvis_ai.transformation", "cuvis_ai.transformation.base_transformation", "cuvis_ai.transformation.base_transformation.BaseTransformation", "cuvis_ai.transformation.reflectance", "cuvis_ai.transformation.reflectance.Reflectance", "cuvis_ai.transformation.torch_transformation", "cuvis_ai.transformation.torch_transformation.TorchTransformation", "cuvis_ai.transformation.torchvision_transformation", "cuvis_ai.transformation.torchvision_transformation.TorchVisionTransformation", "cuvis_ai.tv_transforms", "cuvis_ai.tv_transforms.Bandpass", "cuvis_ai.tv_transforms.Bandpass.call_super_init", "cuvis_ai.tv_transforms.Bandpass.dump_patches", "cuvis_ai.tv_transforms.Bandpass.training", "cuvis_ai.tv_transforms.MultiBandpass", "cuvis_ai.tv_transforms.MultiBandpass.call_super_init", "cuvis_ai.tv_transforms.MultiBandpass.dump_patches", "cuvis_ai.tv_transforms.MultiBandpass.training", "cuvis_ai.tv_transforms.NormalizeStdDev", "cuvis_ai.tv_transforms.NormalizeStdDev.call_super_init", "cuvis_ai.tv_transforms.NormalizeStdDev.dump_patches", "cuvis_ai.tv_transforms.NormalizeStdDev.training", "cuvis_ai.tv_transforms.NormalizeToFloat", "cuvis_ai.tv_transforms.NormalizeToFloat.call_super_init", "cuvis_ai.tv_transforms.NormalizeToFloat.dump_patches", "cuvis_ai.tv_transforms.NormalizeToFloat.training", "cuvis_ai.tv_transforms.WavelengthList", "cuvis_ai.unsupervised", "cuvis_ai.unsupervised.base_unsupervised", "cuvis_ai.unsupervised.base_unsupervised.BaseUnsupervised", "cuvis_ai.unsupervised.gmm", "cuvis_ai.unsupervised.gmm.GMM", "cuvis_ai.unsupervised.kmeans", "cuvis_ai.unsupervised.kmeans.KMeans", "cuvis_ai.unsupervised.mean_shift", "cuvis_ai.unsupervised.mean_shift.MeanShift", "cuvis_ai.utils", "cuvis_ai.utils.nn_config", "cuvis_ai.utils.nn_config.Adam", "cuvis_ai.utils.nn_config.Optimizer", "cuvis_ai.utils.nn_config.SGD", "cuvis_ai.utils.numpy_utils", "cuvis_ai.utils.numpy_utils.binary_mask_to_rle", "cuvis_ai.utils.numpy_utils.check_array_shape", "cuvis_ai.utils.numpy_utils.flatten_batch_and_labels", "cuvis_ai.utils.numpy_utils.flatten_batch_and_spatial", "cuvis_ai.utils.numpy_utils.flatten_labels", "cuvis_ai.utils.numpy_utils.flatten_spatial", "cuvis_ai.utils.numpy_utils.gen_coco_labels", "cuvis_ai.utils.numpy_utils.get_shape_without_batch", "cuvis_ai.utils.numpy_utils.unflatten_batch_and_labels", "cuvis_ai.utils.numpy_utils.unflatten_batch_and_spatial", "cuvis_ai.utils.numpy_utils.unflatten_labels", "cuvis_ai.utils.numpy_utils.unflatten_spatial", "cuvis_ai.utils.serializer", "cuvis_ai.utils.serializer.Serializer", "cuvis_ai.utils.test", "cuvis_ai.utils.test.get_np_dummy_data", "cuvis_ai.utils.visualize", "cuvis_ai.utils.visualize.visualize_features", "cuvis_ai.utils.visualize.visualize_image", "Welcome to Cuvis AI\u2019s documentation!", "Concepts", "Installation", "Quickstart", "Tutorials"], "titleterms": {"": 157, "The": 158, "abstractdist": 33, "adam": 134, "ai": 157, "algorithm": 158, "all_agre": 27, "api": 157, "at_least_n_agre": 28, "bandpass": [106, 107, 108, 109], "base_decid": [19, 20], "base_preprocessor": [54, 55], "base_supervis": [61, 62], "base_transform": [97, 98], "base_unsupervis": [124, 125], "basedataset": [2, 3], "basedecid": 20, "basesupervis": 62, "basetransform": 98, "baseunsupervis": 125, "binary_decid": [21, 22], "binary_mask_to_rl": 138, "binarydecid": 22, "c_attrib_list": 10, "call_super_init": [107, 111, 115, 119], "canberra": 34, "cascad": 24, "cascaded_decid": [23, 24], "check_array_shap": 139, "combining_decid": [25, 26, 27, 28], "combiningdecid": 26, "concept": 158, "consum": [42, 43, 44, 45, 46, 47], "convert_coco2tv": 7, "cubeconsum": 43, "cuvi": 157, "cuvis_ai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "cuvis_col": 16, "cuvisdataset": 4, "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "decid": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "distanc": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "document": 157, "dump_patch": [108, 112, 116, 120], "ec": 35, "entri": 10, "euclidean": 36, "flatten_batch_and_label": 140, "flatten_batch_and_spati": 141, "flatten_label": 142, "flatten_spati": 143, "gen_coco_label": 144, "get_dataloader_from_dataset": 17, "get_np_dummy_data": 153, "get_shape_without_batch": 145, "gfc": 37, "gmm": [126, 127], "graph": [51, 52], "guid": 157, "instal": 159, "introduct": 157, "kmean": [128, 129], "labelconsum": 44, "labelconsumerinfer": 45, "labels2tv": [5, 6, 7], "lda": [63, 64], "livecuvisdataload": 8, "manhattan": 38, "mean_shift": [130, 131], "meanshift": 131, "metadataconsum": 46, "metadataconsumerinfer": 47, "metadatainit": 11, "metadatautil": [9, 10, 11], "minkowski": 39, "multibandpass": [110, 111, 112, 113], "multiclass_decid": [29, 30], "multiclassdecid": 30, "nmf": [56, 57], "nn_config": [133, 134, 135, 136], "node": [41, 42, 43, 44, 45, 46, 47, 48, 49, 158], "normalizestddev": [114, 115, 116, 117], "normalizetofloat": [118, 119, 120, 121], "numpy_util": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "numpydataset": 12, "optim": 135, "outputformat": 13, "paramat": 22, "pca": [58, 59], "pip": 159, "pipelin": [50, 51, 52, 158], "possibl": 10, "preprocessor": [53, 54, 55, 56, 57, 58, 59, 158], "publicdataset": 14, "qda": [65, 66], "quickstart": 160, "refer": 157, "reflect": [99, 100], "rle2mask": 6, "serial": [150, 151], "sgd": 136, "skorch_supervis": [67, 68], "skorchsupervis": 68, "spectralangl": 40, "supervis": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "svm": [69, 70], "test": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 152, 153], "test_numpy_util": [72, 73], "test_pipeline_graph": 74, "test_preprocessor_structur": [75, 76, 77, 78], "test_seri": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "test_unsupervised_structur": [92, 93, 94, 95], "testnodeseri": 80, "testnumpyutil": 73, "testpreprocessednod": 76, "testpreprocessornmf": 81, "testpreprocessorpca": 82, "testsupervisedlda": 83, "testsupervisedqda": 84, "testsupervisedsvm": 85, "testtransformationreflect": 86, "testtransformationtorch": 87, "testtransformationtorchvis": 88, "testunsupervisedgmm": [89, 93], "testunsupervisedkmean": [90, 94], "testunsupervisedmeanshift": 91, "testunsupervisednmf": 77, "testunsupervisednod": 95, "testunsupervisedpca": 78, "torch_transform": [101, 102], "torchtransform": 102, "torchvision_transform": [103, 104], "torchvisiontransform": 104, "train": [109, 113, 117, 121], "transform": [96, 97, 98, 99, 100, 101, 102, 103, 104], "tree": 158, "tutori": 161, "tv_transform": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "unflatten_batch_and_label": 146, "unflatten_batch_and_spati": 147, "unflatten_label": 148, "unflatten_spati": 149, "unsupervis": [123, 124, 125, 126, 127, 128, 129, 130, 131], "user": 157, "util": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "utils_dataload": [15, 16, 17], "visual": [154, 155, 156], "visualize_featur": 155, "visualize_imag": 156, "wavelengthlist": 122, "welcom": 157}})